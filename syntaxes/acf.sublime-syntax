%YAML 1.2
---
# See http://www.sublimetext.com/docs/syntax.html
name: ACF
file_extensions:
  - acf
scope: source.acf
contexts:
  main:
    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.acf
      push: double_quoted_string

    # Comments begin with a '//' and finish at the end of the line
    - match: '\/\/'
      scope: punctuation.definition.comment.acf
      push: line_comment

    # Block comments begin with a '/*' and finish at '*/'
    - match: '\/\*'
      scope: punctuation.definition.comment.begin.acf
      push: block_comment

    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(always|if|else|case|for|repeat|test|fun)\b'
      scope: keyword.control.acf

    # Numbers
    - match: '\b\d+\.\d+\b'
      scope: constant.real.acf

    - match: '\b(\d*(?!\.)b([01XzZ_]|(x(?!{)))+|\d*(?!\.)d[0-9_]+|\d*(?!\.)h([a-fA-F0-9XzZ_]|(x(?!{)))+|[0-9_]+(?!\.))(?=\b|x{)'
      scope: constant.numeric.acf

    - match: '\b[A-Z][A-Z0-9_]*([a-wyz]|(c(?!{)))([a-wyzA-Z0-9_]|(x(?!{)))*'
      scope: constant.global.acf

    - match: '\b[A-Z][A-Z0-9_]*'
      scope: constant.name.acf

    - match: '\b(pin)\b'
      scope: keyword.type.acf

    - match: '(([*!~+#\-\/:@|{}?^=><&\]\[,();]+)|(c\{|x\{)|(\&(gt|lt|amp);))+'
      scope: operator.acf

  double_quoted_string:
    - meta_scope: string.quoted.double.acf
    - match: '\\.'
      scope: constant.character.escape.acf
    - match: '"'
      scope: punctuation.definition.string.end.acf
      pop: true

  line_comment:
    - meta_scope: comment.line.acf
    - match: $
      pop: true

  block_comment:
    - meta_scope: comment.block.acf
    - match: '\*/'
      pop: true