{"fields":["title","body"],"pipeline":["trimmer","stopWordFilter","stemmer"],"ref":"id","version":"0.9.5","index":{"body":{"root":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":3.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.3166247903554}},"df":58,"'":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":6},"+":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}},",":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"4":{"docs":{},"df":0,",":{"docs":{},"df":0,"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{},"df":0,",":{"docs":{},"df":0,"7":{"docs":{},"df":0,",":{"docs":{},"df":0,"8":{"docs":{},"df":0,",":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},".":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":3},"3":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"3":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":2}},"4":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951}},"df":2}},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":6,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":3}}},"0":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":4,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951}},"df":7,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"1":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":3,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":2}}},"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}},":":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"s":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":3},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":3}},"v":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":6},"x":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/register-interface/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":3},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}},"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}},"4":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772}},"df":1}},"5":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"8":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}},"a":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1},"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979}},"df":2}},"b":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1}},"c":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}}},"–":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid-reference/":{"tf":6.6332495807108},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":58,"'":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":7},"+":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}}}}}}},",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":2,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":1}}}}}}},"1":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}},".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951}},"df":1}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951}},"df":1},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951}},"df":1}},"3":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2,"4":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1},"5":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":2,"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}},"6":{"docs":{},"df":0,".":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0}},"df":1}}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"8":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":3}}},"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}},"6":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"3":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":3},"4":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}},"8":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}},"0":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":24,".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1},"1":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":16,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":1,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":6}}}}}}}},"0":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":6,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0}},"df":2,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":2},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1,"1":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1},"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18}}},"u":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":6,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":2}}},"2":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951}},"df":1,"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}},"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"p":{"docs":{},"df":0,"@":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}},"a":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":1},"n":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":2}}},"1":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":7,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}},"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}}},"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":1}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1,"9":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}},"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"c":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"h":{"docs":{},"df":0,"x":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"m":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":3},"x":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":3,",":{"docs":{},"df":0,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}}},"4":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8,".":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772}},"df":1}},"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},"5":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"e":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}}},"5":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":10,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"6":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19,",":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,",":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"x":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}}}}}}},"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1},"5":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":1},"6":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":3}}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3}}}}},"k":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1,"6":{"docs":{},"df":0,"x":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1}}},"8":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951}},"df":1}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}},"9":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}},"0":{"docs":{},"df":0,"+":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":1}}}},"0":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979}},"df":1},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}}}},"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"3":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":1}}}}},"6":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1},"9":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},":":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2},"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}},"d":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772}},"df":4},"k":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2}}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":6},"s":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":6,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1},"v":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"–":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"2":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":42,"'":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":5,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}},"+":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},",":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"3":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1},"5":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":2},"6":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0}},"df":2},"8":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0}},"df":1}},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":1,"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772}},"df":3}},"8":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}},"/":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":10,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"/":{"docs":{"https://alchitry.com/boards/ft/":{"tf":2.0}},"df":1}},"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}}},"1":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":2},"5":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1},"6":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1},"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}}},"4":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":2,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772}},"df":2}}},"n":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":3,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"2":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}},"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}},"5":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2,"m":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":11,"h":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}},"5":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979}},"df":10,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}}}}},"5":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8},"6":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":6,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951}},"df":1}}},"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2}}}}}}}}}}}}}}}}}}}}}}}}}}},"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":5,"0":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951}},"df":1}}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"8":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5,"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"9":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2},":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":3}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"^":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1,"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":3},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772}},"df":3}},"3":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3},"7":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":14},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1,"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":2}},"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":18,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}},",":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}},"3":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":2},"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}},"2":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":12}},"5":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0}},"df":1}},"7":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0}},"df":3,"7":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5,"2":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":20,"2":{"docs":{},"df":0,"h":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}},"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}},"x":{"docs":{},"df":0,"1":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}}}},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772}},"df":5,",":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,",":{"docs":{},"df":0,"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}}},"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}},"5":{"docs":{},"df":0,"5":{"docs":{},"df":0,"4":{"docs":{},"df":0,"4":{"docs":{},"df":0,"3":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":3}}}}}}},"4":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"5":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0}},"df":3,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}},"6":{"docs":{"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979}},"df":1,"/":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}},"8":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"9":{"docs":{},"df":0,".":{"docs":{},"df":0,"4":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"a":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1},"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":4},"x":{"docs":{},"df":0,"2":{"docs":{},"df":0,"x":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"3":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"4":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,"h":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"{":{"docs":{},"df":0,"8":{"docs":{},"df":0,"h":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}}},"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":32,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1}},"x":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0}},"df":1}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}},"+":{"docs":{},"df":0,":":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},".":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0}},"df":4,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"8":{"docs":{},"df":0,"x":{"docs":{},"df":0,"3":{"docs":{},"df":0,"0":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3},"4":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"5":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951}},"df":1}}},"7":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},":":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}}},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":3}},"5":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":24,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1}}}},"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"6":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}}},",":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"7":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}},"0":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":11,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":3,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":3,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}}}}}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":1,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}},"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"d":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1},"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":16}}}},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":2}},"2":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"3":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}},"2":{"docs":{},"df":0,"9":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}},"6":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}},"7":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":3,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}},"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":6}},"6":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":17,"'":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951}},"df":1}}},"5":{"docs":{},"df":0,"g":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"4":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":7,"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907}},"df":2}}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":2}},"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}},"6":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":1,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"7":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":28,".":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1},"8":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{},"df":0,"µ":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"1":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772}},"df":1,"6":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"@":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178}},"df":1}}}}}}}},"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"5":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":1}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0}},"df":1}}}},"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"9":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951}},"df":1},":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"b":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"d":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"h":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"x":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":52,"'":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"5":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}}},"+":{"docs":{},"df":0,"g":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}},",":{"docs":{},"df":0,"1":{"docs":{},"df":0,"9":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}}},"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"8":{"docs":{},"df":0,",":{"docs":{},"df":0,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}},".":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":2,"d":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}}}}}},"5":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"8":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},":":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}}}},"1":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}},"d":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"2":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"3":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"5":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"4":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":3}}},"k":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1,"{":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}}},"9":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":16,"'":{"docs":{},"df":0,"d":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}}}}},"4":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}},"5":{"docs":{},"df":0,"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}},"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},"7":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":2},"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0}},"df":1}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":5},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":1}}},"a":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":3},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1},"4":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1,"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1},"9":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"2":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"9":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,":":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,":":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,":":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,":":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,":":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}}}}},"b":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"'":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":22}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13}}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":21}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":34}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3}}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772}},"df":9}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772}},"df":1,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":15,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2}},"v":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":20}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":61}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":46,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":5,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":7,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0}},"df":1}}}}}},"d":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":60,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/subtraction/":{"tf":3.3166247903554}},"df":2}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":22}},"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":7,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"[":{"docs":{},"df":0,"9":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"[":{"docs":{},"df":0,"9":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0}},"df":23}}}}},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":4}}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":3}}}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903}},"df":4,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":34,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0}},"df":2}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178}},"df":1}}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}},"k":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":5}},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":3.3166247903554},"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/home/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":3.3166247903554},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":2.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":56},"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":4}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":5}}}}}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":4}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"w":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.4142135623730951},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":62}},"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":10}}},"p":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":45}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"+":{"docs":{},"df":0,"f":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":7}}}}}},"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.3166247903554}},"df":51,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":2}},"d":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":27,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}},"p":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":11,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":8}},"y":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":7,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}}}},"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":3}},"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":2}}},"y":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":32}}},"s":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":7}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":39}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":8}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":9}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951}},"df":2},"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1},"r":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951}},"df":13,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":13}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":9}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":3,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}}}}}}}}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":3}}}}}},"v":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.3166247903554}},"df":7,"/":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":12},"f":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":32}},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":13,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903}},"df":4}}}}}},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":25}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.483314773547883},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":34,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0}},"df":4}},"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":10}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":2}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}},"x":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951}},"df":2}},"k":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":12},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.605551275463989}},"df":36}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":11}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":34,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0}},"df":7}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":10}}}}}}}},"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"u":{"docs":{},"df":0,"4":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}},"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"u":{"docs":{},"df":0,"4":{"docs":{},"df":0,"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"u":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0}},"df":2}}}},"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"u":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":4,"'":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":6}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":8}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":2},"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":4.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/boards/au/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":26,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0}},"df":2},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":3}},"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979}},"df":2}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}}}}}}}}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0}},"df":6,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1},"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":22}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":25}}},"c":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":6}}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":9}}},"r":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.23606797749979}},"df":14,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":3},".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":2}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}}}}}},"r":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}},"t":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772}},"df":6,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":3}}}}}}}}}}},"r":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2},"y":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979}},"df":1}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":4},"y":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":9}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":4,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}}}}}}}}}}}},"x":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}}},"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/background/subtraction/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17,"'":{"docs":{},"df":0,"c":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"x":{"docs":{},"df":0,"z":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3},"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}},"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2}}},"2":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1,"4":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"9":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"4":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":43,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951}},"df":1,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772}},"df":1}}}}},"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":3}}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":16,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":1}}}}}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":6}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4,"e":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":8},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":59,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1},"i":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":3,"c":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":51,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}}}}}}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}},"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":11}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":57,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0}},"df":17}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":71,"e":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":21,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":18}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":5}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":29}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":5.830951894845301}},"df":7,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}}},"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":4}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15}},"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772}},"df":5},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":39}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":2}}}}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":22,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":10}}}}},"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":15,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1},"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":4.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":18},"y":{"docs":{},"df":0,")":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":7.745966692414834},"https://alchitry.com/tutorials/lucid-reference/":{"tf":8.06225774829855},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":7.745966692414834},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":6.4031242374328485}},"df":70,"'":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772}},"df":1}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772}},"df":1}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.449489742783178}},"df":3}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":4}},"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178}},"df":4,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2}}}}}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}}}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":3.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.14142842854285},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":3.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.123105625617661}},"df":49,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":4}},"u":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":5},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1},"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":3.1622776601683795},"https://alchitry.com/boards/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":3.1622776601683795},"https://alchitry.com/boards/br/":{"tf":2.0},"https://alchitry.com/boards/cu/":{"tf":3.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-v2/":{"tf":3.605551275463989},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.872983346207417}},"df":54,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":7}},"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":6}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":4.123105625617661}},"df":4}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":49,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":3}}},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":20}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0}},"df":3},"d":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":6,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":17}},"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":4,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":3},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951}},"df":4}}}},"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}},"m":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":2,"'":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":20,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}},"e":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.6457513110645907}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":8}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":2}}}},"w":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":3}}}}}},"u":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":11,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979}},"df":18}}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":3.3166247903554},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":45,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1,",":{"docs":{},"df":0,"3":{"docs":{},"df":0,",":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1}}}}}}}}}}},"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":3}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":5}}},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":29}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":22}},"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":9}}},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":6}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1},"i":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903}},"df":12}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":6.6332495807108},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.0}},"df":26,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}}}}}}}},"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":2}},"x":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":4},"y":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":24}}},"z":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979}},"df":1}},"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18,"/":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4},"j":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2},"2":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"3":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"4":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":5}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":15}}},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":3.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":47}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":46}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0}},"df":1}}},"p":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}},"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.872983346207417}},"df":3}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0}},"df":10}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2,"d":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":32,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":3.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.23606797749979}},"df":4}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178}},"df":1}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":58}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979}},"df":5}}}},"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":5}}}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":31},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"d":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178}},"df":3,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"(":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":7,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"(":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"2":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979}},"df":4}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":9,"_":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":10}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":10}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979}},"df":7},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":64,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":7,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0}},"df":2,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":11}}},"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.7416573867739413}},"df":5},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":2.8284271247461903},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":50,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":3}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":13},"r":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":12}},"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":24}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":5,"n":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":4}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903}},"df":1},"n":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":3},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":34,"'":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":2,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3},"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"b":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178}},"df":1},"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0}},"df":1},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":45,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"p":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}},"k":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":16,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":6}}},"h":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.8284271247461903}},"df":1}}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":3,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}},"_":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2},"v":{"docs":{},"df":0,"3":{"docs":{},"df":0,"_":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1},"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":6.782329983125268},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":8.48528137423857},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":48,"/":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772}},"df":3}}}}},"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}}}},"g":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":8,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":19,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":4},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":7}},"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178}},"df":1}}},"m":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":3},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.6457513110645907},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":49,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":3}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979}},"df":8,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0}},"df":5}}}},"m":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951}},"df":1,"2":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1},"4":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":19}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":50},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":10,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":22}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":9}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":28,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0}},"df":6}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":11}},"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":4}},"r":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":9,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":4,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0}},"df":8}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":25},"x":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":22}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":25}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":4.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":4.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":29,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951}},"df":6,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":7}}}},"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8,"u":{"docs":{"https://alchitry.com/tutorials/background/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":3}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1},"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":14,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":4}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":3.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":31}}},"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}}}}},"j":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.605551275463989}},"df":54,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":4.123105625617661},"https://alchitry.com/news/alchitry-v2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907}},"df":6,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772}},"df":3}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":18}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":2,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":31,"'":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":20,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":23}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.7416573867739413}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":21}},"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":31}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":36,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":22},"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":10}},"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"s":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":4},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":3.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":22}},"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951}},"df":2}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":3}}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.605551275463989}},"df":3}}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30},"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979}},"df":2}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":5.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":5.196152422706632}},"df":19,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.8284271247461903}},"df":5}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13}}}},"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":24}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0}},"df":2}},"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":8,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}}}}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":24,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":6.164414002968976},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907}},"df":27,"'":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2},".":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979}},"df":2},"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.7416573867739413}},"df":2,"[":{"docs":{},"df":0,"$":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2},"_":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907}},"df":1},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.4641016151377544}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6}},"t":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":41}}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0}},"df":1,"=":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0}},"df":1,"=":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":5.916079783099616},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1}}},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.7416573867739413}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":3}},"z":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":60,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"x":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0}},"df":2,"'":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":2,"[":{"docs":{},"df":0,"7":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"+":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"+":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"u":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/boards/cu/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":24,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0}},"df":1},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":41}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":8}}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":12,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":3}},"y":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":41,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}}}}},"{":{"docs":{},"df":0,"2":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"4":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,",":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"4":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":19,"/":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":2,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":2,"2":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3}},"2":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.7320508075688772}},"df":1}}},"4":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":6}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":6.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.928203230275509},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/register-interface/":{"tf":3.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/serial-interface/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":4.242640687119285}},"df":36,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979}},"df":7}}}}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":2}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6,"3":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.242640687119285}},"df":5,"_":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"1":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1,"a":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"p":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"q":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"1":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"0":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"p":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"p":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":17}},"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979}},"df":5}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1},"u":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":6}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":15},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":16,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,")":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}}},"s":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":31}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178}},"df":3},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772}},"df":2}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":9}}},"e":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":41,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":28,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":6.855654600401044},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178}},"df":16,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":2}}},"m":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":14,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":3}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":5}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":5},"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":8}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.23606797749979},"https://alchitry.com/boards/cu/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":60,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4},"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":4}},"k":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":4}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":33}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":25,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":4}}}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":11}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"v":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}}}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":5}}}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"c":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":24,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}}}}},"f":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"c":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.605551275463989}},"df":24,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":8}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":6}}}},"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":18}}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":57,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":5}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":4}}}}}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4,"i":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":6.324555320336759},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":6.324555320336759},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":26,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"m":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3,")":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":14,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":8}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":3}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,")":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907}},"df":5,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":16,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":40}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":7}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":13}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":18}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":7}}}}}}},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0}},"df":3,"e":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0}},"df":13},"s":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":8}}}},"m":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":21,"c":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":18}}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":43}},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":4}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":6}}}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":63}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":37},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":8}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":21,"i":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3,"b":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":6.164414002968976},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":41,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":30}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}}}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":3}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0}},"df":2},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.898979485566356}},"df":2},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":6}}}},"w":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907}},"df":8,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4}}},"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":17,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178}},"df":2},"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":3.3166247903554},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":10}}}},"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":21,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":6}}}}}}},"s":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"8":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}},"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1,"4":{"docs":{},"df":0,"8":{"docs":{},"df":0,"a":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":4}},"e":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":14}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":21}},"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":2,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":6}}}}},"e":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.557438524302},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":5.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":71}},"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":13}}}}},"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":33,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":30},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":6}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":20}}}}},"c":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"h":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":3}}}}},"d":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0}},"df":25,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.6457513110645907}},"df":1},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":19,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":12}}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":18}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":12}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":19}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":21,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1}}}}}}}}},"f":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":7}}},"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":7}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772}},"df":1}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0}},"df":4,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951}},"df":4}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":40,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":20}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":21}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":21}},"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":28,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":14}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0}},"df":5,"'":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":4}}}}}},"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.449489742783178}},"df":19,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":8}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":5}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":30}}}},"s":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":9}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":7,"/":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":2}}}}}}}}}}}}}},"h":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":28,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":3,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":31},"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":2}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}}}},"x":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":36}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.0710678118654755},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":4.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":66}}}},"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1,"l":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":3},"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":22}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"s":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":18}},"t":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":22}},"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":10}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":5}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":7,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":7}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2}}},"o":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":3}},"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":8.12403840463596}},"df":2,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":13,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}},"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,".":{"docs":{},"df":0,")":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"x":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":2},"s":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":25}}},"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/br/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":16,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":6,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772}},"df":1}}}}},"y":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":6}},"f":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}}},"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903}},"df":1,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3}}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178}},"df":3}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":16},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":28}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"2":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":20},"s":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":5,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":18}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":10,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":14},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":32,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":23,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":28}}}},"b":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":13},"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}}}},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":17},"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979}},"df":4}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":38,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}}},"f":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.557438524302}},"df":1}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":7}}},"f":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":9}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.449489742783178},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":3.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":58,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0}},"df":16},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":35}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":36},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":10,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":16}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15},"m":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":4}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.0}},"df":77}}},"t":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":16},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":3}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":29,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951}},"df":1,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,"1":{"docs":{},"df":0,"5":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0}},"df":13},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":11}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"y":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":11}}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"p":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":20,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":13,"'":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":11}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":6,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}}}}}}}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":3,"s":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":13}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.0710678118654755},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":55}}}},"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":11},"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":2}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}},"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951}},"df":2},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":24,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":18,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178}},"df":3}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":2},"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":7}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":9}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":27,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":30,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3}}}}},"p":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1,"g":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.8284271247461903},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":2.449489742783178},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.7320508075688772},"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.6457513110645907},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":4.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.242640687119285}},"df":62,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}}}}}}}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":6,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,")":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":8,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":32,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}},"q":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.916079783099616},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":23,"y":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":7}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":16}},"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951}},"df":3,"6":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/boards/ft/":{"tf":2.0}},"df":1,"q":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":8,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/addition/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":34,".":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":17}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":3.7416573867739413},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":41,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}}}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}}},"z":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"g":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.449489742783178}},"df":13},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951}},"df":2}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":55}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":36}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}},"z":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1},"t":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1,"h":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":12}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":39,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":24}}}},"k":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3}}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":8,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":3},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":61,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":6}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":21},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":30},"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979}},"df":1,"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.605551275463989}},"df":3,"’":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":3}}}}}}},"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":2}}}},"p":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}},"y":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":14,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":12}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":7},"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0}},"df":5}}}},"y":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":3,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":3.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":5.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":8,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":7,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}},"u":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":3}}}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":2}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":8}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":8}}}},"t":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":9}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":5,"d":{"docs":{"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":2}}}}}},"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12,"0":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{},"df":0,"3":{"docs":{},"df":0,"4":{"docs":{},"df":0,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"7":{"docs":{},"df":0,"8":{"docs":{},"df":0,"9":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"c":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"x":{"docs":{},"df":0,"z":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"4":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"6":{"docs":{},"df":0,"9":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":16},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979}},"df":2,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17,"i":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17},"l":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":19,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":1}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":39}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":35,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":4}}},"s":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":24,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":2}}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":6,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":5},"m":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":7.0710678118654755},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":4,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},"1":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}},"2":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951}},"df":1}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":16,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951}},"df":8,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3,"d":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3},"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1,"’":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772}},"df":2}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178}},"df":11,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":2}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979}},"df":2,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"[":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":3}}}}}}}}}}}},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":41,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":3}}}},"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":59,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":10}}},"x":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":7,")":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":7}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}}}}},"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":1,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}},"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}}}}}},"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":43,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":6}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":4,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":12,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":4}}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":29},"e":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":4},"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":2,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3},"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":15},"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":8,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":7}}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0}},"df":4},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":4}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0}},"df":1}}},"s":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772}},"df":1,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0}},"df":1}},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903}},"df":1,"m":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,":":{"docs":{},"df":0,"/":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,"w":{"docs":{},"df":0,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"/":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":8}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"x":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1},"y":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}},"z":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951}},"df":1},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19}},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":23},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":12}},".":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2},"/":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}},"2":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":3}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":2}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.8284271247461903}},"df":8}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":23}}},"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":4.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":22,"e":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":20,"l":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":4}}},"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":14},"x":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}},"f":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":14,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}}}}}},"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":6}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":6}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":32}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":4,"c":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":3.3166247903554}},"df":1,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":54,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":7}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":12}}}}},"n":{"docs":{},"df":0,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,")":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}}}}}}},"5":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}}}},"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178}},"df":3,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":34},"s":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":7},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":16}},"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":7},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951}},"df":17}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":12}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":29}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":12}}}}}},"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3}}}}},"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":1}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":7,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":20}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":8,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}}}}}}}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.1622776601683795}},"df":20},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}},"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":9,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/addition/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":55,"'":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":6}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":23}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":3.0},"https://alchitry.com/tutorials/setup/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/setup/vivado/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":22},"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":16},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":32},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":51}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":7.745966692414834},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}}}}},"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":5,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"–":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}}},"l":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":8}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":16}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.916079783099616},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":40}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3}}}},"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":23},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979}},"df":2}}}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":13,"t":{"docs":{"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":12}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":5},"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":14}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":1},"l":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.6457513110645907},"https://alchitry.com/boards/cu/":{"tf":2.23606797749979},"https://alchitry.com/boards/io/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":26,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772}},"df":3,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"1":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"3":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"4":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772}},"df":3,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2},"1":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979}},"df":2,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2,"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0}},"df":3},"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178}},"df":2}}}}}}},"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903}},"df":2},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":2}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":2}}}}}}}}},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":7,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":3,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0}},"df":14,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":41}}},"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772}},"df":1},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951}},"df":26}}},"t":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":53,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}}},"e":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":10}},"h":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18}}}},"’":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}},"’":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}},"j":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":13,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}}}}},"d":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772}},"df":1}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":2}}}}}},"s":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":13,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"@":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":3,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":36,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":6}},"r":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"y":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":5,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":12}}}}}},"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":2}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":10,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":2}},"k":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":49,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":3}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":29}}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":2,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":39,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":15}},"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}}}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1},"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":11}}}}},"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":18,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":11},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":6}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":50}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772}},"df":3}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":7}},"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":33},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":11}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.7320508075688772}},"df":6,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":2}}}}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":14,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":5}}}}}},"y":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":4}}}},"z":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"c":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":9},"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3}}},"n":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":5}},"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}},"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":6.164414002968976},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":6.164414002968976},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":6.0}},"df":39,"'":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":3},"7":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":2},"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1},"4":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}}}}}},"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"[":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}}}}}}}},"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":38,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}}}}}},"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0}},"df":8}}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":7}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":26}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":35},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":4.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.872983346207417}},"df":12}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":31},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":2,"b":{"docs":{},"df":0,"d":{"docs":{},"df":0,"2":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951}},"df":1}}}},"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1,"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1},"6":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979}},"df":24}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951}},"df":2}}}},"c":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":9}}}},"f":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":7},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":12}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":11}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.123105625617661}},"df":59,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}},"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":1}}},"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":5},"u":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":18}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":29,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":5,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}},"t":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":41}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0}},"df":5}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":47,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":12}}}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":6,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":12}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":7}},"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9,"2":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":6.324555320336759},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":34,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1}}},"n":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":4}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":35,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":19}}}},"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":68},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.8284271247461903},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":3.1622776601683795},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":20},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":12},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":8}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":30},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":29,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":2}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}},"s":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":9},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}}}}}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":5,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}}},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":3.3166247903554},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":3.1622776601683795},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":34}},"k":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":8}}}}},"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":3,"'":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951}},"df":1},"6":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1,"'":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772}},"df":1}},"3":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951}},"df":3}}}}}},"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772}},"df":2}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951}},"df":3}}}}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":3,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"a":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":2,"c":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":3.605551275463989},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.449489742783178}},"df":6,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":14}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":20}},"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":9,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":29,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":4}}}}}},"j":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.8284271247461903},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":79}},"n":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":57,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":7}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":7}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":4}}}}}}}},"p":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":12},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":10,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3},"s":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0}},"df":1},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":4.795831523312719}},"df":6,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}}}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":31}},"h":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":7,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":5.0990195135927845}},"df":2,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":16}}}},"x":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":15,"/":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}},":":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":16}}}}},"y":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":3}}},"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772}},"df":1,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.0}},"df":63,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":5,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":3}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4}},"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}}}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":28},"y":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":13}}}},"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":8}},"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":11,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":4,"a":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.449489742783178}},"df":7}}},"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":10}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951}},"df":1}}}}},"h":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0}},"df":1,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"m":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}},"m":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0}},"df":15}}}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":7.483314773547883},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":3}}}}}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0}},"df":4,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}}}}}},"_":{"docs":{},"df":0,"7":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979}},"df":2}}}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772}},"df":1}}}}}}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":4},"e":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":13},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":11,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":11}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":5}},"t":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1},"u":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907}},"df":7,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951}},"df":3}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":4}}}}}},"o":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":12}},"t":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":7}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":8,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":7,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}}}},"’":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":9,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":21}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":4.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":5.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":6.855654600401044},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/projects/gpu/":{"tf":5.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.358898943540674}},"df":63,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":7},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}}}},"u":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":4.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":50,"'":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":12},".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":3}}}},"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":11,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":6}}},"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":9}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1}}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":6,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":9,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":74}},"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}}},"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"v":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3}}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":5}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":17}}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":13}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":46}},"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":12,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":2}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":6}}}}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":28,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":3}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13}},"i":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":7}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}},"x":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}},"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"q":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772}},"df":1,"e":{"docs":{},"df":0,"[":{"docs":{},"df":0,"$":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951}},"df":1}}}}},"d":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1,"[":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1,"]":{"docs":{},"df":0,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}}}}}}},"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951}},"df":1,"[":{"docs":{},"df":0,"1":{"docs":{},"df":0,"]":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}}}}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":13,"*":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"+":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"6":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"\\":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}},"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951}},"df":1},"v":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":51,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907}},"df":2,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772}},"df":2},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3,"~":{"docs":{},"df":0,"&":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":7}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":5}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6}}}},"d":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":5}}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.8284271247461903},"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":3.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/serial-interface/":{"tf":3.0},"https://alchitry.com/tutorials/setup/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":82}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":10,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":7}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":2,"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772}},"df":2}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":35}}},"w":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/news/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":3.3166247903554},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-v2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2/":{"tf":2.6457513110645907},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":69,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":2}}}},"r":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3}}}}}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":3}}}}},"t":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":3}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":61,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2},"g":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772}},"df":1},"d":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":21,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}},"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":2}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":7}},"n":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":9,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":8}},"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":17}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":4}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":5}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":51,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":2}}}}},"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":22},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":44},"f":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}},"w":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":2.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.6457513110645907},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":83,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1},"t":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1,"6":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.0}},"df":3}},"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0}},"df":3}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/addition/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.795831523312719}},"df":60}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":6.6332495807108},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":3}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":3}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}},"d":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":5,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":2,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}}}}}}}}}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":5}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":5}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":5}}}}},"h":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3,"m":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":9},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":17,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":4},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795}},"df":3}}},"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/addition/":{"tf":2.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/io-element/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.605551275463989}},"df":80,"/":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":4}}}}},"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":48},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":33}}},"p":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0}},"df":1},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":58,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}}}}},"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":6.6332495807108},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":34,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903}},"df":1}}}}}}}}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":7}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}},"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1,"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"6":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"k":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"/":{"docs":{},"df":0,"x":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,".":{"docs":{},"df":0,"x":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"k":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"7":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},"df":0,"0":{"docs":{},"df":0,"2":{"docs":{},"df":0,"5":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"/":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":15},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":29,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":29},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":8}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":15}}}}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}}}}}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15}}}}}}},"u":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":1,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":2.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":80,"[":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772}},"df":1}},"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":5}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":6}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":58,"/":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":14}}}}},"v":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"4":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":2,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"g":{"docs":{},"df":0,"_":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"z":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"x":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":54,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":16}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":3}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":5}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772}},"df":2}},"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"5":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.23606797749979}},"df":2},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772}},"df":1}},"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":9,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":5}},"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"g":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":38}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":5},"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":11}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0}},"df":5}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}},"y":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}},"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":38,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}}}}}},"x":{"docs":{},"df":0,"{":{"docs":{},"df":0,"b":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2,"i":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":3}}}}}}},"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":1},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":6}}},"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":41,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}},"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":6,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":6}}}}}}}}}},"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":22,"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0}},"df":1}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":11}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}},"h":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8,"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":11}}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":2}},"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":2,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178}},"df":1,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":2}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":5}}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772}},"df":28,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":26}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.23606797749979}},"df":13}},"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951}},"df":7}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951}},"df":3}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":8}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":5}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":8,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0}},"df":2,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":5}}}},"e":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":19}},"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}},"n":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.23606797749979},"https://alchitry.com/boards/cu/":{"tf":2.0},"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":4.242640687119285},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.0},"https://alchitry.com/news/alchitry-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":6.928203230275509},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.605551275463989}},"df":39,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":3},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":5}}}},"p":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":10}}}}},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":1,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"x":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.3166247903554}},"df":5,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":2}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":24}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8,"a":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772}},"df":4,".":{"docs":{},"df":0,"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951}},"df":1}}}}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":13,"/":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}},"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":10}}}},"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":3,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":5,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":3}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":33,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":6,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.1622776601683795}},"df":50,"'":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":3,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1},"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":6}}},"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":21}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":38}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":16}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":6,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951}},"df":3}}}}}}}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":2.449489742783178},"https://alchitry.com/boards/cu/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":39}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":22}}}}},"e":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772}},"df":5,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":5}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":2}}}},"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":4}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":3}},"i":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":3}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":10}},"r":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}},"t":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":17,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":2}}}},"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":31}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":11}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":4}},"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":29,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":7}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":2}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":3}}},"e":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":4}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951}},"df":11,"(":{"docs":{},"df":0,"\"":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979}},"df":1}}}}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1,"i":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":7}}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":3}}}}}},"o":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772}},"df":1,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}}},"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":22}}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":23,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":12}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979}},"df":9,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":10}}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":30,"m":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951}},"df":5}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":6}}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":3.0},"https://alchitry.com/tutorials/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/":{"tf":1.0},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.69041575982343}},"df":72,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":2},".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}}}}},"/":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":1}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}}}}}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.23606797749979}},"df":5,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2}}}}},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":3,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":18}},"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":9}}}},"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":4}}},"i":{"docs":{"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":11}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":3}}}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":34}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"u":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":5,"'":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/io-element/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":15,"(":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1,"_":{"docs":{},"df":0,"2":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":1}}}}}}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":4}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":3}}},"s":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":12}},"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2}}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1},"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":8}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":13}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":24},"z":{"docs":{},"df":0,"z":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0}},"df":9,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}},"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"2":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}}}}}}}},"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":2}}}}}},"q":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.4641016151377544}},"df":9,"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1},"2":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":2},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":2}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":2}}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0}},"df":4}}}}},"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":9,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":12}},"o":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":6,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":1,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"3":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1},"5":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979}},"df":1}},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979}},"df":1},"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2,"b":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}},"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":5}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951}},"df":2},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":2}},"m":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}}}}}}}},"3":{"docs":{},"df":0,"2":{"docs":{},"df":0,"x":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0}},"df":1}}}}}}},"b":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{},"df":0,"b":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}}},"8":{"docs":{},"df":0,"e":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}},"8":{"docs":{},"df":0,"b":{"docs":{},"df":0,"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":2,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}},"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":10}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903}},"df":3}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":25},"i":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"w":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":4},"y":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":2},"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"d":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}}}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}}}}}},"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"e":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":7,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":10}},"d":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/register-interface/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":45,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":8,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951}},"df":2}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}}}}}},"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":18,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":18,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}},"z":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":45}}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":43}}}},"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":2,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":2}}}},"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}},"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":28}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":4}}},"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":4}},"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":17}}}}},"n":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":2}}}}},"i":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"w":{"docs":{},"df":0,"/":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}}}}}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":9,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":4}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":14,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":5}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.0}},"df":10}}}}},"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178}},"df":7,"'":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":1},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":2}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}}}},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":4}}}}}}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951}},"df":1}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951}},"df":1}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951}},"df":18,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}}}}}}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951}},"df":1}}}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}}}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":6}}}}},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":7,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":6},"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":17}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":3}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772}},"df":10}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":5,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":23}}},"o":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":26}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":9}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979}},"df":2}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":11,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":3}}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":2}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":22}},"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":5}},"u":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}},"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":5,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":6}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":24,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":7}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}}}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":13}}},"i":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":55}}}},"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":3.872983346207417},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":37,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":9}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951}},"df":5}}}},"z":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951}},"df":2,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":6,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,".":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}}}}}}}}}},"v":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":2}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":10}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":20}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":5},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":11}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":23,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":5}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979}},"df":27}},"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":19}}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":10,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":5}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}}}}}}}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":11,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}}}}}},"g":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2,"5":{"docs":{},"df":0,"6":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"s":{"docs":{},"df":0,"v":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":44,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1,";":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":20},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}}}}},"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":5}}}},"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3}},"m":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":13,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":7}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907}},"df":2}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":6}},"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13}},"w":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":5.477225575051661}},"df":8,"'":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"’":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":17,"(":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":6}}}},"_":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":8}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772}},"df":1}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":5}},"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":58,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951}},"df":3}}}}},"w":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":9,".":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772}},"df":2}}}}}}}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":7}}}}}}},"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":9,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":62},"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":17,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":3}}}}}}},"d":{"docs":{},"df":0,"/":{"docs":{},"df":0,"_":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":1,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":8}}},"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":26,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}},"w":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3},"y":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":6}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951}},"df":6,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0}},"df":1}}},"n":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772}},"df":1}},"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3}}}},"e":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0}},"df":1}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":10}},"e":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}},"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.6457513110645907}},"df":1},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":4}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":7,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":2,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":3}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":7}}}}},"d":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":6.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":5.744562646538029}},"df":5,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,".":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":49,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":26}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":2}}},"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/addition/":{"tf":2.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":66,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":25,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":10}},"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.795831523312719}},"df":5}}}}},"l":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.449489742783178}},"df":1,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":39,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12}}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":4}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}}}}}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/serial-interface/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.6457513110645907}},"df":28,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":15,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.8284271247461903}},"df":3}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":28}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":25}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":2}}},"q":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2},"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}}}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":10,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":29,"1":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"x":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}}}}},"v":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":4,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}},"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":4.0}},"df":6,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":2}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/io-element/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.605551275463989}},"df":66,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":6}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":37}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":7,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772}},"df":2}}}}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":1}},"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}},"k":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":1},"i":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":11}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772}},"df":10}}},"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":5.291502622129181}},"df":15}},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":6}},"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}},"p":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":3}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":2},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":5}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":3},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":15}}}}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":34,"n":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":26}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":22,"(":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}}}}}},"g":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":7,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0}},"df":11,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.4142135623730951},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":6.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":6.164414002968976},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.58257569495584}},"df":70,"'":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":3},"(":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1},"/":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}}}}}}}},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}},"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"5":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"a":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":16,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":5}}}}}}}}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":2,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":3}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":3}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":45,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":12},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":4}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":58,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1},"f":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":2,"i":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":7}}}}},"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":4.795831523312719},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":3.3166247903554},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.8284271247461903},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":28,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":2}}}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772}},"df":2,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":1},"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":44}},"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979}},"df":3}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":7},"z":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30,"(":{"docs":{},"df":0,"1":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},"8":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},")":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}},"/":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951}},"df":2,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951}},"df":1}}}}}}},"w":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":4.0}},"df":1}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":4.69041575982343}},"df":4,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951}},"df":1}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":3,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0}},"df":1},"m":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0}},"df":1}}},"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":2,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":9}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0}},"df":1},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13,"_":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":7},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951}},"df":24,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3}}}}},"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":2}}},"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":3,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":3.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0}},"df":3}}}}}},"p":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"o":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":4}}}}},"z":{"docs":{},"df":0,"z":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":12}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":3}}},"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":5}},"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.7320508075688772}},"df":7}},"v":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":52,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":19}}},"w":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":15}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4}},"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3}},"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}}}}},"r":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.23606797749979},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":32,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}}}},"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18}},"m":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772}},"df":1},"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":2},"k":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951}},"df":2,"’":{"docs":{"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4}}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":26,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":1}}}},"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0}},"df":28,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":4.358898943540674}},"df":57}}}},"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":20}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3}},"w":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":4.358898943540674}},"df":6,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":3,"[":{"docs":{},"df":0,"3":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{},"df":0,"]":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"3":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"s":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}}}}}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":6}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":10}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":2}}},"q":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"(":{"docs":{},"df":0,"3":{"docs":{},"df":0,")":{"docs":{},"df":0,"/":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":4}}}},"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1},"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}},"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.6457513110645907}},"df":2}},"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":4,"c":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":3.3166247903554}},"df":1},"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951}},"df":5}},"l":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":8}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.4142135623730951},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":4}}}}},"g":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":9}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0}},"df":2}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":7,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":3.1622776601683795},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/io-element/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":14}}}}},"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":2.6457513110645907},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.8284271247461903}},"df":62,"+":{"docs":{},"df":0,":":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":3}},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":34,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772}},"df":2}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951}},"df":2}}},"q":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":3}},"_":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0}},"df":1},"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.0990195135927845},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":23}}}},"s":{"docs":{},"df":0,".":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772}},"df":1}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951}},"df":2}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1}}}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":1}}},"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":5}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":13}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}},"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":26}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":4}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":42}}},"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951}},"df":1}},"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":4}},"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":31,"s":{"docs":{},"df":0,"r":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":6}}}}}}}}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951}},"df":8,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951}},"df":1}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":10}},"p":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.23606797749979},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":2.449489742783178},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0}},"df":10,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"y":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":9}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4}},"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14}},"p":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":2}}}},"y":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":9}}}},"u":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":8,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1},"p":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951}},"df":1}}}}},"e":{"docs":{},"df":0,"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"t":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":7}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":2},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979}},"df":10}}}}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"f":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}}}}}}}},"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":12}},"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}}},"g":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":2,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":3},"y":{"docs":{},"df":0,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":1}}}}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":13,"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":14}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":47},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":4}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":2}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}}}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":3}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951}},"df":2}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":26}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.449489742783178}},"df":3}},"y":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}},"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":2,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}},"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951}},"df":1,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":3,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":25}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":21,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":9,"z":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":2}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":19,"'":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":13,"l":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/addition/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951}},"df":8}},"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1},"g":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tags/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":3},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.69041575982343},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":3.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":63,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772}},"df":19},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":1}}}},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"p":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1},"r":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":5}}}},"s":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":7}}},"c":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":7}}},"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":3},"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":5}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":41}},"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}}}}},"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951}},"df":1,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":11}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":4,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":5}}}}}}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}},"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":8,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":9}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951}},"df":3}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":4.123105625617661},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":6.782329983125268},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":30,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}}}},"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}}}},"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":4,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178}},"df":1}}}},"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":23,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":2}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979}},"df":1}}}}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"&":{"docs":{},"df":0,"g":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":5}},"t":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":24}}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":1}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":3}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":8},"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":3}}}}},"y":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}},"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":3},"v":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":61},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":31}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":11}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":33}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":10}}},"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}},"e":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":34},"w":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.4142135623730951},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":45,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":2}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}}}}}},"w":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":3,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":5}}}}},"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.8284271247461903}},"df":3,"(":{"docs":{},"df":0,")":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}},"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"(":{"docs":{},"df":0,"2":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}},"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}},"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":7.874007874011811},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":76,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":4,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":1}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":1}}}}}},"n":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":3}},"p":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1},"t":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":3.605551275463989}},"df":1,"s":{"docs":{},"df":0,"_":{"docs":{},"df":0,"3":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}},"b":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":4}}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":3}}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772}},"df":29}}},"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":15}}},"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951}},"df":1}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":4},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2}}},"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951}},"df":11},"o":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":2},"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":2.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.7416573867739413}},"df":56,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":12}}},"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":5}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951}},"df":2}}},"s":{"docs":{},"df":0,"/":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":2}}}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1}}},"p":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":51,".":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10}}},"w":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":5}}}}},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1},"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":14}},"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":4,"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":3},"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.6457513110645907}},"df":2}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951}},"df":1}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}},"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.449489742783178}},"df":9}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":3}}}},"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":5}}}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":11}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.0}},"df":2}},"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951}},"df":5,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951}},"df":7}}}}}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":5}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":14}},"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":47,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":6.324555320336759},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2,"e":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1}}}}}},"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":7,"i":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":8,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}},"g":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951}},"df":1,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":2}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":4.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":18,"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":3}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":7}}}},"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":22,"_":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}}},"x":{"docs":{},"df":0,"x":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1,"'":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":64}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"w":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":3}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":8}}},"o":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0},"https://alchitry.com/tutorials/background/addition/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/io-element/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":4.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":72}},"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":9,".":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951}},"df":2}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":4}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":4}}}}}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772}},"df":7}}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772}},"df":7}}}}}},"y":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":3.1622776601683795},"https://alchitry.com/news/lucid-v2/":{"tf":2.8284271247461903},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":52,"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":33}}}}},"u":{"docs":{},"df":0,".":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772}},"df":6,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951}},"df":4}}}}}},"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":6}}}}},"c":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":4}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"3":{"docs":{},"df":0,"8":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"4":{"docs":{},"df":0,"7":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0}},"df":2}}},"9":{"docs":{},"df":0,"5":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":3}}},"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":3.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1}}}}}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0}},"df":2},"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":2}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}}}}}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.0}},"df":1}}}}}}}}},"r":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772}},"df":46,"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}},"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":2,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":24}}}}},"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951}},"df":1,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772}},"df":1}}}}}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}}}}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951}},"df":1}}}}},"q":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}},"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.0}},"df":7,"i":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":4}}}}},"k":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":16}}},"i":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":7},"m":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0}},"df":1}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1}}}}}},"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.1622776601683795}},"df":2,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"(":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,")":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":31}}},"u":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0}},"df":1,"u":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}},"w":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}}},"p":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":79,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":28}}},"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":7}}}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":2}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":5,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}},"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772}},"df":1}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":2}}}}}}},"s":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.23606797749979},"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":3.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":3.605551275463989},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":3.605551275463989},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.8284271247461903},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":3.0},"https://alchitry.com/news/lucid-v2/":{"tf":3.4641016151377544},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/background/addition/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":6.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/io-element/":{"tf":7.615773105863909},"https://alchitry.com/tutorials/lucid-reference/":{"tf":8.18535277187245},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":6.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":7.211102550927978},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":4.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":6.4031242374328485},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":8.426149773176359},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.898979485566356},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":5.830951894845301},"https://alchitry.com/tutorials/register-interface/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/setup/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/setup/ise/":{"tf":4.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":3.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":5.196152422706632},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":5.196152422706632}},"df":93,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":3}},"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3}},"b":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.7320508075688772},"https://alchitry.com/boards/cu/":{"tf":1.7320508075688772},"https://alchitry.com/boards/ft/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":20,"&":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.7320508075688772}},"df":4}}},"_":{"docs":{},"df":0,"d":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"1":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"x":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":2,"f":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"w":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}}},"t":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":2}},"w":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}}}},"r":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":12,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951}},"df":2}}}}}},"r":{"docs":{},"df":0,"/":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"/":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}}}}}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":23}}}},"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951}},"df":2}}}},"v":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":3,"1":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0}},"df":13},"2":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":3.7416573867739413},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":29,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1},"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951}},"df":1},"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1},"7":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.7320508075688772}},"df":1}},"2":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951}},"df":1},"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951}},"df":1}},"5":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":2}}},"1":{"docs":{},"df":0,".":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951}},"df":1}}}}},"3":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":4},"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":26}},"u":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":3.7416573867739413},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":3.3166247903554},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":3.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":3.605551275463989},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":4.242640687119285},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":6.244997998398398},"https://alchitry.com/tutorials/lucid-reference/":{"tf":10.816653826391969},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.385164807134504},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":6.708203932499369},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":5.744562646538029},"https://alchitry.com/tutorials/projects/gpu/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/register-interface/":{"tf":3.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":5.5677643628300215},"https://alchitry.com/tutorials/serial-interface/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.872983346207417},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":5.291502622129181},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":6.082762530298219},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":5.477225575051661}},"df":69,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1},"2":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}},"p":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0}},"df":1}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"v":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":3,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":16,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":2.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6}},"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":5}},"o":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15}}}},"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}},"c":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979}},"df":2}}},"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":4.47213595499958},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.47213595499958}},"df":2}}}},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}}},"o":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/addition/":{"tf":2.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":51,"f":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":3}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":4.358898943540674},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979}},"df":23}}}},"s":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":2},"i":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":38,"'":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1}}}},"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.0}},"df":1}},"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.3166247903554}},"df":3}}}}},"h":{"docs":{},"df":0,"d":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":1}}},"i":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":15},"c":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":5}}},"e":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4}}}},"r":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":7}}}}},"s":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0}},"df":1},"i":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}},"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":4}},"u":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":11,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}}}}},"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951}},"df":2},"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":13}}},"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}}},"p":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":2.0}},"df":1}}},"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":5,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0}},"df":1}}}}},"w":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.0}},"df":1,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":1}},"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":35,"_":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}}}}}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":4.58257569495584},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":3.1622776601683795},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":69}},"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11},"p":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1},"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":1}}}}},"s":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10}}},"t":{"docs":{"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":7}},"t":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0}},"df":1}}},"v":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":2.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":8,"f":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951}},"df":1}}}}}}},"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/background/encodings/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid-reference/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":62,"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}}},"e":{"docs":{},"df":0,"'":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":6}},"r":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":3},"v":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":4}},"_":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"a":{"docs":{},"df":0,"[":{"docs":{},"df":0,"0":{"docs":{},"df":0,":":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}},"k":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.7320508075688772}},"df":1,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}}},"b":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.7320508075688772}},"df":1,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772}},"df":2}},"g":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0},"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":7}}}},"e":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0}},"df":4}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"h":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":3.7416573867739413}},"df":2}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":10}}},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":5}}},"l":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":40}},"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":9}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":2}}}}},"t":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":6}},"h":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":11},"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":31}}}},"e":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":2}},"n":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951}},"df":1}}}},"e":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.7320508075688772}},"df":8}}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772}},"df":1}}}}},"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"(":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951}},"df":5}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.7320508075688772}},"df":3}}}},"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.0}},"df":34,"r":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":5}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":2.449489742783178},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":2.6457513110645907},"https://alchitry.com/news/lucid-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":3.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid-reference/":{"tf":7.483314773547883},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":3.4641016151377544},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":3.4641016151377544}},"df":29,"(":{"docs":{},"df":0,"8":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"p":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}}},"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"_":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0}},"df":1}}}}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,".":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951}},"df":1}}}}}}}}}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":1}}}},"{":{"docs":{},"df":0,"4":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{},"df":0,",":{"docs":{},"df":0,"4":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951}},"df":1}}}}}}}}},"o":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":3,"(":{"docs":{},"df":0,"m":{"docs":{},"df":0,"y":{"docs":{},"df":0,"f":{"docs":{},"df":0,"s":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1,".":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}}}}}}}},"{":{"docs":{},"df":0,"8":{"docs":{},"df":0,"b":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":1}}}}}}}}}},"k":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":4}}}}}}},"l":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0}},"df":1}}},"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}},"n":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":2,"a":{"docs":{},"df":0,"v":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":1}}},"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":2.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":5.477225575051661},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":27,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":3}}}},"u":{"docs":{},"df":0,"s":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":4.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.23606797749979}},"df":23,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0}},"df":4}},"t":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":2}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951}},"df":33}}}}},"z":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951}},"df":6}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":27}},"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":17,"_":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}},"k":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.6457513110645907},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.7320508075688772},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":2.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":2.8284271247461903},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/news/lucid-v2/":{"tf":2.23606797749979},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/register-interface/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.7320508075688772}},"df":76,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":3}}}}}},"f":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}}},"s":{"docs":{},"df":0,"p":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":4}}}}},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":2.449489742783178}},"df":13}},"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":17}},"s":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":4,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.7320508075688772}},"df":9}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{},"df":0,"'":{"docs":{},"df":0,"v":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0}},"df":1}},"n":{"docs":{},"df":0,"'":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951}},"df":9}},"’":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}},"c":{"docs":{},"df":0,"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772}},"df":2}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0}},"df":1}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0}},"df":2}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951}},"df":2}},"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}},"a":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0}},"df":13,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0}},"df":2}}}}},"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":2.23606797749979},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.7320508075688772},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/background/addition/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":2.0},"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":5.656854249492381},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":5.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":4.795831523312719},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":4.123105625617661},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.0},"https://alchitry.com/tutorials/register-interface/":{"tf":4.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":3.605551275463989},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":54,"/":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.4142135623730951}},"df":1}}}}},"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"m":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":4}}}},"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0}},"df":2}},"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}}}}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.7416573867739413},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/hexapod/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":31}}}}},"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":6}},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":8}}}}},"x":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":3.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":2.8284271247461903},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":3.3166247903554},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.6457513110645907}},"df":20,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"_":{"docs":{},"df":0,"f":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},"r":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}}},"6":{"docs":{},"df":0,"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":2.0}},"df":1}},"8":{"docs":{},"df":0,"6":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1,")":{"docs":{},"df":0,"\\":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}}}}}}},"]":{"docs":{},"df":0,"[":{"docs":{},"df":0,"8":{"docs":{"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":1}}},"c":{"docs":{},"df":0,"7":{"docs":{},"df":0,"a":{"docs":{},"df":0,"1":{"docs":{},"df":0,"0":{"docs":{},"df":0,"0":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}}}},"l":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.4142135623730951}},"df":1}}},"d":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":2}},"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{},"df":0,"_":{"docs":{},"df":0,"v":{"docs":{},"df":0,"8":{"docs":{},"df":0,"_":{"docs":{},"df":0,"0":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}}},"i":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1,"_":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1,"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"2":{"docs":{},"df":0,".":{"docs":{},"df":0,"l":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/ise/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":22,"'":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":4},".":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1}},"/":{"docs":{},"df":0,"1":{"docs":{},"df":0,"4":{"docs":{},"df":0,".":{"docs":{},"df":0,"7":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0}},"df":2}}}},"v":{"docs":{},"df":0,"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{},"df":0,"/":{"docs":{},"df":0,"y":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"x":{"docs":{},"df":0,"'":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}}}}}},"k":{"docs":{},"df":0,"_":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}}}},"m":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":2.6457513110645907}},"df":1}},"n":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":4}}},"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951}},"df":9,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"1":{"docs":{},"df":0,"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}}}}}}}},"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0}},"df":1},"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"f":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0}},"df":1}}}}}}},"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":2.449489742783178}},"df":1},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"t":{"docs":{},"df":0,"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.4142135623730951}},"df":1}}}},"t":{"docs":{},"df":0,":":{"docs":{},"df":0,"2":{"docs":{},"df":0,"2":{"docs":{},"df":0,"6":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}}}}}},"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}}},"x":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0}},"df":1,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}}}}},"y":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/projects/gpu/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":8,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2/":{"tf":1.7320508075688772},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.7320508075688772},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":5,".":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":1}}}}}}}},"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":5}}}},"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"y":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"s":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0}},"df":5},"y":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{},"df":0,"q":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951}},"df":1}}}}},"u":{"docs":{},"df":0,"'":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":3},"l":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.4142135623730951}},"df":24}},"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":2.449489742783178},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.4142135623730951}},"df":15},"v":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":26}},"n":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}},"r":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2,"'":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1},"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0}},"df":4}}}}}}}}},"s":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"f":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":9}}}}}}}},"z":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.449489742783178},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/projects/gpu/":{"tf":4.358898943540674},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.7320508075688772},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.449489742783178}},"df":10,"_":{"docs":{},"df":0,"b":{"docs":{},"df":0,"u":{"docs":{},"df":0,"f":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/background/encodings/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid-reference/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":2.23606797749979},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":2.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.4142135623730951},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":2.6457513110645907},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":2.0}},"df":14}}},"i":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":2.0},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.7320508075688772}},"df":3}},"o":{"docs":{},"df":0,"l":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.4142135623730951}},"df":1}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}}}}},"title":{"root":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0}},"df":2},"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0}},"df":1},"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/addition/":{"tf":1.0}},"df":1}}}},"l":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/boards/au/":{"tf":1.0},"https://alchitry.com/boards/br/":{"tf":1.0},"https://alchitry.com/boards/cu/":{"tf":1.0},"https://alchitry.com/boards/ft/":{"tf":1.0},"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/home/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.4142135623730951},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":25}}}}}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":2}}}}},"r":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1}}}}}},"s":{"docs":{},"df":0,"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0}},"df":1}}}}}}}},"u":{"docs":{"https://alchitry.com/boards/au/":{"tf":1.0}},"df":1},"v":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0}},"df":1}}},"b":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{},"df":0,"g":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/":{"tf":1.0}},"df":1}}}}}}}},"s":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}}}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"r":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/boards/":{"tf":1.0},"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0}},"df":3}}},"o":{"docs":{},"df":0,"t":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{"https://alchitry.com/boards/br/":{"tf":1.0}},"df":1}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"tf":1.0}},"df":1}}}}},"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/projects/clock-clock/":{"tf":1.4142135623730951}},"df":1}}}},"o":{"docs":{},"df":0,"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0}},"df":1}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/components/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"tf":1.0}},"df":2}}}},"n":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0}},"df":2}}}}}}}},"r":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"tf":1.0}},"df":1}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}}}},"u":{"docs":{"https://alchitry.com/boards/cu/":{"tf":1.0}},"df":1}},"d":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0}},"df":2}}},"e":{"docs":{},"df":0,"b":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":1}}}}}},"i":{"docs":{},"df":0,"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0}},"df":2}}}}}},"m":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}},"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/background/encodings/":{"tf":1.0}},"df":1}}}},"x":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":2}}}}}},"f":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}},"r":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":3}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}},"s":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}},"t":{"docs":{"https://alchitry.com/boards/ft/":{"tf":1.0}},"df":1}},"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"u":{"docs":{"https://alchitry.com/tutorials/projects/gpu/":{"tf":1.0}},"df":1}}},"h":{"docs":{},"df":0,"d":{"docs":{},"df":0,"m":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"tf":1.0}},"df":1}}},"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":4}}},"x":{"docs":{},"df":0,"a":{"docs":{},"df":0,"p":{"docs":{},"df":0,"o":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/projects/hexapod/":{"tf":1.0}},"df":1}}}}}}},"i":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"e":{"docs":{},"df":0,"2":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0}},"df":2}}}}}}},"d":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1},"n":{"docs":{},"df":0,"d":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}}},"p":{"docs":{},"df":0,"u":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"tf":1.0}},"df":2}}},"t":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"f":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":6}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{"https://alchitry.com/boards/io/":{"tf":1.0},"https://alchitry.com/tutorials/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"tf":1.0}},"df":6},"s":{"docs":{"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0}},"df":2}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"b":{"docs":{"https://alchitry.com/alchitry-labs/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":14}},"e":{"docs":{},"df":0,"g":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/boards/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0}},"df":1}}}},"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"c":{"docs":{"https://alchitry.com/tutorials/background/combinational-logic/":{"tf":1.0},"https://alchitry.com/tutorials/background/digital-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":6}}},"n":{"docs":{},"df":0,"g":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/news/icecube2-no-longer-free/":{"tf":1.0}},"df":1}}}}},"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0}},"df":6}}}}},"m":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}},"p":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"m":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"tf":1.0}},"df":3}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}},"j":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/":{"tf":1.0}},"df":4}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"l":{"docs":{},"df":0,"e":{"docs":{},"df":0,"x":{"docs":{"https://alchitry.com/tutorials/background/multiplexers/":{"tf":1.0}},"df":1}}}}}}}}},"n":{"docs":{},"df":0,"e":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1},"w":{"docs":{"https://alchitry.com/news/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.7320508075688772}},"df":3}},"o":{"docs":{},"df":0,"w":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0}},"df":1}}},"o":{"docs":{},"df":0,"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"p":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}}}}}}},"l":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"i":{"docs":{},"df":0,"n":{"docs":{},"df":0,"u":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}}}}},"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"c":{"docs":{},"df":0,"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"s":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"tf":1.0}},"df":1}}}}}},"d":{"docs":{},"df":0,"u":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0}},"df":1}}}},"j":{"docs":{},"df":0,"e":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"tf":1.0},"https://alchitry.com/tutorials/projects/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"tf":1.0},"https://alchitry.com/tutorials/your-first-fpga-project/":{"tf":1.0}},"df":6}}}}}},"u":{"docs":{},"df":0,"l":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"e":{"docs":{},"df":0,"f":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"tf":1.0},"https://alchitry.com/tutorials/lucid-reference/":{"tf":1.0}},"df":2}}},"g":{"docs":{},"df":0,"i":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"tf":1.0},"https://alchitry.com/tutorials/register-interface/":{"tf":1.0}},"df":2}}}},"w":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/news/alchitry-platinum-v2/":{"tf":1.0}},"df":1}}}}},"o":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"tf":1.0},"https://alchitry.com/tutorials/roms-and-fsms/":{"tf":1.0}},"df":3}}},"s":{"docs":{},"df":0,"d":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"tf":1.0}},"df":2}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"a":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/tutorials/serial-interface/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":3}}},"v":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"tf":1.0}},"df":2}}},"t":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1,"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/setup/":{"tf":1.0},"https://alchitry.com/tutorials/setup/icecube2/":{"tf":1.0},"https://alchitry.com/tutorials/setup/ise/":{"tf":1.0},"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0}},"df":4}}}},"h":{"docs":{},"df":0,"i":{"docs":{},"df":0,"e":{"docs":{},"df":0,"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"tf":1.0}},"df":1}}}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"u":{"docs":{},"df":0,"l":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1}}},"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/news/new-site-new-forum-new-labs/":{"tf":1.0}},"df":1}}},"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"k":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"c":{"docs":{},"df":0,"a":{"docs":{},"df":0,"s":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0}},"df":1}}}}}}}},"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"n":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"tf":1.0}},"df":1}}}},"p":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"tf":1.0}},"df":1}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"tf":1.0}},"df":1}}}},"u":{"docs":{},"df":0,"b":{"docs":{},"df":0,"t":{"docs":{},"df":0,"r":{"docs":{},"df":0,"a":{"docs":{},"df":0,"c":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/tutorials/background/subtraction/":{"tf":1.0}},"df":1}}}}}}},"y":{"docs":{},"df":0,"n":{"docs":{},"df":0,"c":{"docs":{},"df":0,"h":{"docs":{},"df":0,"r":{"docs":{},"df":0,"o":{"docs":{},"df":0,"n":{"docs":{"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/synchronous-logic/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"tf":1.0}},"df":4}}}}}}}},"t":{"docs":{},"df":0,"a":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/tags/":{"tf":1.0}},"df":1}},"e":{"docs":{},"df":0,"s":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":2}}},"i":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"tf":1.0}},"df":1}}},"u":{"docs":{},"df":0,"t":{"docs":{},"df":0,"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{"https://alchitry.com/tutorials/":{"tf":1.0}},"df":1}}}}}},"u":{"docs":{},"df":0,"p":{"docs":{"https://alchitry.com/tutorials/mojo/arduino-setup/":{"tf":1.0}},"df":1,"d":{"docs":{},"df":0,"a":{"docs":{},"df":0,"t":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"tf":1.0}},"df":7}}}},"s":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"tf":1.0}},"df":1}},"v":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/":{"tf":1.0}},"df":2},"2":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-beta/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"tf":1.0},"https://alchitry.com/news/alchitry-labs-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-loader-v2/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2-design-update/":{"tf":1.0},"https://alchitry.com/news/alchitry-v2/":{"tf":1.0},"https://alchitry.com/news/lucid-1-vs-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-1/":{"tf":1.0},"https://alchitry.com/news/lucid-v2-update-2/":{"tf":1.0},"https://alchitry.com/news/lucid-v2/":{"tf":1.0}},"df":14,".":{"docs":{},"df":0,"0":{"docs":{},"df":0,".":{"docs":{},"df":0,"1":{"docs":{},"df":0,"3":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0}},"df":1}},"2":{"docs":{},"df":0,"1":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"tf":1.0}},"df":1},"4":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"tf":1.0}},"df":1}},"5":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"tf":1.0}},"df":1},"8":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"tf":1.0}},"df":1}}}}},"e":{"docs":{},"df":0,"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"l":{"docs":{},"df":0,"o":{"docs":{},"df":0,"g":{"docs":{"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"tf":1.0}},"df":3}}}}}},"i":{"docs":{},"df":0,"v":{"docs":{},"df":0,"a":{"docs":{},"df":0,"d":{"docs":{},"df":0,"o":{"docs":{"https://alchitry.com/tutorials/setup/vivado/":{"tf":1.0},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"tf":1.0}},"df":2}}}}}},"w":{"docs":{},"df":0,"i":{"docs":{},"df":0,"d":{"docs":{},"df":0,"t":{"docs":{},"df":0,"h":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"tf":1.0}},"df":1}}}},"o":{"docs":{},"df":0,"r":{"docs":{},"df":0,"k":{"docs":{"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"tf":1.0}},"df":1},"l":{"docs":{},"df":0,"d":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"tf":1.0}},"df":1}}}},"r":{"docs":{},"df":0,"i":{"docs":{},"df":0,"t":{"docs":{},"df":0,"e":{"docs":{"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"tf":1.0}},"df":1}}}}},"y":{"docs":{},"df":0,"o":{"docs":{},"df":0,"u":{"docs":{},"df":0,"r":{"docs":{},"df":0,"_":{"docs":{},"df":0,"n":{"docs":{},"df":0,"a":{"docs":{},"df":0,"m":{"docs":{},"df":0,"e":{"docs":{},"df":0,"_":{"docs":{},"df":0,"h":{"docs":{},"df":0,"e":{"docs":{},"df":0,"r":{"docs":{"https://alchitry.com/tutorials/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"tf":1.0},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"tf":1.0}},"df":3}}}}}}}}}}}}}}}},"documentStore":{"save":true,"docs":{"https://alchitry.com/":{"body":"","id":"https://alchitry.com/","title":""},"https://alchitry.com/alchitry-labs/":{"body":"Version 2\n\n\nDownload the latest:\n\n\nOr get it from the Microsoft Store.\nCheck out the source code here: GitHub Source Code.\nA full rewrite of Alchitry Labs is currently underway. You can download the latest version at the link above.\nThis is now in beta! Give it try and report any issues to the issues page.\nV2 supports Windows, Linux, and Macs.\nOn Macs, you can only build for the Cu using the included open-source toolchain. \nBoth Lattice and Xilinx still do not support Macs with their build tools. \nThis means that building for the Au is not possible.\nBuilders\nSee the Setup Page for information on the other software required for your board.\nVersion 1.2.7\n\n    \n    \n        Version 1.2.7 is deprecated.\nIt is only recommend for the Mojo which isn't supported in V2.\n\n    \nDownload Links\n\nWindows Installer\nWindows Files\nLinux\n\nA JDK (Java) with version 1.8.0 or later is required to run Alchitry Labs V1.\nAlchitry Loader\nAlchitry Labs now includes the Alchitry Loader as part of the installation to make things simpler. This tool can be used to load .bin files directly to your board from a third-party tool.\nDrivers\nAlchitry Labs now supports both the open source library libusb, the FTDI proprietary drivers, and direct COM port drivers (for the Mojo).\nThis has the advantage of no longer needing to specify a serial port for your board and you no longer need to install any drivers for the Alchitry boards on Windows or Linux!\nWindows\nYou no longer need to install any drivers manually for Alchitry boards (see the next section for the Mojo). Windows should automatically detect and load the proper drivers for your board.\nIf you were using a previous version of Alchitry Labs, you can now remove winUSB. To do this, open the Device Manager (with your board plugged in) and scroll down to \"Universal Serial Bus devices.\"\nHere you should see two entries for your board. Right click on one of them and choose \"Uninstall device.\"\nIn the dialog that pops up, make sure \"Delete the driver software for this device\" is checked and click \"Uninstall.\" Repeat this for the second entry.\nNow unplug and replug in your board.\nLegacy Drivers (COM port)\nIf you are using a Mojo, you need to install the serial port drivers by running the file named dpinst-amd64.exe which can be found where you installed Alchitry Labs or in the Windows files (not the installer).\nLinux\nYou likely won't have to do anything. The drivers for libusb are generally included with your distribution and things will probably just work.\nIf you run into permission problems, you can copy the udev rules files from the driver folder into /etc/udev/rules.d/. These will give access to the boards to the \"dialup\" group.\nBuilders\nTo build projects for the Au you need to install Vivado (WebPACK, aka free).\nTo build projects for the Cu you need to install iCEcube2 (bottom of the page).\nIf you are building with iCEcube2 for the Cu, you will need to point the IDE to your license file for iCEcube2. You can get a license here.\nYou can also use the open source project IceStorm to build for the Cu.\nTo build for the Mojo you need to install ISE.\n","id":"https://alchitry.com/alchitry-labs/","title":"Alchitry Labs"},"https://alchitry.com/boards/":{"body":"","id":"https://alchitry.com/boards/","title":"Legacy Boards"},"https://alchitry.com/boards/au/":{"body":"Dive into the world of programmable hardware with the very capable Alchitry Au. This board features a powerful Artix 7 FPGA with 102 IO pins broken out and 256MB of DDR3 memory onboard!\n\nFeatures At A Glance\nIO Pins\nThe Au features an eye watering 102 IO pins at 3.3V. 20 of these pins can be switched to operate at 1.8V allowing for LVDS. The signals for the on-board LEDs and reset button are also broken out giving you access to a maximum of 111 IO pins.\nAnalog Inputs\nThe FPGA on the Au has a built in analog to digital converter with 9 differential inputs broken out. Eight of these are shared with digital IO and one pair is a dedicated input.\nDDR3\nThe Au has a built in memory controller that is connected to 256MB of DDR3 RAM on board. The FPGA itself already has quite a bit of internal memory but this gives you plenty of extra to work with in your designs.\nPower\nThe board is powered through the USB C port, 0.1” holes, or through its surface mount headers. The board requires 5V and generates 3.3V for IO, 1.8V for IO and FPGA internals, 1.8V for analog circuitry, 1.35V for the DDR3, and 1V for the FPGA internal logic. The amount of current drawn is incredibly varied by your FPGA design but the power supply can pump out 3.5A on the 3.3V rail and 2.2A on the 1V rail so you don’t need to worry.\nPeripherals\nLike all Alchitry boards, you get exactly what you need built into the board without all the extra fluff. The Au has a 8 general use LEDs and a button typically used as a reset. It also has a 100MHz oscillator for clocking your designs. The FPGA is capable of synthesizing new frequencies from this if you need to clock your design faster or slower.\nUSB C\nThe USB C port on the board is used to configure the FPGA as well as transfer data to and from your design via a serial interface capable of up to 12M baud. This port can also supply the board its power and is protected by a diode if you decide to power the board externally.\nDocuments\n\nProduct Brief (includes dimensional drawing)\nSchematic\n3D Model (IGES File)\nElement Eagle Library\n\n","id":"https://alchitry.com/boards/au/","title":"Alchitry Au"},"https://alchitry.com/boards/br/":{"body":"Connect your FPGA to whatever you want with this convenient stackable breakout board.\n\nFeatures At A Glance\nEvery Signal\nEvery signal from the four surface mount connectors are broken out on easy-to-solder 0.1” holes.\nExtra Holes\nThe extra space is filled with 0.1” holes to allow some basic prototyping right on the board.\nStackable\nThe Br has headers on the top and bottom with all the signals fed through the board allowing multiple boards to be stacked.\nDocuments\n\nSchematic\nPinout Reference\n\n","id":"https://alchitry.com/boards/br/","title":"Alchitry Br"},"https://alchitry.com/boards/cu/":{"body":"Dive into the world of programmable hardware with the Alchitry Cu. This board features a Lattice iCE40 HX FPGA with 79 IO pins broken out!\n\nFeatures At A Glance\nIO Pins\nThe Cu features 79 IO pins at 3.3V. The signals for the on-board LEDs and reset button are also broken out giving you access to a maximum of 88 IO pins.\nOpen Source Tools\nThe Lattice FPGA is supported by the official iceCube2 tools as well as unofficial open source toolchains.\nUSB C\nThe USB C port on the board is used to configure the FPGA as well as transfer data to and from your design via a serial interface capable of up to 12M baud. This port can also supply the board its power and is protected by a diode if you decide to power the board externally.\nPower\nThe board is powered through the USB C port, 0.1” holes, or through its surface mount headers. The board requires 5V and generates 3.3V for IO and 1.2V for FPGA internal logic. The amount of current drawn is incredibly varied by your FPGA design but the power supply can pump out 3A on the 3.3V rail and 1.5A on the 1.2V rail so you don’t need to worry.\nPeripherals\nLike all Alchitry boards, you get exactly what you need built into the board without all the extra fluff. The Cu has a 8 general use LEDs and a button typically used as a reset. It also has a 100MHz oscillator for clocking your designs. The FPGA is capable of synthesizing new frequencies from this if you need to clock your design faster or slower.\nDocuments\n\nProduct Brief (includes dimensional drawing)\nSchematic\n3D Model (IGES File)\nElement Eagle Library\n\n","id":"https://alchitry.com/boards/cu/","title":"Alchitry Cu"},"https://alchitry.com/boards/ft/":{"body":"Send all the data! This element features a FT600 USB 3.0 bridge that adds up to 200MB/s (that is bytes not bits!) of bandwidth from your FPGA to a computer.\n\nFeatures At A Glance\nUSB C\nThe Ft has extra circuitry to handle the reversible nature of the USB C port. It detects the orientation of the cable and routes the signals to the FT600 correctly.\nFT600\nThe FT600 from FTDI is capable of 200MB/s of throughput. This is shared for both directions meaning you can get 200MB/s in one direction or any split between transmitting and receiving. The actual maximum rate will be slightly under 200MB/s due to some overhead in reading buffer states. We were able to easily achieve 190+MB/s.\nStackable\nThis board has surface mount connectors on both sides with the signals passed through allowing you to stack another element on top.\nDocuments\n\nFT600Q Datasheet\nSchematic\n\n","id":"https://alchitry.com/boards/ft/","title":"Alchitry Ft"},"https://alchitry.com/boards/io/":{"body":"This is the perfect add-on board for getting your feet wet with FPGAs. With plenty of LEDs, buttons, and switches, you can experiment to your heart’s content.\n\nFeatures At A Glance\n7-Segment Display\nThe Io has four seven segment LED digits that are multiplexed. Learning to use these if a great stepping stone to more complex projects.\nLEDs\nThere is a total of 24 LEDs in three groups of 8. Each one is directly connected to its own IO pin on the FPGA making outputting signals super easy.\nDIP Switches\nThe Io has three 8-pack DIP switches for a total of 24 switches. These are all also connected to their own IO pin on the FPGA making inputting values as simple as flipping a switch.\nButtons\nThere are five buttons arranged in a standard directional pad style.\nNot-stackable\nBecause you need access to the top of this board, other boards can’t be stacked on top of it.\nDocuments\n\nIo Tutorial\nSchematic\n\n","id":"https://alchitry.com/boards/io/","title":"Alchitry Io"},"https://alchitry.com/home/":{"body":"Welcome to the new Alchitry website!\nIntroduction to Digital Electronics and FPGAs\n\n    \n","id":"https://alchitry.com/home/","title":"Alchitry"},"https://alchitry.com/news/":{"body":"","id":"https://alchitry.com/news/","title":"News"},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"body":"Today version V2.0.13 of Alchitry Labs was released!\nVerilog Interoperability#\n\nA ton has changed/been added since the last post about V2.0.8.\nThe biggest feature, by far, is the addition of Verilog interoperability.\nYou can now add Verilog modules and instantiate them from Lucid. This was an important missing feature to allow for vendor specific things to be easily integrated into Lucid projects.\nFor example, in a Verilog module, you can instantiate the primitives outlined in UG953 for the Au/Au+. This is important for stuff like the upcoming Alchitry Hd that utilizes the OSERDESE2 primitive to output HDMI video data.\nWhile the entire Verilog module is checked for syntax error in the editor, Alchitry Labs doesn't look at the content inside the Verilog modules. It only ever looks at the module interface (parameters and ports).\nThis means that Verilog inside Alchitry Labs has a lot less guards in place and should only really be used as glue to existing Verilog.\nIt also has the major downside that Verilog modules are essentially ignored during simulations.\nString Indexing#\n\nTo make Verilog smoothly interoperate with Lucid, the indexing for strings was reverted to how it worked in Lucid V1. That is, the right-most letter is index 0 instead of the left-most.\nFor example, the string \"Hello\" in Lucid is represented as an [5][8] array where index [0] points to \"o\". In V2.0.12 and earlier, index [0] pointed to \"H\".\nYou can use the $reverse() function to restore the indexing to the previous behavior.\nVerilog uses the right-side indexing so it now matches. This was important for passing strings as parameters which is often done with Xilinx's primitives. Before this change, the Verilog side would see the strings as reversed causing them not to be recognized.\nWhile having the right side of string be index 0 seems a little strange, it does nicely match how arrays and everything else are indexed. Now, the right side is always index 0.\nBuild Flow#\n\nThe way projects are built underwent a huge change. Previously, when building a project, the tools would start with the top-level module and build out a tree of all instantiated modules underneath it. This has the huge benefit of knowing what all the parameter values are as they must be specified at this point.\nThe big downside of this, is that a separate Verilog translation needs to happen for every different combination of parameters on a module. For example, if you used a counter module and set it's parameter #SIZE(8) but in another location used the counter with #SIZE(16) then two separate Verilog modules would have been generated.\nThis was a fairly small downside to making all constant values calculable when converting to Verilog. However, it has the big downside of making it impossible to call a Lucid module directly from Verilog.\nIn the new version, each module is translated to Verilog in isolation properly using parameters. \nThis makes it possible for Lucid modules to be used inside Verilog modules.\nIt also likely helps the build tools to do things more optimally.\n$isSim()#\n\nA new function, $isSim(), was introduced. This function evaluates to 1b1 if running in an interactive simulation and 1b0 otherwise.\nThis is useful for dealing with the much slower clock speeds when running an interactive simulation (usually around 1,000 Hz instead of 100,000,000 Hz).\nFor example, providing a different DIV parameter value to a multiSevenSeg module with the following makes the display work well in simulation and builds.\n\nNote that $isSim() evaluates to 1b0 during test benches.\nBeta Release#\n\nThings are getting pretty close to the release of V2.1.0 which will mark the first beta release.\nCheck out the V2.1.0 Milestone on GitHub to track the remaining features to be added before the release.\nIf you're using the preview builds and run into any issues, be sure to report them on GitHub so I can get them fixed ASAP!\n","id":"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/","title":"Alchitry Labs V2.0.13 - Verilog Interoperability"},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"body":"Alchitry Labs V2.0.21-BETA just dropped with support for the new Alchitry V2 boards.\nTo properly support the new boards, the format for Alchitry Constraint Files (ACF) were updated. \nThe format for every constraint now has the following format.\n\nJust like before PORT is a port from your design's top-level module and PIN in the Alchitry pin to connect it to.\nMost of the time, the PIN name will follow a format of bank letter followed by the pin number like A2 for bank A pin 2.\nHowever, there are special values such as LED0 which corresponds to the pin connected to the first LED on the board.\nYou can take a look at the current pinout files if you're curious about the full list.\nOPTIONAL_ATTRIBUTES#\n\nThe new part of the constraints are the OPTIONAL_ATTRIBUTES.\nEach attribute takes the form ATTRIBUTE(VALUE).\nThere are currently six of attributes; PINOUT, STANDARD, FREQUENCY, PULL, DRIVE, and SLEW.\nPINOUT#\n\nLet's start with PINOUT.\nThis attribute has two valid values, V1 and V2.\nThis can be used to specify what version of connectors you are using.\nIf you're using a V1 board, then V1 is the only valid option.\nIf you're using a V2 board and set it to V1, the tools assume you are using a V2 → V1 adapter for those pins.\nIf PINOUT isn't specified, the current board version is assumed.\nThis is useful in the niche case where you're only specifying pins common across every board like in base alchitry.acf file.\nSTANDARD#\n\nThe next attribute is STANDARD.\nThis is used to set the IO standard.\nMost of the time this is LVCMOS33 and this was set implicitly before.\nIf you're using a Cu, then this is the only valid option.\nHowever, if you're using any version of the Au, then there are many more options.\nThe Xilinx document UG471 goes into a lot of detail about the various options.\nNot every option in that document is supported, however.\nEach IO standard has its requirements in order to use it.\nThe biggest constraint on these is the required VCCO.\nVCCO is the voltage used to power that bank of IO pins.\nMost banks on the Au are powered by 3.3V.\nHowever, on the Au and Au+, one bank can be switched to 1.8V.\nOn the Au/Pt V2, that bank can be switched to 2.5V.\nThe Au/Pt V2 uses 2.5V instead of 1.8V to enable LVDS_25.\nLVDS_25 is a pretty common standard and it compatible with a lot of LVDS devices.\nYou can check the Xilinx document DS181 for the switching voltages to ensure compatibility with your device.\nOther than LVDS_25 and LVCMOS33, you'll likely see LVCMOS25 for single ended signals on the dual voltage pins and TMDS_33 for HDMI signals.\nFREQUENCY#\n\nIn the new version of Alchitry Constraints, the clock keyword was removed in favor of the FREQUENCY attribute.\nWhen you have a clock, you now specify it as any other pin but you add the FREQUENCY attribute specifying the expected frequency.\nThe value passed to it takes the same format as clocks before, a value with a unit suffix.\nFor example, 100MHz or 500KHz.\nPULL#\n\nBefore, pullup and pulldown were keywords you could tak onto the end of a pin constraint.\nNow the PULL attribute takes this place.\nFor the Cu, PULL can have a value of UP to enable the pin's pullup.\nFor the Au/Pt, PULL can have a value of UP, DOWN, or KEEP.\nUP and DOWN enable the pin's pullup or pulldown respectively.\nKEEP enables the pin's keeper.\nThe keeper will weakly try to keep the pin at its current value.\nIf the pin is low, the pulldown is enabled.\nIf the pin is high, the pullup is enabled.\nDRIVE#\n\nThe DRIVE attribute is only valid on the Au/Pt.\nSome STANDARD values allow for a drive setting. \nThese include LVCMOS33, LVCMOS25, and LVTTL.\nThe DRIVE attribute takes in a number that specifies how strong that pin should be driven in mA.\nValid values for LVCMOS33 and LVCMOS25 include 4, 8, 12, or 16.\nValid values for LVTTL include 4, 8, 12, 16, or 24.\nThe default value is 12.\nSLEW#\n\nThe SLEW attribute is only valid on the Au/Pt and for specific STANDARD values.\nMost standards support it but notably LVDS_25 does not.\nIt takes a value of FAST or SLOW with SLOW being the default.\nSlew rate is how fast a signal transitions.\nUsing FAST may be a good choice for some high speed signals but may lead to reflections and increased noise if not properly designed for.\nFAST also requires more power.\nAttribute Blocks#\n\nIt is common to want to apply the same attribute value to a bunch of pins.\nThis is where attribute blocks come in!\nThese take the same form of connection blocks in Lucid.\nThat is, a comma seperated list of attributes followed by a block of constraints enclosed in braces.\nHere's the constraint file for the Io V1 with pulldowns enabled.\n\nAll the pin constraints are enclosed in the first attribute block specifying the PINOUT and STANDARD.\nThe io_dip and io_button signals all also have their pulldowns enabled via the PULL(DOWN) block.\nJust like in Lucid, these attribute blocks can be nested.\nThis update add quite a bit of capability to the ACF format which will allow native support for more projects like HDMI signals on the Hd.\n","id":"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/","title":"Alchitry Labs V2.0.21 - Alchitry Constraints Updated"},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"body":"Alchitry Labs V2.0.24-BETA is now out bringing many updates from the last blog post on 2.0.21.\nNew Components#\n\nAlchitry Labs now has a few new components baked in to support the Ft,\nFt+, and Hd.\nMost importantly, constraint files for these boards are now in the Components Library.\nThis also includes the much overdue constraint file for the original Ft.\nA new ft component was added under the Interfaces category of the Components Library.\nThis component supports the Ft and Ft+ with both read and write operations.\nIt's a great starting point for any project using either of these boards.\nIt handles switching between reads and writes automatically.\nThe interface to the rest of your design is simply two FIFOs.\nOne for sending data and one for receiving data.\nParameters can be set to prioritize sending or receiving to ensure you don't accidentally starve out one direction.\nA tutorial showing how to design an interface and actually get data off is planned.\nThe spi_controller and spi_peripheral components also got a facelift.\nThe spi_peripheral has improved synchronization of its inputs and now provides a clock cycle to use the last\nreceived byte to influence the next byte to send.\nThe spi_peripheral is great when bus speeds are fairly low (&lt;1/16th the system clock).\nHowever, sometimes you need a faster bus.\nThis is where the new spi_fast_peripheral comes in.\nThis component supports bus speeds right up to the system clock.\nBeing able to handle this speed has a few tradeoffs over the standard version.\nFirst, the byte to be sent out on the next cycle is read during the previous byte.\nThis means that the first byte of a transaction is always 0 and a dummy byte must be inserted if you need to respond\nto a previous byte.\nA typical transaction usually starts with the controller sending a command followed by the peripheral responding.\nA dummy byte is required between the command and the response to give it type to get the byte received across clock\ndomains and the byte to send back across.\nAsynchronous Resets#\n\nWhen writing the spi_fast_peripheral, I ran into a fairly unique scenario where I needed to reset some dff when\nthere wasn't a clock present.\nThis means I needed to use an asynchronous reset.\nTypically, you don't want to use these in an FPGA because they can lead to timing issues if you aren't careful about\nhow the reset edges will line up with the clock edge.\nThis issue is exactly why the reset_conditioner is used to synchronize the input from the reset button to create a\nsynchronous reset.\nSometimes, there is no way around needed an asynchronous reset though and there was no way to implement one in Lucid.\nThis lead me to add the arst signal to dff.\nThis signal works identically to rst except it is implemented as an asynchronous reset instead of synchronous.\nYou can only provide rst or arst for any dff, not both.\nAn asynchronous reset will cause the value of the dff to immediately change to its reset value.\nA synchronous reset waits for the next rising edge of the clock.\nIn the case of the spi_fast_periperal, an asynchronous reset was used to reset some dff that are clocked off the \nbus clock when the chip select line is high.\nDuring that time, there typically aren't any clock edges so a synchronous reset would never actually reset.\nWhile this is now available, you should almost always opt for just using rst in your design unless you have a really\ngood reason not to.\nNegative Indices#\n\nWhile arst is a feature you generally won't use, negative indices are something I think you'll use all the time.\nIf you've ever used Python, you've likely encountered negative indices.\nThis is when indices of an array wrap around 0 instead of being invalid.\nThat means that index -1 is actually the highest index.\nThere are many places where I'll have some signal like my_really_long_signal_name and I'll need to access its MSB\n(most significant bit).\nIf the size of the signal could change, I would have had to write \nmy_really_long_signal_name[$width(my_really_long_signal_name)-1] to get the MSB.\nWith negative indices, I can now simply write my_really_long_signal_name[-1] and the tools will figure it out.\nEssentially, if the index is negative, it is added to the width of the signal.\nThat means -1 is the MSB, -2 is one bit down from the MSB, etc.\nYou can use this anywhere you would have used an index before including in range selectors.\nFor example, my_really_long_signal_name[-1:-2] would select the top most two bits.\nHopefully you'll find this as helpful as I do!\nUpdates#\n\nSome major work went into updating things to work with the latest Compose (GUI) version.\nIt seems like they did a lot of work with Compose to improve its performance and only redraw/compose things that fully \nneed it but that cause some issues in our custom code editor.\nI think it got it all working but if you notice any weird UI artifacts, post \nan issue on GitHub.\nA lot of work also went into creating a new workflow for working with the open source YosysHQ\nprojects.\nThis trip down this rabbit hole was started from an issue raised where yosys-abc was creating access denied errors \nwhen installed on Windows.\nAfter figuring out the issue, I ended up forking the build scrips\nthat YosysHQ uses to build specifically for Alchitry Labs.\nWith this, it'll be easy to keep the open source tools bundled with Alchitry Labs up to date.\nRunning the gradle task download-oss-cad-suite fetches the latest build and adds it to Alchitry Labs.\nThanks for reading and I hope you enjoy the new updates!\n","id":"https://alchitry.com/news/alchitry-labs-v2-0-24/","title":"Alchitry Labs V2.0.24 - Negative Indices"},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"body":"Version 2.0.5-Preview of Alchitry Labs is now available. It now supports simulating the main Alchitry boards as well as the Io Element.\n\n\nSimulation Setup#\n\nMinimally, if your design connects to the CLOCK pin on the Alchitry board, you can click the little bug icon in the tool bar. This will open up a tab that will show a virtual version of your Au or Cu.\nIf you also connect to the RESET pin or the LED0 through LED7 pins, the main board will also simulate those.\nBy \"connect\" I mean that you have valid pin constraints for them in your .acf file.\nWith these connected, you can write your design how you normally would. However, when you click the \"bug\" the simulation will start almost immediately.\n\nHere's a GIF of a counter running on the board. Note that I have the simulation speed set way down so you can easily see the LEDs blinking.\nWhen writing this I discovered a bug in 2.0.5 that prevents you from setting the speed really low (~20Hz or less) where it just doesn't do anything. It's fixed and will make it into the next release.\nWhat's really cool about the simulation is that the LED state isn't just on or off. It actually keeps track of all the values from the previous frame and averages them to allow for PWM.\n\nHere's the classic wave pattern that the Alchitry boards ship with being simulated.\nThis fake persistence of vision effect was important when implementing the 7-segment digits on the Io Element. These are multiplexed so you typically only have one of the four lit at any given time.\nThis is all accurately simulated and you can see in the first screen shot an example of it showing some numbers.\nThe buttons and switches are also all intractable. Clicking on a button momentarily presses it while click on the dip switch toggles it.\nWhen the simulator detects that your design is connected to all the signals of the Io Element, it'll stack one on top automatically.\nControlling the Simulation#\n\nIn the simulation tab, there is a toolbar with a couple of buttons and a text box for controlling the simulation.\nThe first button lets you play/pause the simulation.\nWhen the simulation is paused, you can enter a target into the \"Target Rate\" field. This is the number of cycles per second the simulator will attempt to hit.\nIt may not be able to actually hit your target depending on your design and computer.\nWhen the simulation is running, in the top right you can see the actual simulation rate.\nFor example, my computer is able to hit about 3,200 Hz when running the wave and Io demo.\nReplacing the fancy wave pattern with a basic counter, I can hit about 13,800 Hz. \nThe repeat loop in the wave pattern module is relatively slow to simulate as it can't be parallelized in simulation. Each always block runs in it's own job so many always blocks can be run in parallel but a single always block can't be.\nBack to the simulator, the last button is the reset button. This just simple resets your design as if you power cycled it.\nNext Steps#\n\nI'm now pretty happy with the simulator. I put a ton of work into getting it to run faster and got about 4x the performance from where I started.\nIt's kind of hilarious to see all 32 monster cores of my desktop struggling reach 100 Hz in some benchmarks  when the real FPGA does it all at 100,000,000 Hz with room to spare.\nObviously, this type of simulation is no substitute for actually running stuff on the board. However, with the addition of the Io Element, I hope it'll let some people get into digital design by lowering the barrier to entry just a little more.\nPlease let me know if you try it out and what you think! You can email me at justin@alchitry.com or post on the discussion page.\nNext, I'll be working on the quality of life features of the IDE. \nYou can already format you code with Ctrl+Alt+L but stuff like auto-indenting on new lines needs to be done.\nI also plan to create a robust auto-complete feature. The old one wasn't awful, but it wasn't context aware and would recommend things that would auto-complete into an error.\nThere's also a known bug where the cursor position will get a little messed up. Hitting Ctrl+Alt+L works as a workaround but I need to track down what's causing it.\nUntil next time!\n","id":"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/","title":"Alchitry Labs V2.0.5 - Simulations"},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"body":"\nYesterday version 2.0.8 of Alchitry Labs was released.\nIt's been a while since 2.0.7 was released so I'll do my best not to miss any import updates.\nFirst off, there is now an official Lucid V2 Reference. This page should be able to answer any questions you have about the details of Lucid V2.\nKnown Values#\n\nA major refactoring was done for determining if a value is constant. The old code would keep track of if a value was constant or not with a simple boolean.\nThis became a problem when working with repeat blocks. The issue is that the loop variable isn't constant but it is known during synthesis and should be able to be used like a constant.\nTo fix this, the state of an expression is now marked as dynamic, known, or constant.\nAn important example of this is in the binToDec component that uses the $pow() function with a loop variable.\n\nThe value of j is different for each loop iteration but can be replaced with a constant during synthesis.\nThe $pow() function accepts arguments that are known.\nUpdated Repeat Block#\n\nThe repeat block has been modified a bit.\nThe old syntax was repeat(count, i) where count was the number of times to loop and i was the optional loop variable that would be between 0 and count-1.\nThe repeat block can now take the form repeat(count) where count is the number of loops and there is no loop variable (like before). However, it can also take the form repeat(i, count, start, step) where i and count are as before (but switched positions). The parameters start and step are optional and specify the starting value and amount to increment by each loop.\nIf omitted they default to start = 0 and step = 1.\nNote that this is a breaking change as the form repeat(count, i) is now repeat(i, count).\nComponent Library#\n\nThe component library has been added. It can be accessed by the three box icon in the main toolbar.\n\nComponents are now designated in the project tree buy the same three box icon.\nExample Projects#\n\nIn addition to the components being added, the project templates have been added as well.\nThis means you can easily start a project for the Io with the Io Base or Io Demo templates.\nToolchain Settings#\n\nA settings menu was added under the main drop down that is accessed by click on the Alchitry logo.\nCurrently, it is populated with the toolchain settings. These let you select the locations for your Vivado and iCEcube2 installs.\nThere is also an option to toggle between the built in Yosys toolchain or iCEcube2 when working with the Cu.\nThe Yosys toolchain was updated in the Linux build to not require that a specific version of Python be installed.\n","id":"https://alchitry.com/news/alchitry-labs-v2-0-8/","title":"Alchitry Labs V2.0.8"},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"body":"Alchitry Labs V2.0.14 is now released and with it the status of the project changes from preview to beta!\n\nYou can download it here and help out by reporting any issues you encounter to the GitHub issues page.\nWhat's New#\n\nBefore getting into the technical details of V2, lets look at the fun stuff, what's new.\nThe first thing you're likely to notice is the UI has been revamped. \nIt is based on a modern UI toolkit that allows for easy animations, Sublime-style scroll bars, interactive virtual boards, and drag-and-drop window splitting.\nAlchitry Labs V2 supports the new Lucid V2.\nSee the V1 vs V2 blog post for a summary of what has changed. \nSupport for Lucid V2 is so much deeper than Lucid V1 ever was. \nAlchitry Labs now creates a full model of your Lucid code.\nThis causes plenty of errors that would just fly under the radar in V1 to be caught and reported in real-time.\nIt also allows for your project to be simulated.\nSimulations#\n\nBy clicking the little bug icon, you can launch the simulator.\nIt currently supports the base board (Au, Au+, or Cu) as well as the Io.\nThe simulator is an interactive virtual board running your design.\n\nYou can toggle the DIP switches or press the buttons by clicking on them.\nPWM effects are also simulated on LEDs allowing for fade effects or multiplexing of the Io element's 7-segment displays.\nThe only real catch is the simulator can't run as fast as dedicated hardware.\nBy default, it runs at 1KHz which is a fair bit slower than the 100MHz clock on the real board.\nHowever, many educational designs don't need a fast clock.\nHopefully, the Io simulator will make learning the basics that much easier.\nTest Benches#\n\nAlchitry Labs V2 supports test benches.\nThese allow you test out Lucid modules to make sure they are doing what you expect them to do.\nIn a test block, you can manipulate the values feeding into a module then check their outputs.\nIn the event that things didn't go according to plan, the values of every signal at every step of the simulation are saved, and you can view them after it finishes.\nSee the test bench blog post for more details.\nOpen Source Tools#\n\nUsing the open source tools (yosys, nextpnr, icestorm) for the Cu has never been easier.\nAlchitry Labs V1 had support for some of the older open source tools, but you had to install them yourself.\nV2 now comes with the open source tools so you can use them out of the box for the Cu.\nThis also means that you can now build projects for the Cu natively on a Mac!\nCurrently, the open source tools don't support the Artix 7 used on the Au, but they are in development.\nAll The Small Things#\n\nAlchitry Labs V2 has been in the works for over two years now.\nThere are way too many things to list here that has changed.\nMost of the important changes are under the hood and will allow future improvements to continue in a sustainable way.\nI hope you'll head over to the download page and check it out.\nYou can leave any general feedback on the discussions page and report any issues to the issues page.\nWhy V2#\n\nAlchitry Labs was originally the Mojo IDE. The goal of the Mojo IDE was to both create an IDE with creature comforts like real-time syntax error checking and support a new HDL, Lucid, to make programming FPGAs more accessible.\nThe initial Lucid support was very basic. The IDE would show any syntax errors, but nothing more in depth than that.\nThe focus was on creating a Lucid -&gt; Verilog translator so you could even use it. \nOnly later, more indepth parsing was added.\nAt first, only the widths of signals and expressions were checked. \nIt was able to warn you if an assignment would truncate your value.\nOver time, the types of errors being checked continued to grow. \nEventually, it was doing full parsing of constant values.\nThis lead to the idea that the parser could be used to simulate Lucid. \nAll you have to do is run it over and over right... right?\nTurned out to be a tad more complicated.\nWhen looking into how to actually turn the parser into a simulator, it was clear the pile of tech debt had grown too much to ignore any longer. \nI started writing the Mojo IDE a decade ago during my junior year of college. \nIt was by far the biggest piece of software I had written and I made plenty of questionable design choices.\nTo make any meaningful improvements, a full rewrite looked like the only practical way forward.\nNew Tools#\n\nSince things were starting over, I was able to overhaul the GUI. \nV1 was based on the aging SWT. \nV2 is based on Compose.\nWhile I appreciated that SWT kept the look and feel of the native desktop environment, Compose is enormously more flexible.\nThe new interactive virtual boards would have been incredibly difficult to pull off with SWT. \nThe other major shift is that V2 is pure Kotlin. \nI was notoriously bad at checking for null values in the original Java based parser causing a vast number of bugs that would simply crash the IDE.\nKotlin's built-in null safety has been incredibly helpful.\nKotlin's other features, like coroutines, have also been instrumental for building out the simulator in an efficient manner.\nThe last fundamental change was in the build system.\nBefore V2, building distributables was a nightmare.\nIt was a multistep error-prone process including firing up a Windows VM to build the Windows executable and installer.\nThis inherently lead to infrequent updates since they were such a pain.\nThe new system relies on Hydraulic Conveyor.\nThis software is awesome.\nIt lets me build and publish distributables for Windows, Linux, and Mac, with one click from Linux.\nIt is also free for open source software.\nWhat's Next#\n\nWith the beta released, the next step is to update the tutorials.\nI'll be working on the first few this week.\nLooking back at the V1 tutorials, I'm a bit disappointed I never got into the depth I should have.\nI'm planning to rectify that with V2.\nThese will go hand in hand with work on the IDE.\nThe best place to see what's coming is the issues page.\n","id":"https://alchitry.com/news/alchitry-labs-v2-beta/","title":"Alchitry Labs V2 - Now in Beta!"},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"body":"It has been a while since I last wrote about the progress on Alchitry Labs V2 and a lot has changed.\nBuild Tools#\n\nI've spent a good amount of time working on building out the Gradle build script so that the deployment process will be much easier than it was for Alchitry Labs V1.\nWhen I was looking for a way to create the Window's installer, I discovered that Compose Multiplatform has a built-in packaging tool!\nIt turns out that this still has the major downside of needing to be running on the OS that you want to package for. This means you can't build an installer for Windows from Linux. Bummer, but not the end of the world.\nI ran into two other issues when flushing out the build script. First, Compose's build tools only support creating one launcher per application. I need to create two. The main one to launch Alchitry Labs and the second to launch the Alchitry Loader.\nThese two programs are actually the same thing with just a different argument passed to them to show a different GUI.\nIt turns out that jpackage, the tool used by Compose, has a way to add additional launchers but Compose currently gives no way to access it. I add the support I needed, I forked the Compose plugin and submitted a pull request.\nFor now, I'm using my local forked version of the Compose plugin, but hopefully they'll accept the pull request or make some similar changes to allow creating additional launchers.\nCommand Line Interface#\n\nSomething I often get emails about is for command line support in Alchitry Labs. Well, I'm happy to announce that the command line interface for Alchitry Labs V2 will be well supported.\nI've decided to get everything working via the command line before diving too much into the GUI.\nRight now, the loading tools already work. So if you've been looking for a way to load your Alchitry boards from the command line, check out the very early releases below.\nThe command line is broken into a bunch of subcommands.\n\nIf you install the .deb on Linux, you'll get access to the alchitry command.\nOn Windows, the Alchitry.exe executable in the installation directory can be used.\nYou can run --help on each subcommand for more info.\n\nFor example, you can load a .bin file like this.\n\nIf you try this out, let me know what you think over at the discussions page.\nReleases#\n\nThese aren't really a \"release\" as much as just something you can try and mess around with.\nThat being said, the loading features should be fully working.\nLinux Deb\nWindows Installer\nThe Labs GUI will open but it doesn't really do much. It is basically just a test right now for the custom text editor.\nThe Loader GUI doesn't open/exist at all yet.\nThe command line tools work for creating and simulating projects as well as loading .bin files.\n","id":"https://alchitry.com/news/alchitry-labs-v2-cli/","title":"Alchitry Labs V2 - Command Line Interface"},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"body":"Alchitry Labs V2.0.17 just release and is a major shift from previous releases.\nsnake_case#\n\nWhen starting on Lucid V2, I had originally though to make camelCase the default style for names.\nHowever, I think this was a poor choice for a few reasons and decided to switch to snake_case.\nThe biggest reason to use snake_case is because this is what is used by Verilog.\nAll the Xilinx tools use snake_case so when mixing Lucid and Verilog it is nicer to have a consistent style.\nLucid V1 was also mostly documented in snake_case but the styling wasn't super consistent.\nThis is what made me think to switch in the first place.\nI generally prefer the aesthetics of camelCase, but writing rst_n as rstN is just awful.\nAdding a _n or _p suffix to names is common with differential signals (as seen in the DDR3 MIG module).\nSingle letters are hard to discern in camelCase and are much better in snake_case.\nWhat Changed#\n\nIn V2.0.17, all the components and example projects switched to use snake_case for names.\nFunctions names also changed so $silentTick() became $silent_tick().\nThe keyword testBench also changed to testbench.\nIt seems a bit inconsistent if the word testbench is two words or one, but it seems like it is more often seen as one.\nI also thought using test_bench as a keyword felt weird.\nAuto-migration#\n\nIf you open an older project with Alchitry Labs V2.0.17 or newer, it will automatically migrate your code.\nThis means files will be renamed and all camelCase will be replaced with snake_case.\nAlso, in the Io constraints and examples ioSel became io_select and ioSeg became io_segment for clarity.\nThe migration will change these names as well.\nI'm sorry for any inconvenience this causes to anyone already using Alchitry Labs V2, but I believe in the long run this is the better choice.\nI'll be updating the tutorials and documentation today to reflect these changes.\n","id":"https://alchitry.com/news/alchitry-labs-v2-snake-case/","title":"Alchitry Labs V2 - snake_case"},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"body":"Today was the first time I built a .bin file from Alchitry Labs V2!\nBefore we get too far ahead, there is a lot more to cover.\nIn the last release, I use the Compose Multiplatform Gradle plugin to create native distributions.\nAt first, this seemed like an awesome solution. However, it has one fatal flaw.\nThe plugin requires you to build each target on its respective platform. That means if you want to build for Windows, you need to be on Windows. If you want to build for an ARM based Mac, you need to have an ARM based Mac.\nThis requirement was the same issue I had before with the original Alchitry Labs but it wasn't that bad since I only ever built for Windows and Linux X64. I was able to do everything from Linux using a Window VM.\nThis time around, I want to add support for more systems. Alchitry Labs runs on a JVM (Java Virtual Machine) so in theory it should run in a ton of places with minimal work.\nI'm hoping to target everything that Compose supports, Windows x64, Linux x64, Linux ARM, Mac x64, and Mac ARM.\nWhen looking for solutions to this, I came across Conveyor which seems to be almost everything I was looking for. Best of all, it is free for open source projects like Alchitry Labs!\nConveyor lets you build for every target from a single system. It also deals with code signing and pushing updates.\nThe only downside right now is that it doesn't support Linux AArch64 (ARM). I became a paid subscriber to get this feature onto the dev's radar and I was told it will likely make it into the next major release.\nNow that I have this all setup, I can run a single command that builds my project, creates update packages, creates an update website, and pushes it all to GitHub.\nYou can now download the latest version from the GitHub page here\nI'm currently just self signing everything. This only really matters for Windows and Macs where you'll see more security warnings when trying to install it.\nI'll likely get everything officially signed for the next release. For the Window's release, this means that it'll be available from the Microsoft Store.\nThe Linux version is now packaged as a deb which makes installation so much easier! Installing the deb also adds an update site so that when updates for Alchitry Labs are available they show up in the package manager with everything else.\nMac Support#\n\nAs I've mentioned above, the new releases have Mac versions.\nBefore you get too excited, no, you still can't run Vivado or iceCube 2 on a Mac. This means that you still can't build FPGA projects using the proprietary tools.\nSo why bother supporting Macs? First, many people run the build tools inside of virtual machines inside a Mac. USB devices don't always play nicely going across the VM layer so by having native support for the Alchitry Loader, we can avoid that issue.\nThe Mac versions of the loader are already working!\nSecond, there are open source tools that can run on a Mac. I'm hoping to bundle these with a later release of Alchitry Labs so that you will be able to develop for the Alchitry Cu natively on a Mac.\nThe New Verilog Converter#\n\nThe biggest update to the Alchitry Labs V2 codebase is the Verilog converter.\nContinuing with the full rewrite, the new converter is much cleaner than the old one. The original converter was one of the first things I wrote back when the IDE was the \"Mojo IDE.\"\nBack then, the converted was responsible for everything. Given some Lucid text, it had to spit out a Verilog version.\nThe new converted is instead given a fully parsed Lucid module instance. A lot of the complicated tasks are already done in the previous stage such as dealing with signal indexing, declarations, etc.\nThis, along with better coding practices, has made the new converter about 40% of the size of the original! I'm pretty excited for it.\nACF Parser#\n\nWith a Lucid-&gt;Verilog translator working, the next step was to add support for constraint files.\nThe Alchitry Constraint File format is super simple and adding a parser for it wasn't too complicated.\nI ended up modifying the format a bit from V1 though. \nKeeping with the change to Lucid, semicolons are now optional. Also, clock statements are considered a special type of pin statement so you don't need to specify both for a single pin.\nIt now checks that the names of the ports and pins are valid. Wildly, I apparently never checked the pin names properly for V1 so they would just show up as \"null\" in the converted constraint file and cause silent issues.\nFor now, I just have an ACF-&gt;XDC converter (XDC is the Xilinx format).\nTest Build#\n\nWith all the pieces in place, I was able to get a test build running.\nOnce a project is open, calling Project.build() simply builds the entire project!\nThis only works for the Au/Au+ right now as I still have to port the Cu builders but it is a big milestone!\nBuilding Au projects is accessible from the command line interface now.\nIf you want to check out the progress, see the GitHub page.\nYou can install the latest version here.\n","id":"https://alchitry.com/news/alchitry-labs-v2-update-1/","title":"Alchitry Labs V2 - Update 1"},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"body":"It's been a while since I've posted an update and a lot has happened. Most of the work I've been putting into Alchitry Labs has been for the new GUI.\n\nAs I've mentioned in a previous blog post, this time around I'm using Compose Multiplatform for creating the UI instead of the now very old SWT.\nCompose is fundamentally different from SWT and allows for a lot more freedom in creating a beautiful UI. However, since Compose for desktop is so new, there are some growing pains I've had to overcome.\nCode Editor#\n\nOne of the first things I did when starting the Alchitry Labs rewrite was to see if I could make a text editor perform well with Compose. The built in TextField widget is fine for small text fields but falls apart for something as complicated as a code editor.\nCompose exposes various levels of abstraction you can dig into depending on what you want to accomplish. I jumped a few layers down and created my own code editor composable. \nThe most important difference between my code editor and the built in TextField is that my code computes the layout of each line individually instead of the entire block of text. The big upside to this is that when text is being edited I only need to compute the lines that change instead of every single line.\nThis makes editing text fast no matter how big the file is.\nThere was a lot of complexity added to make this work but the payoff was worth it.\nIn addition to performance, I was able to add some additional features that are nice to have for the code editor, such as the line numbers in the gutter. These are even flexible so I can potentially later add stuff like icons if needed.\nTextField also doesn't provide any way to draw a background color behind text so I had to add this custom. This allows for highlighting the token the cursor is on as well as all matching tokens. \nTabs#\n\nThe next major UI hurdle was making the editor tabs work. I already had written a sash composable that would allow me to split a section into left and right or top and bottom resize-able areas (I needed it already for the main layout). However, I wanted to make splitting the editor be as easy as dragging a dropping the tab to where you want it.\nAgain, compose gives you plenty of tools to do this and I had already done something similar for a different project that I was able to steal most of the code from. With some modifications I ended up where it is now where you can not only drag and drop the tabs to rearrange them but drag them top any side of the window to split it.\nThis is definitely a step up from the previous version that requires you to split then window then drag the tab over.\nProject Tree#\n\nThis is something that still needs some work, but one of the new features is that file names in the tree are color coded based on their state (yellow = has warnings, red = has errors).\nThis was possible because the way projects/files are checked for errors is fundamentally different than before.\nWhen a file is changed, an error check is queued. The error check first parses all the project files for errors like syntax errors. Then starting from the top module, the project is parsed as a tree through the module instances.\nThis allows for a thorough check of the modules using actual parameter values. \nSome of this could be improved in the future such as caching some of the results for files that haven't changed, but even as it is now it is quite fast.\nIt currently doesn't fully check modules that fall outside the project tree (in other words, modules that are in the project but not used). I'll add this in a later update.\nLabs and Loader#\n\nAlchitry Labs and the Alchitry Loader now share one executable/launcher. This was done because it isn't possible to create two launchers with one installer on macOS.\nInstead, when you open Alchitry Labs, it'll open whatever you were using last.\nTo switch between Labs and the Loader, you simply click the Alchitry logo in the top left and choose \"Switch to X\"\nI have a feeling that most people are using either one or the other and don't often switch between the two. If this isn't you, let me know on the discussion page.\nTest It Out#\n\nThere is still a lot of features missing, but if you would like you can download the latest version here.\nEverything should be there to make a simple project, build, and load it to any of the Alchitry boards.\nThis also means you should be able to use this to build projects for the Alchitry Cu on a Mac.\nNext Steps#\n\nThe code editor needs many quality of life improvements such as auto indenting/formatting, auto-complete, support for Verilog, error checking for ACF files, support for Xilinx and Lattice constraint files, context menus (right click), and I'm sure endless more.\nI need to also add in the component library, port the project templates to Lucid V2, and add back in support the Vivado's IP catalog.\nI also need to build the front end for running simulations. All the code is there to actually run it, there just isn't currently a way to conveniently start it or view the results. This will likely be my first next step.\n","id":"https://alchitry.com/news/alchitry-labs-v2-update-2/","title":"Alchitry Labs V2 - Update 2"},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"body":"Simulations are now supported!\n\nTest Benches#\n\nThe new update, 2.0.4-PREVIEW, now has the first draft of the\nsimulation GUI.\nTo run a simulation you need to first create a test bench.\nI've covered these before when you could first run them from the command line so make sure\nto check that out if you haven't already.\nThere's been an addition to the $print function though. You can still pass it a signal directly for the old behavior,\nbut you can now pass in a formatting string followed by the values to use.\nThis is similar to something like printf in C/C++.\nThe function call looks something like $print(\"my value is %d\", mySig) where mySig is the signal to print in decimal\nwhere the %d is.\nThe format options are \"%d\" for decimal, \"%b\" for binary, \"%h\" for hexadecimal, and \"%nf\" for fixed point where\nn is the number of fixed fractional bits (for example \"%2f\").\nRun the Test#\n\nIn the code editor, when it detects a test, there is an arrow in the left hand gutter on the line where the test was\ndeclared. You can click this arrow to run that test.\nAlternatively, clicking the bug icon in the toolbar will run every test.\nThe results of the test are printed to the console and a new tab is opened displaying the resulting values captured at\neach $tick().\nThe waveform viewer is currently pretty basic but its enough to start messing with it.\nYou can use the mouse wheel to zoom and click/drag to pan around.\nThe values at your cursor are show as an overlay.\n","id":"https://alchitry.com/news/alchitry-labs-v2-update-3/","title":"Alchitry Labs V2 - Update 3"},"https://alchitry.com/news/alchitry-labs-v2/":{"body":"I am now starting to work on the UI of the Alchitry Labs rewrite!\nAlchitry Labs currently use UI toolkit, SWT. \nThis is the UI toolkit developed and used by Eclipse.\nAt the time I started working on what was then the Mojo IDE, SWT was a solid choice.\nIt allowed me to create a single UI that worked on Windows and Linux with minimal effort, and it looked native on both\nplatforms.\nHowever, it hasn't aged super well.\nI found it to be fairly limited when trying to do anything custom.\nFor example, I wanted the project tree on the left side of the window to stay the same size when you resized the window.\nThe main code editor should be the only thing that changes size to accommodate the new window size.\nSWT doesn't allow for this, and instead you specify the size of each side as a percent.\nMy workaround was to recalculate the percentages every time the window size changes to keep one side a fixed size.\nThis mostly works, but if you resize the window a lot, you may notice the divider jumps around due to rounding errors.\nIn newer versions of SWT, something changed/broke that broke the tooltip window from popping up when hovering over an\nerror in the text editor.\nI spend a stupid amount of time trying to figure out a fix for this before giving up and sticking with an old version\nof the library.\nThis annoyingly prevents other bugs from getting fixed though.\nOne of the worst offenders is the undo/redo bug in the current Alchitry Labs. \nI've spent days trying to get the undo/redo function to be reliable, but for whatever reason, the way SWT handles the\nedit events have prevented me from getting it to always work. V2 already has a fully reliable undo/redo working.\nTLDR, I'm moving to something else.\nJetpack Compose#\n\nIf you do any UI work and haven't tried Jetpack Compose you're \nmissing out.\nThis is a declarative UI framework originally developed for use on Android, but it has since made its way onto more \nplatforms including desktop.\nI find it a joy to use, and it doesn't lock you into anything allowing me to create whatever custom UI elements or \ntweaks I need.\nUnfortunately, the built-in text editor (TextField) has terrible performance if you are trying to edit any decent amount\nof text.\nThis led me to write my own custom editor that has solid performance for thousands of lines of code.\nWhile this was a substantial amount of work, it also opens up potential in the future for doing cool tricks like \ncollapsable blocks. This was impossible with SWT.\nLucid Parser#\n\nI've also implemented the snapshots for $tick and added $silentTick which skips the snapshot step.\nThe snapshots get compiled into a simulation result that holds the value of every signal in the design for every call\nof $tick.\nThis will allow the UI to display the results of the entire simulation.\nThe Repo#\n\nThe Lucid Parser repo has been renamed to Alchitry Labs V2 and now \ncontains the UI and parser code. \nThis is where all the progress can be found.\nThere is a discussion page, or you can \nemail me and let me know your thoughts.\n","id":"https://alchitry.com/news/alchitry-labs-v2/","title":"Alchitry Labs V2"},"https://alchitry.com/news/alchitry-loader-v2/":{"body":"The Alchitry Loader portion of the Alchitry Labs V2 rewrite is mostly done!\n\nThe new loader automatically detects connected boards and lists them in a drop down. This allows you to have more than one board connected without conflict.\nUnder the hood, it now also handles the D2XX driver a bit more elegantly. It first tries to load the proprietary D2XX library (libd2xx) and if it fails, it falls back to the open source libUSB driver.\nOn Windows, you'll almost always be using D2XX from FTDI. However, on Linux, libUSB is the default but you can install libd2xx and it'll be detected and used.\nThere are still a few weird kinks to work out but it is overall usable (and an improvement over the old one).\nOn Windows, I haven't been able to figure out how to configure the installer to not install a shortcut for the command line interface version of the launcher. After running the installer, you'll see a shortcut called \"alchitry\" which doesn't seem to do anything. This is the command line interface launcher.\nThere seems to be a bug in jpackage that ignores the value of the --win-shortcut option and always makes shortcuts. I'll have to dig into more eventually.\nOn Linux, I've been having a hard time getting the window's icon to be set correctly. On Gnome, it seems to be working but on Ubuntu (22.04) it shows the default Java icon and has some kind of secondary ghost window that you can't focus.\nInstallers#\n\nWindows Installer\nLinux Installer\n","id":"https://alchitry.com/news/alchitry-loader-v2/","title":"Alchitry Loader V2"},"https://alchitry.com/news/alchitry-platinum-v2/":{"body":"The Alchitry Platinum (Pt), is in the early stages of design. \nThis version will most likely be based on the XC7A100T-2FGG484C FPGA.\n\nThis is the same FPGA as the Au+ but in a bigger package with more IO.\nThe major selling point of this package is the addition of 6.25 Gbps GTP transceivers.\nThese open up the possibility of much higher interfaces such as PCIe 2.0.\nHowever, it's a bit unclear as to weather or not the current style of connectors would support speeds that fast.\nThe current connectors were chosen for their high pin density and low cost.\nTheir datasheets (19008 and 19022) make no mention of signal integrity.\nTo ensure the high speed signals are solid, we've been looking into other connectors such as the DF40HC(3.0)-100DS-0.4V.\nThese are nice since they can easily handle the high speed signals and are readily available (both lacking in the current connectors).\nThis brings me to the crux of the design.\nThere are two paths we could take.\nThe first, would be to use new connectors on the bottom of the Pt to carry the high speed signals and the current connectors on the top maintaining compatibility with all existing products.\nThe second, would be to use new connectors on both sides of the board.\nAll the current boards would be redesigned to use the new connectors.\nAdapters would be made to convert from the new connectors to the old (and maybe old to the new) to continue to support legacy products.\nThe pros and cons for the first case are fairly straight forward.\nThe biggest pro, is the status quo is maintained.\nAny existing third-party designs would continue to work with no changes needed.\nAny investment in the current (although fairly limited) catalog of elements would be directly usable.\nCons for the first are that there would now be two types of connectors. \nBoards would have to be designed specifically to go on the bottom of the Pt and couldn't be used elsewhere.\nBoards designed for the top of other boards couldn't be placed on the bottom of the Pt.\nIn an interesting set of conditions, using the new connectors would actually be a bit cheaper than the old connectors.\nThis is in part due to only using two 100 pin connectors per side instead of four 50 pin connectors.\nThe cost difference isn't significant on a board like the Au or Pt but would be on boards like the Br that is almost entirely based on the connector cost.\nThe biggest pro for migrating everything to the new connectors is that the Pt would be able to use most stackable elements on either side.\nThis would allow for combinations of boards that normally wouldn't work because of pin conflicts.\nCurrently, I'm leaning towards a full redesign using new connectors.\nI think long term this would open up more possibilities and now that Alchitry Labs V2 is nearing a releasable state, more of my time is focused on new hardware.\nIf there is going to be a switch, it will have to happen now before a wave of new elements come out.\nI'd love to hear your feedback. \nThere is a thread on the forum where you can let me know your thoughts.\nI'd also be interested in hearing any features or changes you'd like to see on the new boards.\nThanks for taking the time to read this and for any feedback you can give!\n","id":"https://alchitry.com/news/alchitry-platinum-v2/","title":"Alchitry Platinum and Board Rework"},"https://alchitry.com/news/alchitry-v2-design-update/":{"body":"It has been a busy couple of months and things are starting to come together!\n\n\nIf you head over to our new shop, you'll now see renders for all the new V2 boards!\nAll the new boards are now at least in the draft stage with a handful about to start production.\nThe prototypes of the Au, Io, \nand Br have already been made.\nAs you can see from the above image, the Io has been tested and is working great!\nI'm particularly excited about the new buttons being used that have a taller plugger and a more satisfying click.\nThe Io and Br are set to start production this week.\nThe Au had some changes made to the Done LED that will be tested in the Cu prototype before production starts.\nThe Done LED on the V2 boards now serves double duty as a power and Done status LED.\nIf you aren't familiar, the Done signal from an FPGA is an open drain signal that is released when the FPGA is configured.\nIt can be used to synchronize the time multiple FPGAs come up, but it is most commonly just connected to an LED to know the FPGA was correctly configured.\nOn the old boards, if you erased the FPGA then the board would show no signs of life.\nThe new design uses a dual color LED that will be red when the board has power but the FPGA isn't configured.\nIt'll turn green when the FPGA is correctly configured.\nThis week the prototypes for the Cu, \nFt, Ft+,\nand Hd will start production. \nIt usually takes a little under two weeks for these to get made and in my hands.\nBy the end of the year, everything except the Pt should have started full production.\nThat means time is running out to get your pre-order in and secure your 20% off!\nThe layout work on the Pt will be starting fairly soon.\nThe Pt's density means this will take some time but should be available in Q2 of next year.\n","id":"https://alchitry.com/news/alchitry-v2-design-update/","title":"Alchitry V2 - Production Begins"},"https://alchitry.com/news/alchitry-v2/":{"body":"It's official, all the boards are being redesigned into a new form factor.\n\nIf you saw the last post, then you'll know the Alchitry Pt is in the works and requires faster connectors.\n\nThe final decision was to change the connectors used to the DF40 series.\nSpecifically the DF40HC(4.0)-50DS-0.4V and DF40HC(4.0)-80DS-0.4V.\nThis was for a few reasons.\nThe two biggest being availability and signal integrity.\nThese connectors are widely available from places like DigiKey or Mouser.\nThey're also rated for up to 20 Gbps when using the short 1.5mm stack height version (possible on the bottom of the Pt where it's needed).\nIn the 4mm stack height version they're rated for at least 1.3 Gbps which is faster than anything any of the Alchitry boards can do.\nThe new boards use three of these connectors, two 80 pin and one 50 pin.\nThe 80 pin connectors are all signal pairs surrounded by grounds.\nThe 50 pin connector can deliver power to the board, provide 3.3V, and has various control signals like JTAG/Done/Reset.\nYou can check out the Au V2 schematic for the full details.\nThe layout of the boards has also been improved but more notably, they're now even smaller!\nThey're now 1 cm narrower at 55mm x 45mm instead of the current 65mm x 45mm.\nReturn To Manufacturing#\n\nIf you've tried to buy an Alchitry board through SparkFun in the last year or so, it's fairly likely they were out of stock of something.\nThey've been going through some growing pains on their manufacturing line so to keep things flowing, we are now taking back manufacturing of boards.\nSince we're making the boards again, it only makes sense that we would also sell them.\nI'm happy to announce we have a shop again!\nThe first wave of new boards are now available for pre-order.\nSome of them should ship by the end of the year with a few coming early next year.\nThe product pages will continue to be updated as development progresses for each board.\nUntil each board is in stock, we will be offering 20% off pre-orders!\nHaving full control over part selection and sourcing allows us to focus on costs and improve the value we're able to offer you.\nI hope you're as excited as I am for this new chapter.\nFeel free to head over to our forum to discuss the new boards.\n","id":"https://alchitry.com/news/alchitry-v2/","title":"Alchitry V2 - All New Boards"},"https://alchitry.com/news/icecube2-no-longer-free/":{"body":"\n    \n    \n        Lattice has since added a note about free licenses for \"hobbyists, enthusiasts, community educators &amp; start-up companies.\" See the Licensing section at the bottom of this page.\n\n    \n\nIt appears that Lattice Semiconductors, the manufacture of the FPGA used in the Cu, has decided to pull a fast one and silently change the license required to use iCEcube2 from free to an expensive subscription.\nIt's unclear when exactly this change happened, but looking at the latest snapshot from the wayback machine on February 24th, 2024, it was still free.\nOn the live site iCEcube2 is now only listed as Subscription for all FPGA families it supports.\nHeading over to their online store, I'm currently seeing pricing of $471.31 for the first year and $353.15 to renew each additional year.\nThis is insane!\niCEcube2 hasn't had any meaningful software updates in many many years. Just take a look at the versions.\nThe only thing that makes sense to me is that they very much do not want you to use it.\nContact Lattice#\n\nIf this change bothers you as much as it does me, I highly encourage you to contact Lattice and let them know what you think. Click here for their general inquiries email.\nI've sent them an email asking what's going on and I'll update this post if/when they respond.\nA Beacon of Hope#\n\nLuckily, we have an alternative, Project IceStorm and Yosys more generally.\nThe open source tools for FPGAs have continued to improve and my latest experiences with them for the Alchitry Cu have been excellent.\nAlchitry Labs V2 comes with all the necessary open source tools bundled to work with the Cu without having to compile/install anything else.\n","id":"https://alchitry.com/news/icecube2-no-longer-free/","title":"iCEcube2 No Longer Free"},"https://alchitry.com/news/lucid-1-vs-2/":{"body":"This post was created for people who are already familiar with Lucid V1 to get up to speed with what's new/different in Lucid V2.\nStyle Changes#\n\nLet's start off with the most basic changes, those to style.\nOptional Semicolons#\n\nFirst off, the new Lucid grammar now accepts a new line as a semicolon.\nThis means that as long as each expression is on a separate line, you don't need to use semicolons at all.\nThis change was motivated by many modern programming languages.\nTrailing Commas#\n\nAgain taking inspiration from many other languages, trailing commas in lists are now supported.\n\nBy making trailing commas optional, it helps make it easier to re-arrange items in a list or add new items to the end without modifying previous lines.\nCamel Case#\n\nThis is fairly subtle, but camel case is now the preferred naming format for all basic names. The libraries and examples in Lucid V1 were fairly inconsistent between camelCase and snake_case.\nThis is just to make things more consistent.\nStruct Position#\n\nThe first breaking change is that struct sizes are now specified after the array size (or name if there isn't an array size) instead of after the type.\nFor example, before when declaring a sig with an array of 8 structs with type myStruct you would write the following.\n\nThis is now written as the following.\n\nThis change was made to better match how the elements in the signal are structured.\nFor example, mySig[1].structElement is how you access the structElement of the second element in the array.\nIn both cases, the sig is an array of structs so the array index always comes first. \nThis also makes a bit more sense for the cases when you need to specify the width of a signal that doesn't have a type.\nFor example, a struct declaration could look like this.\n\nNo More .WIDTH#\n\nSomething that always felt kind of out of place to me was the .WIDTH attribute attached to \"all\" signals in Lucid V1.\nWhile it worked for the most part, it had two issues I wanted to address. \nFirst, it just didn't seem to fit. There was nothing else like it in the language.\nSecond, it could only be used on full signals, not expressions or anything else.\nBoth of these are fixed by replacing it with the new $width() function.\nSimply pass in whatever you want and it'll spit out a constant value representing the width of the signal/expression.\nThis fits much better as there are plenty of other functions to calculate constant values.\nThe use of .WIDTH was in Lucid before there were custom Lucid functions. Otherwise, it probably would've been a function from the beginning.\nSimplification#\n\nThere are a few changes made to make things a bit simpler.\nrepeat Loops#\n\nFor loops were replaced with the new repeat loop.\nLucid V1 used C style for loop that were easy to write in a way that would be impossible to implement in hardware.\nThe new repeat loop has the simple syntax of repeat(i, count, start = 0, step = 1) {} where i is an optional loop variable.\ncount is a constant expression.\nstart and step are also constant expressions but are optional.\nThe loop will repeat count times and i will be set from start to start + step * (count - 1).\nThis syntax makes it impossible to write a loop with a variable number of iterations (which hardware can't accommodate). \nNo More var#\n\nThe var type was always a bit weird. It was basically just a 32 bit sig that you would use with for loops. \nNo for loops means you doubly don't need it.\nAnywhere you had a var before could be replaced with a sig.\nBye fsm, Hello enum#\n\nThe type fsm was also kind of a weird type. It was a dff with a list of constants attached.\nNothing kept you from using these constants in other places in your designs and a few times I did just that. It always felt a little wrong.\nNow the enum type lets you declare a list of constants that will have their values assigned by the tools just like fsm but it is separate from any storage type.\nSomething like \n\nis now replaced with\n\nThis makes the dff type the only storage type.\nParameter Test Values#\n\nIn Lucid V1 you had to choose between better error checking and making a parameter optional.\nLucid V2 adds the ~ operator during parameter declaration to allow you to specify a test value.\nHere's an example.\n\nBoth the parameter CLK_FREQ and BAUD have test values specified. These values are used when the module is being checked for errors but hasn't been instantiated.\nIf these values were omitted, the error checking code doesn't know what they could be so it has to do its best to check for potential errors.\nYou could provided a value with = instead of ~ but this allows the parameter to be omitted when it is instantiated.\nThe ~ version provides a value for the error checker to use but still requires a value to be explicitly presented when instantiated.\nTest Benches#\n\nA huge reason for the whole Alchitry Labs/Lucid V2 rewrite was to add simulations.\nThese have been covered in a previous post\n","id":"https://alchitry.com/news/lucid-1-vs-2/","title":"Lucid V1 to V2"},"https://alchitry.com/news/lucid-v2-update-1/":{"body":"I just pushed what I believe is the last piece of the core Lucid 2 rewrite.\n\nSince the last update, I added $widthOf(), $fixedPoint(), $cFixedPoint(), and $fFixedPoint() functions.\nThe $widthOf() function takes one argument and returns its width (number of bits). If the value is an array, the \nreturned value is also an array with each entry the width of the dimension. \nFor example, $widthOf({8b0, 8b1}) will return an array {8, 2} since the first dimension has two elements and the \ninner dimension has 8. Remember that in Lucid (and all HDLs) arrays are indexed right to left to match bit numbers\ninstead of left to right like most programming languages.\nIf you read the original post, you may remember for enums I presented the syntax\n$widthOf(myFSM) to get the width of the enum. I ended up scrapping this since passing myFSM as an argument would \nbe a weird exception since you can't use enums directly anywhere else. Instead, I added the .WIDTH constant just to \nenums. So you can now get the width of an enum by using myFSM.WIDTH or $widthOf(myFSM.INIT) (where INIT is any \nmember of myFSM).\nFixed Point#\n\nThe fixed point functions work as expected. The basic one, $fixedPoint(), takes three arguments, the value to convert,\nthe total width, and the fractional width. It returns the fixed point value that is closest to the given value.\nThe function $cFixedPoint() takes the same arguments but returns the closet value that is greater than or equal to\nthe given value.\nThe function $fFixedPoint() is the same but returns the closet value that is less than or equal to the given value.\nInterfaces#\n\nI attempted to implement interfaces, but along the way I discovered they were just too complicated to add at this point \nfor what I believe to be a relatively niche feature.\nThey presented many weird cases that would be difficult to deal with such as an array of modules that used an interface.\nIn the end, I decided using structs was a decent compromise to the added complexity.\nNext Step#\n\nThe next step is to add test benches. I think I have most of this flushed out in my mind (again refer to the \nprevious post for details) but now it's time to get it down in code.\nI don't anticipate this being too difficult to write since the groundwork for simulations is already all there. In \nmy tests\nI've already simulated modules of counters.\nOnce that's done, it'll be on to creating the Verilog translator.\nAs before, there is a discussion page setup as part of the repo\nwhere you can let me know your thoughts.\n","id":"https://alchitry.com/news/lucid-v2-update-1/","title":"Lucid V2 - Update 1"},"https://alchitry.com/news/lucid-v2-update-2/":{"body":"Test benches are here!\nI just pushed a working draft of the test bench code that has the necessities for writing quick tests for you modules!\nTest Bench Example#\n\nTake a look at this revolutionary counter module I created. \n\nI designed it so that the output count will increment by one on every rising edge of the clk input. However, does \nit actually work?!? There's no way to know. Oh wait, we could test it.\nHere is my test bench that does just that.\n\nThe insides of a testBench are very similar to a module with a couple of key differences. There are no ports\nor parameters and instead of always blocks you use test and fun blocks.\nOn line 2, we create a signal named clk that will act as our clock.\nOn line 4, we instantiate the device under test or \"dut\". It is convention to call the module being tested \"dut\" but \nthere is nothing special about the name.\nNext, we have our function declaration. Functions have the same properties as tests, but they aren't run directly. \nInstead, functions are little pieces of helper code that can be called from tests.\nHere I defined the very common function of toggling the clock and called it tickClock. This function doesn't have any\nparameters, but it could.\nFor example, we could give it a parameter to repeat a specified number of times.\n\nFunction arguments act the same as module inputs and can be multidimensional arrays or structs.\nTest Bench Functions#\n\nBefore we move on, let me quickly go over the couple of test bench specific functions that I'm using.\nThe function $tick() is at the very core of the simulation. It initiates a simulation tick. So what is a simulation\ntick? This is when the simulator publishes all signal changes and recalculates the outputs for all the pieces in the \ndesign whose input signals changed. Those output changes then trigger other updates if they are used as inputs. This \ncontinues until the results of everything stabilize.\nThe only time it won't stabilize is if you have some kind of dependency loop like a = b and b = ~a. In this case, \nthe simulator will quit after 1000 iterations. I chose this number as a seemingly nice upper bound, but it may change if\nI find designs often need more or fewer iterations. A loop like this would result in faulty hardware, and anything \nrequiring too many iterations to resolve would likely be too complicated to do in a single real clock cycle.\nSo back to the test bench. Before we call $tick(), first we need to set a value to all signals we are using. Signals \ndefault to having a bx value so bad things will happen if we call $tick() before setting a real value. By bad things,\nI mean that bx value will propagate throughout the design contaminating our counter.\nWith clk set to 0, we call $tick() to initialize the design.\nNext, we hit a repeat block that will repeat its contents 100 times and use the signal i as the iteration index.\nThe first line in the loop prints the value of dut.count using the $print() function. This function takes one\nargument, the value to print. It currently outputs the value in the format dut.count = {00011100} : 28 where the value\nis shown in its binary form as well as its decimal value (if it has one).\nThe next line uses the $assert() function to check that the value of the counter matches the loop iteration we are on.\nThe argument to $assert() can be anything, and it is treated as a boolean. That means if it is non-zero, nothing \nhappens, but if it is zero, the simulation is aborted and the $assert() that caused it is called out.\nThis is very useful for checking values quickly without having to look back through the simulation manually to see if \nvalues make sense.\nThe last line in the loop is the call to the function $tickClock() that we already defined.\nFinally, we end our test by checking that the counter output is 100 after the 100 cycles.\nThis example is from one of the tests and can be found in the \nrepo here.\nNext Step#\n\nThe next step is to add snapshots of the entire design every time $tick() is called. This will allow for the \nsimulation results to be shown after it is run. Currently, it just runs discarding all intermediate values.\nI also plan to have a $silentTick() or similarly named function that does a tick without taking a snapshot. This way\nyou can use that when making the clock fall for most designs and avoid the overhead of an entire snapshot.\nAs before, there is a discussion page setup as part of the repo\nwhere you can let me know your thoughts.\n","id":"https://alchitry.com/news/lucid-v2-update-2/","title":"Lucid V2 - Update 2 - Test Benches"},"https://alchitry.com/news/lucid-v2/":{"body":"A full rewrite of the Lucid parser in Alchitry Labs has been a long time coming.\n\nThe current parser has had feature after feature crudely bolted on to a shaky foundation. It was originally only written\nto convert Lucid into Verilog. Later, error checking for signal widths was added. Then full parsing on constant values\nwas added. Then parsing of non-constant values was kind of added. Then... then... then...\nA lot of the code is confusing and many sections are redundant. On top of that, null checks weren't my specialty and\nI often forgot to check when something could've been null resulting in a crash when bad syntax was entered.\nThe new parser is fixing all this while adding many more features. It is written in Kotlin which largely fixes null \nchecks by having null safe types built into the language.\nBreaking Changes#\n\nI'm also taking this opportunity to re-imagine some aspects of Lucid. Because of this, Lucid 2 will break compatibility\nwith the original Lucid.\nFor example, currently you can use the .WIDTH property of signals in Lucid to access their dimensions (number of bits).\nIn Lucid 2, this is getting replaced by the $widthOf() function. This will allow you to not only get the widths of \nsignals but also expressions. It also helps clean up the internal code when resolving signals.\nThe fsm type is being removed and being replaced with enum. The fsm type was kind of a strange type in that it \nreally was just a dff with an associated set of constants. The new method is to use enum to declare a set of \nconstants and use a dff to hold them. Here's an example.\n\nThis simplifies things by making dff the only sequential type.\nThe eagle eyed among you may have noticed that there aren't any semicolons in the above code snippet. Semicolons are\noptional in Lucid 2. \nThe var type is also being removed. The only real use for the var type was in for loops which you could still use\na sig type for. It wasn't particularly intuitive as it had the size of a computer Int when everything else a single\nbit.\nSpeaking of for loops, these are replaced with repeat blocks. These have the syntax repeat(count, var) { ... } \nwhere count is the number of times to repeat the block and var is the name to use for the current iteration index.\nThis signal is automatically generated for you and you don't need to declare it somewhere else. It is only visible \ninside the repeat block.\nThere are a handful of other minor changes. When declaring a dff or sig, you can now only declare one per line.\nDeclaring multiple off the same keyword was rarely used and often made the code harder to read. Removing this also\nmade the backend code cleaner.\nThe struct portion of a declaration was moved after the array indices. An old dff declaration with that\nused a struct used to look like this dff&lt;myStruct&gt; myDff[8] (.clk(clk));. It now looks like this \ndff myDff[8]&lt;myStruct&gt; (.clk(clk)). The original style was based on generics in languages like Java, but the new style\nfits better with how you actually index the values. It makes it much clearer that myDff is an array of structs.\nNew Additions#\n\nThere will be some new functions to help when working with fixed point numbers. I haven't nailed all these down yet but\nsomething along the lines of $fixedPoint(3.14159, 8, 4) will generate an 8-bit wide number with 4 bits used for the\ndecimal (aka 8b00110010) that is the closest approximation to the 3.14159. There will also be ceiling and floor \nversions that generate the closet value above or below the given value respectively.\nI'm also planning to implement interfaces. These will basically be like struct but each member will have a direction\nassociated with it. I found myself often creating two struct where one would be for inputs and one would be for \noutputs. For example, the memory.in and memory.out structs used by the \nDDR interface.\nInterfaces will allow combining these into a single port. There will be \"a\" and \"b\" versions of each interface where\nthe \"b\" version is a mirrored copy of \"a\" (inputs are outputs, outputs are inputs). That way a module with an \"a\" port \ncan directly connect to a module with a \"b\" port.\nSimulation#\n\nA big motivator for the rewrite was the potential to do full Lucid simulations. The old code would parse constant \nexpressions, but it only hinted at the possibility to do a full simulation by iterating the parsing.\nThe new code builds a full model of your project complete with signal connections, models for always blocks, and other\ndynamic expressions. This not only helps with more robust error checking (it's hard to miss something when you're \nrequired to actually model it all) but will allow for quick simple simulations to check if your logic is working how\nyou expect.\nMuch of this is already working. The details are more than the scope of this post, but check out the link to the source\nbelow for details on how it works.\nAs part of doing simulations, a new testBench will be created. I haven't nailed down the specifics for this either\njust quiet yet but the current idea is for a testBench to look similar to a module. Inside the testBench, you\nwill be able to instantiate your module to test. You can then test it via test and function blocks.\nThe test blocks will work similar to an always block in that the contents will run sequentially.\nThe function blocks will be the same except they won't run on their own and can instead be called by test blocks.\nI'm imagining these being used for common tasks like cycling a clock. For example, something like \nrepeat(100) { cycleClock() }. The syntax for this is very much still up in the air.\nSource and Discussion#\n\nHead over to our GitHub page to check out the current state of things.\nThere is also a discussion page setup as part of the repo\nwhere you can let me know your thoughts.\n","id":"https://alchitry.com/news/lucid-v2/","title":"Lucid V2"},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"body":"A lot has happened since the last blog post!\nFirst lets start with the page you're reading this on, the new website!\nNew Website#\n\nAs you can tell, the website has been updated. It's in the process of migrating from a Square Space to GitHub Pages. \nOver the years I've used many different platforms for the website. \nBack when we still sold boards directly, it was hosted on Shopify. However, once I no longer needed a shopping card, I moved it to Square Space.\nSquare Space is fine, but it is kind of a pain to work with their backend to create new pages. Too many times I accidentally hit back on my mouse only to lose all the content I was working on. I started writing everything locally then moving it to the site only after I was done.\nAnother major pain point I've always had was using html tags to format the pages. All the code blocks you see on the old website were typed &lt;pre&gt; tags that would get highlighted on page load by some JavaScript.\nThis could be really cumbersome to write out making writing tutorials less appealing.\nThis brings me to the current solution, using Zola and GitHub Pages.\nZola is an interesting piece of software that turns a collection of Markdown pages into a static website. This means instead of having to write all the HTML tags, I can instead just write Markdown which is much faster/enjoyable.\nThis also means the site is faster as there is nothing else for the server to do other than cough up the page you asked for. The syntax highlighting is done during the conversion so your browser doesn't need to run any JS to do the highlighting either.\nThe source for the website is on a public GitHub repo. If you ever discover something you think should be changed, you can create a pull request with the change and making it live is then as simple as accepting the request.\nI'm currently in the process of porting over all the old pages so most of the pages still just link to the old Square Space site. I hope to have this done by the end of the week.\nLet me know what you think of the new site over at the new forum!\nNew Forum#\n\nFor quite some time, the forum we had was closed down (read-only). I did this for two main reasons, spam was rampant and I was bad about checking it and responding to posts.\nIt was easier for me to just answer emails. However, some things are nice to have in a public place.\nI spent some time last week setting up a Discourse forum and porting over the data from the old MyBB forum.\nIf you had an account on the old forum and posted something, your account should still exist on the new forum.\nAll the old posts are now in the Legacy Posts category and are still read-only. The formatting of some of the posts didn't transfer perfectly but at least all the information is still there.\nThere are now new categories that you can post to and I should get a notification when this happens.\nDiscourse also seems to handle the spam substantially better than anything I've tried before. The forum has already been hit with quite a few spam  sign ups but most of them never got to post anything. The ones that did manage to post are very easy to clean up.\nHopefully this time around the forum will be a great place to ask questions and get answers.\nAlchitry Labs 2.0.7#\n\nThere have also been some new releases of Alchitry Labs.\nSince the last blog post about 2.0.5 there have been some major under the hood upgrades.\nApart for the typical bug fixes, 2.0.6 brought in basic auto-complete to make life a little easier when writing Lucid.\n2.0.7 is where most of the updates happened.\nSyntax Changes#\n\nFirst off, there were a couple of syntax tweaks to Lucid V2.\nThe grammar was updated to allow for trailing commas in lists. \nFor example...\n\nA small breaking change renamed $widthOf() to $width(). I just felt like the Of portion didn't really fit.\nNew Component Library#\n\nWhen I went to port the components from the Component Library over I wanted to structure things a bit differently.\nThe old version threw all the components into a single folder and used an XML file to provide information about them. This method didn't scale very well and adding new files was annoying.\nThe new version instead puts all the information about a component into a special JSON style comment in the component itself.\nFor example, here is the header for the wave component.\n\nWhen loading in the components, Alchitry Labs looks for the /** **/ block (note the double star) and interprets this a JSON.\nThis comment is then stripped out so it is never seen by the user.\nA component's category is determined by the directory structure making them much more organized.\nThis isn't implemented yet, but it will also automatically determine the dependencies of each component. This was all explicitly written in the XML file before.\nAll of this drastically simplifies adding new components but perhaps more importantly, it makes it much easier to add support for user created components.\nUser created components was something I would get request for fairly frequently but never implemented because of how complex it could be to correctly add a component.  In a future release, I'll implement this likely as simply checking for components in a components folder in the workspace directory.\nNew Project Format#\n\nSince I was getting familiar with KSerializer  for doing the JSON parsing, it seemed like a good time to revisit the old XML style project files.\nHere's the original Base Project .alp file.\n\nHere's the same project in the new JSON format.\n\nThe sample above includes the template section that only exists on example projects and is stripped off before being saved as a user project. The idea behind this is the same as adding the JSON section to the components. All the template information used to be in a rigid directory structure and XML files.\nThe old version didn't allow for sharing an example project across multiple boards. The new one, as you probably noticed, allows for a list of compatible boards to be specified.\nThe priority field is used to sort them for the UI.\nAs I alluded to, all of this is done using KSerializer so the conversion to/from JSON is largely free. There was a lot of ugly code that converted projects to/from XML that is no longer needed.\nIn 2.0.7, the XML project reader is still there so it will automatically convert your project to JSON, but it will be removed at some point so the XML parser dependency can be removed.\nUndefinedValues#\n\nFinally, the biggest update is in how UndefinedValues are  handled.\nWithout writing 10 more pages I'll try to give a quick overview of how values are represented in Alchitry Labs.\nSomething like the value 10 is represented as a BitListValue. That is, a list of bits. It is well defined, consisting of four bits with known values. It is also marked as constant and unsigned.\nIf you have a single bit, it is represented as a BitValue. This is basically the same as a BitListValue but can only represent a single bit.\nBoth of these are grouped into the SimpleValue class which represents basic number values.\nIn Lucid, you can pack multiple SimpleValue values into arrays or structs. To represent these, there are ArrayValue and StructValue classes.\nFor a while now, these have been well implement. However, there is one other type of Value, the UndefinedValue. \nSo what exactly is an UndefinedValue? The only time this is used when there isn't a syntax error, is during a standalone error checking pass of a module with a parameter that doesn't have a default or test value. Follow all that? Great!\nHere's an example.\n\nThe parameter SIZE doesn't have a default or test value so it will be assigned an UndefinedValue that has an UndefinedSimpleWidth. That means that it will be assumed to be a simple number, not an array or struct.\nThe issue is that this UndefinedValue will propagate through the parse. For example, the output value is an array of size SIZE. But SIZE is undefined so we don't actually know how big value is.\nThis means value will be an UndefinedValue with a width of UndefinedArrayWidth. Most values have their width defined simply by their value. In other words, a BitListValue of four bits has a BitListWidth with size four (a class that just holds the number of bits). However, UndefinedValue can have any width that may or may not be known.\nKeeping track of the width helps with providing errors. For example, if we tried to use something that had a width of UndefinedArrayWidth where an array can't be used, we can provide an error before the module is instantiated.\nAll of this was implement in 2.0.7 and fairly well tested through these tests.\nThe propagation of UndefinedValue through an error checking parse means there isn't a ton of information for the IDE to use to provide you with meaningful feedback until your module is instantiated and the value is no longer undefined.\nYou can avoid all this by simply providing a test value using the ~ operator.\n\nThis says that 8 is a reasonable test value for SIZE but shouldn't be used as a default value. In contrast to using =, a value for SIZE will still be required when someone instantiates this module.\nThis is a new Lucid V2 feature.\n","id":"https://alchitry.com/news/new-site-new-forum-new-labs/","title":"New Site, New Forum, New Alchitry Labs"},"https://alchitry.com/tags/":{"body":"","id":"https://alchitry.com/tags/","title":"Tags"},"https://alchitry.com/tutorials/":{"body":"Before you begin, make sure you check out the Setup Tutorials.\nDepending on your background, you may find these Background Tutorials helpful.\nThese are the latest Lucid V2 tutorials. \nFor information on Alchitry V1 boards, see Legacy Boards.\nFor legacy Lucid tutorials, see Lucid V1.\nFor legacy Verilog tutorials, see Verilog.\nTo get an idea of what you can do with an FPGA, see our Example Projects.\nLucid V2 Tutorials\n","id":"https://alchitry.com/tutorials/","title":"Tutorials"},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"body":"This page is a reference for Alchitry Constraints V2.\nAlchitry Constraints File Contents\nAn Alchitry Constraints File (.acf extension) contains a list of pin constraints.\nComments\nComments take the same form as in Lucid.\nUse // for a single line comment and /*    */ for a multi-line comment.\nPin Constraints\nThe main purpose of a pin constraint is to tell the tools which physical pin on the FPGA corresponds to a port \nof your design's top-level module.\nA pin constraint takes the following form.\n\nHere, port_name corresponds to a port of your top-level module.\nIf the port is an array, then it should also include array selectors\nto select only a single bit.\nThe PIN_NAME is the name of the physical pin to connect to port_name.\nThis name is the Alchitry pin name and not the pin name of the FPGA.\nSee the pinout section for the various pin names.\nFinally, the OPTIONAL_ATTRIBUTE_LIST is a list of attributes that apply to only this pin.\nAttribute Block\nSpecifying attributes for every single pin constraint would often become very tedious as many pins will share the same attribute values.\nThis is where attribute blocks come into play.\nThey take a very similar form to the connection blocks in Lucid.\n\nThe ATTRIBUTES_LIST is a comma-seperated list of attributes.\nThe attributes in the list are applied to every pin constraint inside the brackets.\nAttribute blocks can also be nested to allow for fine-grained assignments.\nFor example, the Hd constraints uses two STANDARD blocks along with a single PINOUT block.\n\nAttributes\nAn attribute takes the following form.\n\nThis assigns the value, attribute_value, to the attribute named ATTRIBUTE_NAME.\nThere are a handful of different attributes currently supported.\nPINOUT\nThis attribute is either V2, V1, PT_ALPHA, or not specified.\nWhen it is specified, it says that the pinout used for that pin should use that version's pin mapping.\nWhen it isn't specified, the project's board's version is used.\nFor example, an Au V1 will use V1.\nMost of the time, if specified, it should match the board's version.\nHowever, if a V1 pinout is specified when using a V2 board, then the tools assume you are using a \nV2-&gt;V1 adapter.\nIn this case, the tools will translate the pinout to the adapter's pinout.\nIf a V2 version is used with a V1 board an error is thrown.\nThe value PT_ALPHA is specifically for the first batch of Pt boards that had a pinout error.\nIt is only valid when SIDE is set to TOP.\nThe bottom pinout of the alpha boards should use a PINOUT of V2.\nSIDE\nMost boards only have ports on the top side.\nHowever, the Pt has pins on both sides.\nTo distinguish between the top and bottom, the SIDE attribute was added.\nSIDE can have a value of TOP or BOTTOM.\nIt defaults to TOP.\nOn the Pt, the top and bottom connectors both have banks A and B, and the pin names are identical.\nThis means that a constraint file that works for the top of the board can be simply wrapped in a SIDE(BOTTOM) attribute\nblock to use the board with the bottom connectors.\nSTANDARD\nThis specifies the IO standard to apply to the pin.\nMost of the time, it will be set to LVCMOS33.\nThis is the basic 3.3V IO standard.\nIt is also the only standard supported by the Cu.\nThe Au and Pt both\nsupport the same IO standards.\nThere are too many standards to list here, but page 98 of UG471\nhas a nice table summarizing the requirements for each standard.\nEach IO standard has various requirements that must be met in order for it to be used.\nThe biggest one is the Vcco voltage.\nAll the pins on the Cu and most of the Au and Pt have Vcco fixed at 3.3V.\nThe Au and Pt have one group of pins that can have Vcco switched between 3.3V, 2.5V, and 1.8V.\nThis drastically opens up the IO standards available on these pins.\nFor example, by setting Vcco to 2.5V, the tri-voltage pins can be used as LVDS_25 outputs or enable termination \nwhen used as inputs.\nAny pins on the Au/Pt can be used as LVDS_25 inputs as long as they don't use internal termination.\nThe other common requirement is the Vref voltage.\nMany standards don't require a specific Vref and for the ones that do, an internal reference can typically be used.\nHowever, only one Vref can be set for a bank of pins.\nHere, bank refers not to the connector's bank but rather the FPGA's internal bank.\nIn the Au's schematic, the bank number is the first number \nof the FPGA's IO signal names.\nOn page 2, you can see the header's pinout as well as the associated pin banks for each signal.\nThe banks are numbers like 14, 34, and 35.\nAll the IO standards used in a bank must have at most one Vref requirement.\nFREQUENCY\nThis attribute marks the pin as a clock input with the given frequency.\nThe frequency value takes the form of a number followed by a frequency unit.\nThe unit can be Hz, KHz, MHz, or GHz.\nFor example, 100MHz.\nClock inputs should also be typically placed on a clock capable input pin.\nXilinx (for the Au/Pt) calls these MRCC or SRCC pins.\nLattice (for the Cu) calls these GBIN.\nYou can look at each board's schematic to see what pins are clock capable inputs.\nFor V2 boards, pins A41, A42, A47, A48, B41, B42, and B47 are clock capable inputs.\nThe Au also includes B48.\nThe Pt also includes B24, B29, B30, B48, C41, C42, C47, C48, D41, D42, D47, and D48.\nPULL\nThis attribute is used to enable a pin's pull-up or pull-down resistors.\nFor the Cu, UP is the only valid value.\nFor the Au/Pt, UP, DOWN, or KEEP are valid values.\nUP enables a weak pull-up.\nDOWN enables a weak pull-down.\nKEEP enables a weak pull to the same value the pin currently is (0 -&gt; pull-down, 1 -&gt; pull-up).\nDRIVE\nThe attribute specifies the drive strength of the pin in mA.\nIt is not supported by the Cu.\nIt is only valid when paired with specific IO standards.\nFor the valid values of each standard, see table 1-56 on page 101 of UG471.\nFor LVCMOS33 on the Au/Pt, these are 4, 8, 12, or 16.\nThis number specifies the drive strength in mA and defaults to 12.\nSLEW\nThis attribute specifies the slew rate of the pin and is only supported by the Au/Pt, not the Cu.\nThe slew rate is how fast the edge transitions.\nIt is only valid when paired with specific IO standards.\nFor the valid values of each standard, see table 1-56 on page 101 of UG471.\nFor standards that support a slew rate, the valid values are FAST or SLOW with SLOW being the default.\nUsing a FAST slew rate may help with high speed signals but may also cause more power consumption and noise if not \nused carefully.\nDIFF_TERM\nThe DIFF_TERM attribute specifies if internal differential termination should be enabled.\nIt can have a value of TRUE or FALSE and defaults to FALSE.\nIt is only available with some STANDARD values on the Au and Pt.\nSee UG471 for details on which ones.\nIt is most often used with LVDS_25 on the tri-voltage pins.\nUsing internal termination requires that VCCO be set to 2.5V for the pins using it.\nFailing to set the tri-voltage pins correctly could damage the FPGA.\nPinouts\nThe available pins vary depending on your board, but they follow a standard format.\nThe pins broken out on the connectors are named by the bank letter followed by the pin number.\nFor example, pin 2 on bank A is A2.\nThe V2 boards have two banks on top, A and B.\nThe Pt has two more on the bottom. \nThey're also called A and B but distinguished via the \nThe V1 boards have four banks, A, B, C, and D on top.\nCheck the schematic for the Cu V1, Au V1, Cu V2 or Au V2 for what pins are populated on the connectors.\nIn addition to the pins on the connectors, there are some special internal pin names.\nAll boards have the pins LED0-LED7, RESET, CLOCK, USB_RX, and USB_TX.\nThe Cu (V1 and V2) also have SPI_MOSI, SPI_MISO, SPI_SCK, and SPI_SS that connect to the configuration flash.\nThe Au (V1, V1+, and V2) and Pt also have SPI_D0-SPI_D3, SPI_SCK, and SPI_SS that connect to the configuration flash.\nThere is also VP and VN which are special analog inputs.\nThe Pt also has C29 - C36 that connect to where the LED signals on the Au and Cu are broken out on the control connector.\nThe LED signals aren't broken out on the Pt.\nThe Pt also has USB_D2 - USB_D7, USB_RXF, USB_TXE, USB_RD, USB_WR, and USB_SIWUI for using the FIFO-based \ninterface with the FTDI chip.\nNote that what would be USB_D0 is USB_RX and USB_D1 is USB_TX.\nFinally, there are DDR_DQ0-DDR_DQ15, DDR_DQS0_P, DDR_DQS0_N, DDR_DQS1_P, DDR_DQS1_N, DDR_DM0, DDR_DM1,\nDDR_ODT, DDR_RESET, DDR_BA0-DDR_BA2, DDR_CK_P, DDR_CK_N, DDR_CKE, DDR_CS, DDR_RAS, DDR_CAS, DDR_WE,\nDDR_A0-DDR_A13 for interfacing with the DDR3.\nYou generally shouldn't specify these directly as the MIG core does it for you.\nNative Constraints\nSometimes you may need to do something more advanced that isn't directly supported within the Alchitry Constraint Format.\nFor those cases, you can use a native block.\nThe native block takes the following form.\n\nThe text inside the block will be inserted into the final constraint file mostly as is.\nThis allows you to write XDC constraints\nfor the Au or Pt and SDC constraints for the Cu.\nInside the native block, you have access to two helper functions. acf_pin() and acf_port().\nacf_pin()\nThe acf_pin() function allows you to access the Alchitry pin converter inside the native block.\nThis lets you use the names of the pins on the connectors instead of the FPGA's pin.\nFor example, acf_pin(A3), when used with the Au, will be replaced by N6 (the name of the FPGA pin).\nIf the native block is wrapped in an attribute block specifying a PINOUT or SIDE, that is taken into account\nduring the translation.\nacf_port()\nThe acf_port() function allows you to get the name of a top-level port.\nThe name of the port in Lucid isn't always exactly the same in the translated files, and this function ensures you use\nthe correct name.\nFor example, acf_port(clk) will be replaced with the name of the clk signal (most likely just clk).\nThe port should also include all the indexing.\nThis is where translation often differs from Lucid to the final name.\nFor example, acf_port(led[4]) will be replaced with the correct port name for the led[4] signal.\n","id":"https://alchitry.com/tutorials/alchitry-constraints-reference/","title":"Alchitry Constraints Reference"},"https://alchitry.com/tutorials/background/":{"body":"These tutorials may or may not be necessary based on your background. These are more conceptual tutorials and don't require any hardware to follow.\n","id":"https://alchitry.com/tutorials/background/","title":"Background"},"https://alchitry.com/tutorials/background/addition/":{"body":"Addition is a very important function that allows for the basis of a lot of designs. In order to add two numbers, we first need to decide what number encoding to use. Since the most common is binary, we will be using that.\nThe Half Adder\nTo get a feel for what addition entails with binary numbers, lets look first at the most simple case. What happens when we add two 1 bit numbers?\nWhen designing a circuit it is often helpful to write out a truth table, so we will do that now.\nABOut\n0000\n0101\n1001\n1110\n\nIt is easy to see now that if we only output one bit then when you add 1 and 1 together the result will be incorrect. That means that our circuit will have to have two outputs. If we write out the truth table for each one we get.\nABOut[0]\n000\n011\n101\n110\n\nABOut[1]\n000\n010\n100\n111\n\nNotice that these two truth tables are exactly the same as two of the logic gates we've covered!\nFor Out[0] you can see that it is only 1 when the inputs are different. In other words Out[0] is A xor B.\nFor Out[1] you can see that it is only 1 when the inputs are both 1. In other words Out[1] is A and B.\nLet's now use that to draw up a circuit.\n\nThis circuit is known as the half adder.\nYou can see the outputs are renamed from Out[0] and Out[1] to Sum and Cout. That is because it is better to think of them in these terms later. Cout stands for carry out. Just like when you learned to do addition of big numbers you had to carry any overflow to the next addition, the same is done with binary addition.\nThe Full Adder\nSo we can now add two one bit numbers, but let's be honest, that's really not very useful. We need to be able to add any arbitrary sized number. This is where the full adder comes in handy. When we created the circuit for the half adder we assumed we only had two inputs, the two numbers we were adding. However, our circuit output a carry bit!\nGoing back to those very early days of school, when you add numbers it looks something like this\n\nBut how did we add that second column? We simply added all three numbers together, the two inputs 1 from the 19 and 2 from the 22, as well as the carry from the previous addition. That brings us to the truth table for the full adder.\nCinABCoutSum\n00000\n00101\n01001\n01110\n10001\n10110\n11010\n11111\n\nWe are now adding the three inputs Cin, A, and B.\nIt would be a good exercise if you took this truth table and created a K-map for each output and used that to derive a circuit.\nHere is a circuit that implements this.\n\nThe Carry Chain\nNow that we have a full adder we can add any arbitrarily sized numbers by chaining the carry bits.\nHere is a circuit that will add two 4 bit numbers.\n\nYou may notice that the output from adding two 4 bit numbers is not a 4 bit number, but actually a 5 bit one! That is because when you add two numbers they can overflow their respective ranges, but when adding only two numbers the sum can't be more than twice the range of the inputs. \nSomething else worth noting is that a full adder behaves the same as a half adder if you connect the carry in to 0. In the circuit above the half adder could be replaced with a full adder.\nThis type of circuit is called a carry chain. It is important to notice that the last bit must wait for all of the previous bits to be calculated. This makes adding very large numbers take more time than summing small numbers. This is an inherent problem with carry chain circuits.\n","id":"https://alchitry.com/tutorials/background/addition/","title":"Addition"},"https://alchitry.com/tutorials/background/combinational-logic/":{"body":"There are two main types of digital circuits. The first, and the one we are covering here, is called combinational logic. For a circuit to be considered combinational, it's output must be the same for a given input no matter when that input is applied. An example of this is an addition circuit. No matter when you apply the inputs 2 and 4 the output will always be 6. Because of this requirement, combinational circuits almost never have feedback. \nHere is an example.\n\nTruth Tables\nTo be able to tell what a circuit does, it is often very helpful to write out a truth table. What is a truth table? A truth table is simply a table that tells you the output of a circuit for every given input. \nHere is this circuit's truth table.\nInput aInput bInput cInput dOutput e\n00001\n00010\n00100\n00110\n01000\n01010\n01100\n01110\n10001\n10011\n10100\n10110\n11000\n11010\n11100\n11110\n\nIt is easy to see now that there are only three cases when the circuit outputs a 1. \nTo create a table like this for basic circuits, you can just apply the inputs in your head or write down the intermediate values as well. Another approach that I like to use is to figure out what inputs cause a 1 and then you know everything else has to be a 0. For example, in this circuit I know that b and c must be 0 for the output to be 1. In the few cases where b and c are 0, a has to be 1 or d has to be 0. After marking those three cases with a 1, you can mark everything else with a 0 to complete the table.\nTruth tables are often useful, not just for analyzing circuits, but actually creating them. If you know what function you would like to implement you can write it out in a truth table which can be used to create the circuit.\nKarnaugh Maps\nYou may be thinking, there seem to be many ways to implement a truth table, how do I know which is best? Don't worry! There's a tool created specifically to simplify circuits. This tool is the Karnaugh map, also known as K-map.\nA Karnaugh map is basically just a reorganization of the truth table.\n\nThe important thing to notice here is how the table is setup. It is crucial that when moving to any adjacent box only one input can change. For example, if you look at the box where ab = 01 and cd = 01, you can see that moving up changes d, moving down changes c, moving left changes b, and moving right changes a.\nThe lines on the sides are there just to help make it more clear. The boxes where the lines are are where the input is 1. For example, in the bottom right four boxes, where the c and a sections overlap, c and a are both 1.\nTo simplify the circuit you just have to group the 1's together into pairs of 2.\n\nYou can see that you are allowed to wrap around the map to the other sides to group the 1s as well. If there are multiple groups of 1s together then you can combine them into groups of 4, 8, or 16. You can't group them in any groups that are not multiples of 2. The larger the groups you are able to make the simpler the circuit.\nIn this case we have two groups. Those groups are called implicants. In this example there are no redundant implicants so these two are also the prime implicants. It is possible to have a circuit where you can have unnecessary implants. All that is important is that you cover each 1 with at-least one implicant. If you can remove an implicant while still covering all the 1s then it is redundant.\nThe implicants for this circuit are ab'c' and b'c'd' where the ' means not. For the first implicant you can see that we were able to drop d out of it because the output is one regardless of what d is when a, b, and c match the implicant. The same goes for a in the second implicant. The larger the implicant the more terms you can drop.\nTo create a circuit from the implicants you simply or them all together.\n\nThis circuit performs the same function as the original. You can verify this by writing out a truth table for it.\nA circuit of this form is known as a sum-of-products circuit. That's because when bits are anded that is sometimes shown as multiplication and when they are ored it is shown as addition.\nIt is arguable that this circuit is no simpler than the one we started with and it is true that with only a few minor changes you actually end up with the same circuit. However, the techniques still hold and work well for more complex circuits, or for just creating them. \nKarnaugh maps, while useful for basic circuits, get really messy for circuits with more than 4 inputs. You have to start moving into more than 2 dimensions. Luckily there are tools that will simplify circuits for you, so you only need to specify the circuits behavior.\n","id":"https://alchitry.com/tutorials/background/combinational-logic/","title":"Combinational Logic"},"https://alchitry.com/tutorials/background/digital-logic/":{"body":"\n    \n\nWhat is digital logic? As you may or may not already know digital systems are based on two logic levels which are usually represented as 1's and 0's.\nAn interesting thing to note before we get too far in is that digital circuits are really made of the same stuff as any analog circuit. They have real voltages, with real currents, and those are never exact. The idea behind a digital system is that you simply design it so that there are two main stable states. That way even if you introduce noise it will remain close to that state. This makes digital circuits very robust and noise tolerant. It also allows up to abstract away what the actually voltages are and to just work with 0s and 1s.\nSo what is a 1? What is a 0? If you've ever worked with microcontroller, you know a lot of them run off 5V so we will use 5V in this example. If you were designing a system and it had an input that ranged from 0V to 5V what would you call a 0 or a 1? The most obvious answer is just split it in half. Anything 2.5V or less is a 0 and anything from 2.5V to 5V is a 1. That is what these circuits try to do, however, what happens when you are at 2.5V? Is that a 0 or a 1? Due to variations in the parts, temperature changes, power supply fluctuations, and an almost infinite number of causes it could end up being either!\nBecause of this uncertainty when between states we will call this region no man's land. Digital circuits are designed not to operate with voltages near this region. In fact digital circuits will have specifications that tell you the minimum voltage to be considered a 1 and the maximum voltage that will considered a 0 reliably. For now we won't worry about this since most of the time the circuits are designed to avoid this for us.\nTrue or false?\nDigital circuits are all based around these things called logic gates. Before we get into what the gates actually are, you need to know that they are all based on the idea that a 1 is true and that a 0 is false. This is known as boolean logic.\nDigital logic circuits are often convenient to draw out with symbols. Each symbol represents some logic function that has at least one input and at least one output. In general the inputs are shown on the left and the outputs are shown on the right. That way the signals in the circuit flow from left to right.\nNot\nThis is the symbol for a not gate.\n\nAll that it does is output the opposite of a. So if a is true b is false. You can think of it's output as: is the input not true?\nFor example, if a is 1, then b wil output 0.\nAnd\nThis is the symbol for an and gate.\n\nWhen a and b are both true, c is true. If either a or b is false then c will be false. You can think of it's output as: is input a and input b true?\nFor example, if a is 1 and b is 0, then the output, c, will be 0. That is because both inputs are not true, so the output is false.\nOr\nThis is the symbol for an or gate.\n\nThe output of this gate, c, is true when either a or b are true. You can think of it's output as: is input a or input b true?\nFor example, if a is 1 and b is 0, then the output, c, will be 1. That is because at least one of the inputs is true, so the output is true.\nXor\nThis is the symbol for an xor gate.\n\nThis gate you usually don't see as often as the other three, but it is none the less important. This gate is true only when either a or b is true but not when a and b are true. It is an exclusive or. You can think about it as: is input a different from input b?\nAnother useful way to look at xor gates it to think about that output as: is there an odd number of 1s? This way of thinking about it is useful for xor gates that have more than two inputs.\nFor example, if a is 1 and b is 1, then the output, c, will be 0. That is because the inputs are the same so the output is false, or because there are an even number of 1s so the output is false.\nVariations\nThese are only the basic types of these gates. There are many variations of them. The most common variations you will see are combinations of, and, or, xor, with a not gate at the output. Those gates are called nand, nor, and xnor respectively. They are represented the same as their base gate but they have a circle on the output, just like the not gate does.\nThe circle represents an inversion (a not gate) and they don't only have to be on the output. They can be on any of the inputs as well. It is just a compact way to draw the schematic so you don't have lots of not gates everywhere.\n","id":"https://alchitry.com/tutorials/background/digital-logic/","title":"Digital Logic"},"https://alchitry.com/tutorials/background/encodings/":{"body":"Up until now we have only talked about discreet 0s and 1s. For many cases a single bit is all you need, however, many times you need to be able to encode numbers. The far most common way to do this is to use binary encoding. This encoding is the most obvious way to do things, and it is the closest to what you are already familiar with.\nBinary\nBinary numbers are not very different from the decimal numbers you know. The right most digit, or the LSB (Least Significant Bit), is the bit of lowest value, while the left most digit, or the MSB (Most Significant Bit), is the bit of highest value.\nFor decimal systems the value of each digit is d * 10n where d is the number and n is it's position from the right starting with 0. For example, the number 15 has the value of 1 * 101 + 5 * 100 = 15. It is useful to look at numbers this way when we talk about binary and other number systems. Since we use powers of 10 for our normal decimal system, it is known as base-10.\nBinary is a base-2 system, since each digit only has 2 possible values. That means to compute the value of a binary number you use d * 2n where d and n are the same as before. This means that the first digit has the value of 1, the next 2, then 4, 8, 16, 32, 64, and so on. Let's look at the binary number 1010. There is a 1 in the 2's and in the 8's place. That means it has a value of 2 + 8, or 10.\nHexadecimal\nHexadecimal, or commonly called hex, is a compact way to represent binary number and it not really another encoding type. Hexadecimal is a base-16 system. Since we don't have a digit to represent values higher than 9, hex uses the letters A-F to represent 10-15 respectively. Hex is commonly written with 0x preceding the number to show it is a hex number and not a decimal number. For example, 0xA1 has the value of  10 * 16 + 1, or 161. \nThe reason hex is so common is that most systems are based on an 8-bit byte. Since the value of one hex digit can range from 0-15 it effectively represents 4 bits. That means that you only need two digits to represent a byte. So a number like 0x45 is a single byte. This also makes it easy to convert back to binary because you can convert each digit separately. For example, with 0x45 first you know that 4 is 0100 and 5 is 0101, so 0x45 is 01000101.\nGray\nGray encoding, also known as Gray code, is an alternative to binary encoding. It's main benefit is that when you change between any consecutive numbers (in other words add or subtract 1 from any number) only one bit will change. This is normally not much of a benefit and the simpler binary encoding is used instead. The place this shows up the most is the format of the K-maps where each cell can only change by one bit. \nDecimalHexBinaryGray\n0000000000\n1100010001\n2200100011\n3300110010\n4401000110\n5501010111\n6601100101\n7701110100\n8810001100\n9910011101\n10A10101111\n11B10111110\n12C11001010\n13D11011011\n14E11101001\n15F11111000\n\nOne-Hot\nThis is an encoding that is pretty common but usually does not represent numbers. It is instead used for things like state machines, which we will cover later. A one-hot encoding is generally used instead of binary because it usually makes for a simpler circuit. In many designs binary is first converted into one-hot when it is used to index something.\nOne-hot encodings are those where there is always a single one is a number. For example, the first state could be 0001, while the next is 0010, then 0100, and 1000. The down side to one-hot is you need as many bits as you want states, however, in the next section we will show how this encoding is commonly useful.\n2's Complement\nSo you may have noticed with all of these encodings there is no way to represent a negative number. Since binary is only 0's and 1's you can't simply put a minus sign in front! Although some encodings of negative numbers do basically just that with what is called a sign bit. The naive way is to just add a 0 to the beginning of positive numbers and a 1 to the beginning of negative numbers. While that would work if you designed your circuit correctly, it is not ideal. \nThere are many other ways to encode negative and positive numbers but the most common, and generally most useful, is 2's complement. With 2's complement the MSB is also a sign bit where 1 means the number is negative. However, when a number is negative it's value is not simply the value of the rest of the bits in binary.\nA negative 2's complement number can be turned into it's positive representation by inverting all the bit's then adding 1. For example, take 1111, which is -1. When you invert all the bits you get 0000. Then add 1 and you get 0001, or positive 1. You should note that the same exact thing works for making a positive number negative. \nWhy would anyone ever go though all this when just using a single bit to show if a number is negative seems so much easier? This is because when numbers are represented as 2's complement doing math with them is much similar. When you add two numbers, you don't have to have special cases for when the numbers are negative or not. You can just add any two numbers and get the correct result.\nAnother very nice property of 2's complement is that there is only one zero. If you just use a sign bit, you end up with a positive and a negative zero, which can cause complications.\nThe most useful property, and one that allows negative and positive values to be treated equally, is that the number system warps around at 0. For example, if you have a 4 bit value for 1, 0001, and you subtract 2 from it. You end up with 1111, which we have already shown is -1. If you then take -1 and add 1 to it you get 0000, or 0, because of the way the binary numbers overflow.\n","id":"https://alchitry.com/tutorials/background/encodings/","title":"Encodings"},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"body":"This tutorial will cover how an FPGA can implement so many different logic circuits simply by being reprogrammed.\nWhen explaining what an FPGA is to someone, I commonly tell them that there are basically a bunch of logic gates in the FPGA that can be connected however you want to create your circuit. While this is a good way to explain it to someone with little prior knowledge on digital design, it's not actually how it works. An FPGA has three main elements, Look-Up Tables (LUT), flip-flops, and the routing matrix, that all work together to create a very flexible device.\nLook-Up Tables\nLook-up tables are how your logic actually gets implemented. A LUT consists of some number of inputs and one output. What makes a LUT powerful is that you can program what the output should be for every single possible input.\nA LUT consists of a block of RAM that is indexed by the LUT's inputs. The output of the LUT is whatever value is in the indexed location in it's RAM. \nAs an example let's look at a 2-input LUT.\n\nSince the RAM in the LUT can be set to anything, a 2 input LUT can become any logic gate!\nFor example, if we want to implement an AND gate the contents of the RAM would look like this.\nAddress (In[1:0])Value (Out)\n000\n010\n100\n111\n\nIt's important to understand that the column Value (Out) could be set to anything! It doesn't have to model a single logic gate. If the value for address 01 was a 1, then the LUT would still perform as expected but the equivalent logic circuit would require more than one gate to implement. This is why the metric of equivalent gate count for an FPGA is a confusing and poor metric! It is tricky to specify how complicated of a circuit you can implement in a given FPGA because of all the variables. \nLUTs in the Mojo\nIn the Spartan 6 used by the Mojo, each LUT is a 6-input LUT. However, it isn't a true 6-input LUT but rather two 5-input LUTs connected together by a multiplexer (MUX).\n\nThe reason the LUT is designed this way is because it can either be used as a single 6-input LUT, or two 5-input LUTs. The only restriction is that both 5-input LUTs must share the same inputs. When it is configured as two 5-input LUTs, In[5] is set to 0.\nFlip-flops and Slices\nEach LUT's output can be optionally connected to a flip-flop. Groups of LUTs and flip-flops are called slices. In the Spartan 6 used by the Mojo, a slice has 4 LUT6 and 8 flip-flops. These flip-flops are typically configurable allowing the type of reset (asynchronous vs synchronous) and the reset level (high vs low) to be specified. Some of the flip-flops can actually be configured as latches instead of flip-flops, although latches typically aren't good practice to use as they can lead to timing problems.\nThe FPGA used by the Mojo has 1,430 slices in it for a total of 5,720 LUTs!\nAll slices are not created equal, however. In the Mojo's FPGA there are three types of slices, SLICEX, SLICEL, and SLICEM. The SLICEX is the most basic type of slice and just consists of the four LUT6's and the eight flip-flops. A SLICEL is the same as a SLICEX except it contains extra hardware for a ripple-carry chain used in arithmetic circuits. These help speed up circuits like addition and multiplication. A SLICEM is the same as a SLICEL except the LUTs can be used as 64bits of RAM or a shift register up to 32bits long. The break down of the slices is roughly SLICEX 50%, SLICEL 25% and SLICEM 25%.\nThe Routing Matrix\nThe next size block in the FPGA is the Complex Logic Block (CLB) and each CLB consists of two slices. Each CLB connects to a switch matrix that is responsible for connecting the CLB to the rest of the FPGA. The switch matrix can connect the inputs and outputs of the CLB to the general routing matrix or to each other. That way the output from one LUT can feed into the input of another LUT without having to travel far.\nThe routing resources in an FPGA are pretty complicated, but they are essentially a bunch of multiplexers and wires that are used to define what CLBs and other FPGA resources are connected to each other. These connections are again defined in RAM which is why the FPGA must be reconfigured every time the power is cycled (in the Mojo this is taken care of by the AVR).\nThere are also special routing resources available on the FPGA. The most notable are the clock routing resources. When you have a clock being used in your design, it is very important that the clock signal be distributed as evenly as possible throughout the FPGA so all the flip-flops will flip at roughly the same time. If you were to try and use the general routing resources for this, the clock signal would have large propagation delays from traveling through all the multiplexers. To solve this problem there are global and local routing resources dedicated to clocks. These are basically wires that connect through the entire chip (for global) or sections of the chip (for local) with very little propagation delay. Only inputs from certain pins on the FPGA are allowed to drive a signal on the global clock routing resources. These inputs are labeled GCLK in the Mojo schematic.\nAll of these resources are used in an FPGA to make them very flexible slow things down. This is why you will never be able to clock an FPGA at speeds comparable to a dedicated chip. An ASIC design can reach speeds faster than 4GHz, while an FPGA is very fast if it's running at 450MHz. This is also why FPGAs consume considerably more power than their ASIC counterparts. An FPGA will require an order of magnitude more power to run than an 8bit microcontroller, like an AVR. However, they still have the huge advantage of being low-cost for small runs (or hobbyists) and re-configurable virtually unlimited times.\nMore Info\nIf you want to know more details about the FPGA used in the Mojo, this document has everything.\n","id":"https://alchitry.com/tutorials/background/how-does-an-fpga-work/","title":"How does an FPGA work?"},"https://alchitry.com/tutorials/background/multiplexers/":{"body":"A multiplexer is a circuit that allows you to select one of many inputs to be it's output. The output mirrors the selected input, so when that input is 0 the output is 0, when it is 1 the output is 1.\nMultiplexers are often shown like this\n\nOne of the inputs a through f is selected to be passed on through the output g by the sel input. In this case, the sel input is six bits wide and is one-hot encoded. That means when sel is 000001 input a is selected, while 000100 selects input c.\nWhen you draw out circuits you should always use the block shown above as it is very clear what the circuit is doing and it is compact. However, it is important to understand how a multiplexer works. There are actually many ways to implement a multiplexer, each with their own trade offs. The circuit below is one of the more basic implementations. \n\nThe input sel is split into it's six bits, each being fed into a different and gate. If an input's corresponding sel bit is 0 than the input is blocked from the output, however, when the sel bit is 1 then the output of the and gate mirrors the input. Since only the selected and gate can be 1 at any time the output g is the same as the selected and gate.\nThis circuit is very useful when you want to implement some conditional logic, like if X do this, else if Y do this, else do this. You just have to design a circuit that outputs the correct one-hot code for each condition to select the output you want.\n","id":"https://alchitry.com/tutorials/background/multiplexers/","title":"Multiplexers"},"https://alchitry.com/tutorials/background/subtraction/":{"body":"Subtraction almost doesn't need its own page. That is because if you remember your basic math you never actually need to subtract anything! Subtraction is really just an easy way to write add the opposite. When we subtract we are really not performing a special operation, but really we are just adding the opposite of the second operand.\nFor example, if you want to do 5 - 3, you could equivalently do 5 + -3. That means to subtract we can use the same circuit that we used for addition! We first just have to negate the second operand.\nSubtraction by Addition\nIf you can remember back a few tutorials ago we covered how to represent negative numbers in 2's complement form. If you don't remember then you can go back to the encodings tutorial.\nJust as a refresher,  2's complement representation allows you to easily negate a number by simply inverting all the bits then adding 1.\nThat leads to this basic circuit that uses only adders and not gates.\n\nInput b is fed into an inverter (shown as the circle) which flips all the bits. Then 1 is added to it making the output of the first adder -b. Finally, we just add a and -b together to get a - b.\nWhile this circuit will work perfectly fine, it is very wasteful. Do we really need an entire adder just to add 1 to b? To answer this question, we need to revisit how the adder works.\n\nThis is a basic 4 bit adder. All it does is add a and b. The thing to notice is that the first bit uses a half-adder to add the two bits together. That was because there was no carry in signal from a previous addition. What exactly does the carry in signal of a full adder do though? \nThe carry in of a full adder tells that adder if it should add an extra 1 to the sum of the bits or not. Now, what if instead of a half adder for the first two bits we used a full adder and fed a 1 into the carry in signal? Instead of outputting a + b it would output a + b + 1! That's almost what we need except, but we still have to invert b. \n\nThis circuit will now perform the operation a - b.\nIf for some reason you need to sometimes add a number and other times subtract it, you can make some modifications to this circuit to allow you to select if you want to add or subtract! All you have to do is use a multiplexer to select to feed in either b for addition or inverted b  for subtraction and feed a 0 into the carry in for addition and a 1 for subtraction.\n","id":"https://alchitry.com/tutorials/background/subtraction/","title":"Subtraction"},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"body":"\n    \n\nSo what exactly is an FPGA? You may have heard the term thrown around, or maybe you have no idea what I'm talking about. Either way, FPGAs (Field Programmable Gate Arrays) are amazing devices that now allow the average person to create their very own digital circuits. The cost has come down enough that you don't have to be a huge company to get your hands dirty.\nYou can think of an FPGA as a blank slate. By itself an FPGA does nothing. It is up to you (the designer) to create a configuration file, often called a bit file, for the FPGA. Once loaded the FPGA will behave like the digital circuit you designed!\nOne of the reasons FPGAs are so awesome is that unlike an ASIC (Application Specific Integrated Circuit) the circuit design is not set and you can configure an FPGA as many times as you like! Creating an ASIC also costs potentially millions of dollars and takes weeks or months to create. That's not exactly hobbyist friendly.\nFPGA vs Microcontroller\nWhen I first learned about FPGAs, all I really knew about before was microcontrollers. So first it is important to understand that they are very different devices. With a microcontroller, like an Arduino, the chip is already designed for you. You simply write some software, usually in C or C++, and compile it to a hex file that you load onto the microcontroller. The microcontroller stores the program in flash memory and will store it until it is erased or replaced. With microcontrollers you have control over the software.\nFPGAs are different. You are the one designing the circuit. There is no processor to run software on, at least until you design one! You can configure an FPGA to be something as simple as an and gate, or something as complex as a multi-core processor. To create your design, you write some HDL (Hardware Description Language). The two most popular HDLs are Verilog and VHDL. You then synthesize your HDL into a bit file which you can use to configure the FPGA. A slight downside to FPGAs is that they store their configuration in RAM, not flash, meaning that once they lose power they lose their configuration. They must be configured every time power is applied.\nThat is not as bad as it seems as there are flash chips you can use that will automatically configure the stored bit file on power up. There are also some development boards which don't require a programmer at all and will configure the FPGA at startup.\nWith FPGAs you have control over the hardware.\nThe Possibilities\nWith a typical microprocessor, you have dedicated pins for specific features. For example there will be only two pins on some microprocessors that are used as a serial port. If you want more than one serial port, or you want to use some other pins, your only solution besides getting a different chip is to use software to emulate a serial port. That works fine except you are wasting valuable processor time with the very basic task of sending out bits. If you want to emulate more than one port then you end up using all your processor time.\nWith an FPGA you are able to create the actual circuit, so it is up to you to decide what pins the serial port connects to. That also means you can create as many serial ports as you want. The only limitations you really have are the number of physical I/O pins and the size of the FPGA.\nJust like microcontrollers that have a set amount of memory for your program, FPGAs can only emulate a circuit so large.\nOne of the very interesting things about FPGAs is that while you are designing the hardware, you can design the hardware to be a processor that you then can write software for! In fact, companies that design digital circuits, like Intel or nVidia, often use FPGAs to prototype their chips before creating them.\n","id":"https://alchitry.com/tutorials/background/what-is-an-fpga/","title":"What is an FPGA?"},"https://alchitry.com/tutorials/ddr3-memory/":{"body":"In this tutorial we are going to set up an interface to the DDR3 memory with the FPGA on the Alchitry Au/Au+.\nSetup\nThe first step is to create a project.\nOpen Alchitry Labs, and create a new project based on the DDR3 Base Project. \nI called mine DDR Demo, but feel free to name yours whatever you want.\n\n    \n    \n        This project temple is a bit special in that it includes some Vivado IP Cores.\nThe cores themselves aren't included in the temple but scripts for their creation are.\nThese are fired off when the project is created.\nMake sure to have Vivado setup correctly before creating the project or the IP cores will fail to generate, and you'll have to delete your project and start fresh.\n\n    \n\nWhen the project first opens, there will be some errors reported in alchitry_top and the mig_wrapper.\nThese will clear up once the IP cores have finished generating.\nThis can take a few minutes.\n\nOnce it finishes, you should see the clk_wiz_0 and mig_7series_0 cores added to the project.\nThe Memory Controller\nThere is special hardware on the Artix 7 FPGA that is used for interfacing with the DDR chip. \nTo efficiently use this, Xilinx provides customizable IP via their IP catalog in Vivado.\nCustomizing this IP requires full knowledge of the DDR3 chip being used and the board pinout. \nWhile you can find all the information you need to set this up for the Alchitry Au, we have drastically simplified it for you in Alchitry Labs.\nThe controller was added automatically as part of this project template, but you can add it manually to another project by clicking the three block icon and selecting Generate MIG Core (DDR) from the dropdown.\nNote that this option is missing for our project since the core has already been added.\nIf you look at the IP Cores section of the project tree, you should see the mig_7series_0 core. \nYou can double-click on it to open its stub file.\nThis is an empty Verilog file that defines all the connections to the core.\nAdapting to Lucid\nYou can use this core directly in your design if you want, but it is generally more convenient to wrap it.\nThe mig_wrapper component does just that.\n\nThis component wraps the mig_7series_0 core and defines two global structures to make hooking up other modules to it easier.\nIf you look at the module declaration of the wrapper, you will see a bunch of inout and output ports that start with ddr3_. \nThese are all top level signals that need to connect to the DDR3 chip.\nThese names are actually important since the pins they connect to are defined in the mig_7series_0 core. \nYou don't need to specify their pinouts in your constraints file.\nHooking up the wrapper\nThe basic connections for the wrapper are already handled for you in alchitry_top.\n\nAgain, it is important you don't change the names of these signals since they are used in the constraint file included with the mig_7series_0 core. \nIf you change the names, the tools won't know what pins they need to connect to on the FPGA.\nSetting up the clock\nThe memory interface requires both a 100MHz and a 200MHz clock. \nSince the Alchitry Au only has a 100MHz clock, we need to synthesize the 200MHz one.\nThis is the purpose of the clk_wiz_0 core.\nThis core takes in a 100MHz clock and outputs 100MHz and 200MHz clocks.\nYou may be thinking that outputting the same frequency is pointless, but the way the clock is routed in the FPGA means that the input clock can't be used anywhere else.\nIf you need 100MHz somewhere else, you need to get it from the clk_wiz_0.\nThe FPGA can actually synthesize a lot of different frequencies.\nYou can check out the wizard by opening the Vivado IP Catalog.\nClick the three block icon in the toolbar and select Vivado IP Catalog from the dropdown.\nAfter a few seconds, a window should open that looks like this.\n\nNote that you can see the two cores already in our project on the left.\nYou can right-click on the clk_wiz_0 core and select Re-customize IP... to open up the wizard.\nFeel free to poke around the tabs to get an idea of the options available for future use.\n\nSince this was already setup how we need, click Cancel for now and close the IP catalog.\nBack in Alchitry Labs, you should see some text in the console about looking for cores. \nEverytime the Vivado IP Catalog is closed, Alchitry Labs does a sweep of the cores folder to see what changed.\nHooking up the clk_wiz_0 core is simple.\n\nThe clk_wiz instance has two outputs, clk_wiz.clk_100 and clk_wiz.clk_200 which are 100MHz and 200MHz clocks respectively.\nThese clocks are fed directly into the mig controller.\nThe mig controller then outputs a ui_clk which is intended to be used with its interface.\nThis clock is 81.25MHz and is what will drive the rest of our design.\nIt is 81.25MHz because the DDR3 interface is set up to run at 325MHz with a 4:1 ratio.\nAlso notice that we are using the mig.sync_rst signal as our reset. \nBecause of this, we don't need the reset_conditioner used in previous tutorials.\nThe reset button on the board will still work as the reset since it is used to reset clk_wiz_0 which then resets the memory controller. \nThis works since the locked output of the clock wizard goes low when it is reset. \nThe locked output goes high when it isn't being reset and the clocks are stable. \nIf you don't hold your circuit in reset when this input isn't high, you risk running into glitches as the clocks may be doing weird things.\nWith all of that we are now fully setup to use the core!\nThe User Interface\nThe memory interface abstracts away a ton of the complexities of dealing with DDR3 memory, but the interface we get to it is still reasonably complex.\nCheck out this document from Xilinx that details all the information on the core. \nSkip to page 57 and look at the section labeled User Interface.\nThis section details what each of the signals we will be interacting with do.\nThe actual signals we need to deal with are a subset of the ones listed. \nSee the two structs declared in the mig_wrapper component for the ones we need.\n\nOne thing to note is that while the cmd signal (app_cmd in the Xilinx doc) is three bits wide, it only ever has a value of 0 (for write) and 1 (for read). \nOther values are used in different configurations of the core (for example, with ECC memory).\nThere are really three independent interfaces bundled together used to deal with the controller.\nThe first is the write FIFO. \nThe controller will store data in a FIFO to be used in subsequent write commands. \nThe signal wr_rdy is 1 when there is space in the buffer. \nYou can write to the buffer by supplying data on wr_data and setting we_enable to 1.\nThe signal wr_mask can be used to ignore bytes in wr_data. \nA 1 means to ignore the corresponding byte. \nTo write the full 16 bytes (128 bits) set wr_mask to 0.\nNote that this mask doesn't change which bytes are sent to the DDR3 chip. \nIt is used to control the DM lines which tell the DDR3 chip to ignore certain bytes. \nIf you set wr_mask to 16hFFFF and perform a write command, the full 128 bits will still be sent to the DDR3 but nothing will happen.\nWith data in the FIFO, you can issue a write command.\nThe command interface can be used when the signal rdy is 1.\nTo issue a command, set cmd to 0 for a write command or 1 for a read command, supply the related address on addr and set enable to 1.\nIf you issue a write command, the first value written to the write FIFO will be used as data.\nIf you issue a read command, once it has been performed, the value will be returned on the read interface.\nThe read interface consists of rd_valid, which is 1 when there is new data, and rd_data, which is the data. \nAfter sending a read command, you wait for rd_valid to be 1 which means the data you requested is on rd_data.\nThe reason for the three independent interfaces it efficiency. \nThe command interface may be ready to accept more commands before the read data is fully ready. \nThe write FIFO may also be willing to accept data while a read is being performed.\nIt is also possible to set up the core to allow it to reorder the execution of commands to improve efficiency. \nIn this case you may be issuing many commands while waiting for the first read command to finish. \nHowever, to keep things simple, our interface configuration uses strict ordering (commands executed in the order given).\nWrite and Read Example\nIn this next section, we will create a small state machine that first initializes the DDR3 to have sequential values stored and then reads them back displaying them on the LEDs.\nHere's the full top level module.\n\nFirst notice that we used the signal mig.ui_clk in the .clk block for the dff instances. \nThis is the clock that the user interface of the memory interface is synchronized to. \nIf you need to use a different clock for the rest of your design, you'll have to implement some clock domain crossing scheme. \nIt is easiest if you can make your design work at the 81.25MHz of this clock.\nIf you look a little lower in the always block, you'll see the default values we assign to the mem_in struct on the mig module. \nThe wr_mask signal is active low, meaning a 0 enables the byte. \nSince we will be writing all the bytes we can fix it to 0.\nThe other values we don't care about when the enable signals are 0 so they are set to bx.\nThe state machine is simple, it starts in WRITE_DATA where it writes a value to the write FIFO. \nOnce the value is written, which is noted by wr_enable and wr_rdy both being 1, it switches to the WRITE_CMD state.\nIn this state, it sends the write command. \nOne thing to note is that the address associated with the write command is the DDR native address. \nThis means that the first three bits should always be 0 since each DDR entry is 16 bits (the DDR3 on the Au has a 16 bit bus) and each read/write we preform is on 128 bit blocks.\nThis is easy to do by concatenating three 0's onto the end of our address.\n\nThe 128 bit operation size isn't configurable. \nXillinx's memory interface uses bursts of 8 to increase efficiency. \nThis is common practice when working with DDR memory. \nAlso note that the DDR interface is clocked at 4x the system clock which means that you complete an entire burst in the span of a single system clock cycle (4x freq * 2 for double data rate = 8 values per system cycle).\nThe burst operation is actually supported by the DDR3 chip itself. \nThe address you give the memory interface is sent directly to the DDR3 chip. \nIf you don't set the last three bits to 0 weird things happen. \nFor writes, these bits are ignored and everything works as if they were 0.\nFor reads, the same 16 bit words in the burst will be read from same 128 bit block but in a different order. \nFor example, if the last three bits are 0, then they are read in the expected order, 0, 1, 2, 3, 4, 5, 6, and 7. \nHowever, if you set the last three bits to 2 then it will read them in the order 2, 3, 0, 1, 6, 7, 4, and 5. \nSee page 145 of this document for the full behavior. \nThe memory controller is set up to use the sequential burst type.\nIt is generally best to just ensure these bits are always 0. \nThe reason this feature exists is so that you can get a specific 16 bit value as soon as possible while still reading in a burst of 8.\nNote that we are writing the address' value to each address. \nIn other words, address 0 gets value 0, address 1 gets value 1, and so on. \nThis means when we read these back in order, it'll look like a counter.\nOnce 256 addresses have been written, it switches to reading. \nThe READ_CMD state issues the read command and then transitions to the WAIT_READ state.\nIn the WAIT_READ state, it waits for rd_valid to be 1. \nIt then uses the read value to set the LED's state.\nFinally, it goes into the DELAY state to waste some time so we can see the LED value before it loops to READ_CMD again.\nIt will continue reading the first 256 addresses of the DDR3 over and over.\nIf you change what value is written in the WRITE_DATA state, it'll change what the LEDs show.\nWith this you should be able to build the project and load it onto your board to see the LEDs counting.\nCaching\nYou may have noticed that this example is incredibly wasteful. \nWe are reading and writing full 128 bit blocks of data when we are only using the first 8 bits.\nThis could be fixed if we just combined 16 values into 128 bit blocks and wrote those to a single address. \nWhen we read them we could then store a whole line and iterate over each byte before reading in another line.\nFor our trivial example, it wouldn't be too hard to implement this directly. \nHowever, for more complex read/write patterns, this could be very difficult to do efficiently.\nLuckily, there is a component in the Component Library that can help us with this.\nOpen the Component Library and under Memory select LRU Cache.\n\nThis component is pretty complicated, but it can take the memory interface from the MIG Wrapper component and give you efficient read and write interfaces of selectable word sizes.\nThis cache is lazy and will only access the RAM when it needs to. \nThat means you can read and write to entries in the cache as much as you want without hitting the memory. \nIt will only access values in the external memory when it needs to free up a cache line or if you try to read values that aren't in the cache.\nThe cache presents independent read and write interfaces. \nThis comes in handy when you have one section of your design doing only reads and another doing only writes. \nIf you read and write the same address in the same cycle, you will read the old value.\nYou can configure the cache to have multiple entries (AKA cache lines). \nThis can save a ton of IO for certain memory access patterns. \nFor example, in our GPU demo project the rasterizer reads values from the Z buffer sequentially and writes values back sequentially at a slightly delayed time down the pipeline. \nThis cache was used with two entries so that the reads and writes would each have their own cache lines to minimize fighting.\nThis cache attempts to approximate an LRU (Least Recently Used) cache policy. \nThis means that when a new cache line is needed, the least recently used (AKA oldest) entry will be evicted.\nThe age of each entry is kept track of by adding 1 to its age counter every time a read/write is performed to any entry. \nThe age counter can saturate if it isn't accessed in a long time.\nEach time an entry is accessed, its age counter is reset.\nThe maximum age can be set with the AGE_BITS parameter. \nThe default value is 3, which gives a maximum age of 7. \nThis way of keeping track of age isn't perfect and if AGE_BITS is too small, in some cases the cache may not act as a perfect LRU. \nHowever, this typically isn't an issue as it will always evict the oldest or a max age cache line.\nSetting AGE_BITS to a large value will ensure that the oldest cache line is more likely to be removed but will incur a performance penalty.\nCache Interface\nThe interface to the cache is pretty simple.\nThe addresses used are word address. \nThis means you don't need to worry about zero padding anything.\nYou can set the size of the data word with the WORD_SIZE parameter. \nThis can be set to 8, 16, 32, 64, or 128. \nTo write, you simply check wr_ready. \nIf this signal is 1, you can specify a value on wr_data, an address on wr_addr, and set wr_valid to 1. \nTo read, you check if rd_ready is 1. \nIf it is, you set rd_addr to the address to read and rd_cmd_valid to 1.\nYou then wait for rd_data_valid to be 1. \nWhen it is, rd_data has your data.\nWhen you perform reads, rd_data_valid is guaranteed to take at least one cycle from the request to go high. \nHowever, rd_ready may stay high if it is a cache hit. \nThat means you can stream multiple reads back to back with each result delayed a single cycle if they are all hits.\nCache misses will take longer for rd_data_valid to go high since it will need to actually fetch the value from the RAM.\nIf you have a cache in your design and are also reading values from another piece of your design, you may need to occasionally flush the cache to ensure that the values are actually written to the DDR3. \nFor this, you can use the flush signal. \nWhen flush and flush_ready are high, the cache will write all dirty entries to the DDR3 memory.\nCache Example\nWith the cache component in our design, we can use it to more efficiently use the DDR3.\n\nThis new design performs exactly the same as before, but now we are using the DDR3 more efficiently. \nWe are using 1/16th the memory as we were before without having to complicate our design. \nIt actually simplifies the design since the writes don't require separate operations to write the data and command.\nNote that ENTRIES is set to 1 since our access pattern is super simple and having more entries won't increase the number of cache hits we have (unless ENTRIES was set to 16 which would mean everything would fit in the cache).\nWe also set AGE_BITS to 1 since there isn't much of a choice which entry to evict when there is only one.\nIn this super basic use case, the cache component is overkill. \nHowever, the tools will optimize a lot of the logic out keeping it fairly efficient.\nMultiple devices\nIt is common to want to interface multiple parts of your design with the one memory interface. \nTo make this easy there is a component in the Components Library called DDR Arbiter under the Memory section.\n\nThis module can be hooked up to the memory interface via the master_in and master_out signals. \nYou then get DEVICES number of similar interfaces on the device_in and device_out arrays that can be hooked up to different parts of your design.\nFor example, in our GPU project, we have a section that writes frames and another that reads the buffer to display the frames on the LCD.\nIt is important to order your devices carefully since the device attached to index 0 get full priority. \nIf it never has idle bus time, it'll starve out all the other devices.\n","id":"https://alchitry.com/tutorials/ddr3-memory/","title":"DDR3 Memory"},"https://alchitry.com/tutorials/hello-your-name-here/":{"body":"In this tutorial we will be personalizing the greeter so that it first asks for your name and then prints \"Hello NAME\" where NAME is the name you entered.\nTo do this we will need some form of memory and in this case we will use a single port RAM.\n\nWe will be continuing the project from the last tutorial so make sure you have read the ROMs and FSMs tutorial first.\nWith the project open from the last tutorial, you can make a copy to edit for this tutorial by going to Alchitry Icon-&gt;Save Project As.... \nEnter a new name in the dialog that pops up and click Create Project.\nThe RAM\nWe need to add the RAM component to our project. \nOpen the Component Library and under Memory check off Simple RAM.\nGo ahead and open up the simple_ram file.\n\nNote that this component is written in Verilog instead of Lucid. \nThis is because the tools that actually build your project can be very picky when it comes to deciding if something is a block of RAM or not. \nBy using this module we can ensure that our RAM is properly recognized as RAM. \nThis is important because FPGAs actually have dedicated block RAM (also known as BRAM). \nIf your RAM is big enough, the tools will use BRAM to implement it instead of the FPGA fabric. \nUsing BRAM is both substantially faster and smaller than the FPGA fabric.\nA single port RAM like this works much the same as the ROM from the last tutorial. \nHowever, we now have the option to write to an address instead of only reading. \nTo write to an address, we simply supply the address and data to write then set write_enable to 1. \nThe data at that address will then be updated to whatever write_data is.\nThe parameters WIDTH and ENTRIES are used to specify how big we want the RAM to be. \nWIDTH specifies how big each entry is. \nIn our case we will be storing letters and a letter is 8 bits wide so WIDTH will be set to 8. \nENTRIES is used to specify how many entries we want. \nThis will be the maximum name length we can accept.\nThe Greeter (revisited)\nJust like the last tutorial we will have a greeter module. \nThe interface to this module is exactly the same as before but it is now a bit more mannered and will greet you personally.\nLike most tutorials, I'll post the entire module here and then break it down.\n\nNo More ROM\nSo unlike last tutorial, we aren't going to use an explicit ROM module. \nThis is because some convenient features of Lucid allow us to easily use constants with strings as ROMs. \nLet us take a look at the constant declaration.\n\nHere we are using a function called $reverse(). \nThis function takes a constant expression and reverses the order of the top most dimension of the array. \nSince strings are 2D arrays with the top most dimension being the letter order, this is exactly the same as typing the string backwards like we did in the last tutorial. \nThis is just a little bit cleaner and easier to deal with.\nBecause strings are 2D arrays, we can simply use HELLO_TEXT[i] to access the ith letter of it.\nNote that we are using the @ symbol in place of a name. \nThis will signal to our design where to insert the name that was recorded.\nModules and DFFs\nJust like before we have an FSM state. \nThis will store the current state of our module. \nStates.IDLE is where we will start, and it will initialize everything. \nStates.PROMPT will print the prompt asking for your name. \nStates.LISTEN will listen to you type your name and echo it back. \nFinally, States.HELLO will greet you personally.\nWe need counters to keep track of what letter in each ROM we are currently positioned.\n\nLet us take a look at hello_count. \nWe need it to be wide enough so that we can index all the letters in HELLO_TEXT. \nWe can get how many letters there are in the string by using the $width() function.\nThe $width(expr, dim) function takes two arguments. \nexpr is the value to get width of and dim is the dimension along we're measuring.\nIf expr is a 1D array or bit, then dim is optional and assumed to be 0.\nBecause HELLO_TEXT is a multidimensional array, we need to specify dim explicitly as 0 to get the outermost dimension.\nWith dim as 0, $width() will return the number of letters.\nIf it was 1 instead, $width() would return 8 since each letter is 8 bits wide.\nWe can then use the $clog2() function as before to make sure it is large enough to store values from 0 to $width(HELLO_TEXT, 0)-1.\nNext take a look at name_count. This will be used to index into the RAM. \nWe can set this width to be whatever we want, but the size of the RAM will grow exponentially with it. \nI set it to 5 which will allow for a name of 25, or 32 letters long. \nWe will play with this towards the end of the tutorial.\nWe need the size of the RAM to match the size of name_count.\n\nHere we are using the function $pow() which takes two constants and returns the first to the power of the second. \nIn this case, $width(name_count.q) is 5, so 25 is 32. \nBy using $width(name_count.q) instead of typing in 5 or 32 directly, we ensure that if we change the width of name_count then everything will still work.\nThe FSM\nThe IDLE and PROMPT states should look very familiar to the last tutorial so we will jump to the LISTEN state.\n\nHere we wait until new_rx is 1.\nThis signals that we have a new byte to process and that the data on rx_data is valid. \nWe then write rx_data into our RAM. \nWe are writing to the address specified by name_count.q as ram.address is set to this in the beginning of the always block.\nWe also need to send the character we received back so that you can see your name as you type it. \nWe simply set new_tx to 1 and tx_data to rx_data. \nNote that we aren't checking tx_busy so it is possible this byte will be dropped. \nHowever, in practice you can't type fast enough for this to be an issue. \nIf you wanted to make this more robust you would need to buffer the received letters and send them out only when tx_busy was 0.\nThe if statement is used to know when to stop. \nWe have two conditions to stop on. \nThe first is if we simply run out of space. \nTo check of this we use &amp;name_count.q. \nThe &amp; operator here ands all the bits of name_count.q together into a single bit. \nThis tells us if all the bits of name_count.q are 1. \nThe second condition is that the user pressed the enter key. \nWe want to accept \"\\n\" or \"\\r\" as a stop character so we check for both.\nWhen we are moving onto the next state, notice that we reset name_count. \nThis is so that we can start printing the name from the beginning.\n\nIn this state, we are going to use two counters, hello_count and name_count. \nFirst we will start by sending each letter of HELLO_TEXT. \nHowever, once we hit the \"@\" letter we will send all the letters in our RAM. \nOnce that is done, we will finish sending the rest of HELLO_TEXT.\nOnce everything has been sent, we return to the IDLE state to await another key press to start it all over again.\nThe Top Level\nThe top level tile file is exactly the same as last time since the interface to our greeter module is the same.\n\nBuilding the Project\nYou should now be all set to build the project. \nOnce the project has built successfully, load it onto your board and open up the serial port monitor to test it out. \nNote that you have to send it a letter to get it to prompt you for your name.\nHere is some demo output.\n\nNotice that the moment you type 32 letters it cuts you off and says hello.\n","id":"https://alchitry.com/tutorials/hello-your-name-here/","title":"Hello YOUR_NAME_HERE"},"https://alchitry.com/tutorials/io-element/":{"body":"This tutorial will introduce the Io Element and walk through some basic examples to get your feet wet.\nIf you don't own an Io Element, you can still follow along using the simulator.\n\nIf you haven't already, I highly recommend reading through the Your First FPGA Project and synchronous logic tutorials before continuing.\nCreate the Project\nIn Alchitry Labs, open the new project dialog (Alchitry Logo-&gt;New Project...) and name it whatever you want. \nI named mine Io Element Demo. \nBefore you click Create, select Io Base from the Template drop-down menu. This will give you a bare-bones base to start working with the element.\nThe only difference between this project and the standard base project is that this has the connections to the Io Element already defined for you.\n\n    \n    \n        If you have a Cu with an older Io Element, you should use the Io Base Fake Pull-downs template instead.\nIf your Io Element says \"Built by: SparkFun\" on the back with a little \"V2\" towards the end, you can use the normal version.\nIf your board doesn't say \"Built by: SparkFun\", or is missing the \"V2\", you need to use the fake pull-downs version.\nThe Fake Pull-downs version connects the fake_pull_down and fake_pull_down_2d components to the buttons and dip switches.\nThe older Io Element didn't have pull down resistors and the FPGA on the Cu doesn't have internal ones so we instead fake them.\nThese module fakes pull-down resistors on the DIP switches and buttons by pulling the pin low for a very short amount of time, releasing it, waiting a short period, then sampling the input.\nThe buttons and DIP switches are connected to +3.3V via a 330 ohm resistor. \nThis resistor will prevent any damage to the FPGA if the button or DIP switch is active, and the FPGA tries to pull the pin to 0V.\nThis method of faking the pull-down resistor works because there is some amount of capacitance on each input pin. \nWhen the switch isn't active, the pin is normally floating (not being pulled to specific voltage). \nThe FPGA then forces it to 0V and releases it. \nSince its floating, the only sources to change the voltage are small amounts of leakage in the FPGA and noise. \nThese both take much longer than a couple clock cycles (30ns) to significantly affect it. \nTherefore, when we read the state of the pin right after pulling it down, it will still be 0 if nothing tried to change it.\nIf the button or switch is active, when the FPGA pulls the pin down, it will pull it down to 0 thanks to that resistor. \nHowever, once the FPGA lets go of the pin, the parasitic capacitance will start to charge. \nWe found it takes about 10ns-20ns for it to reach a '1' state (3.3V) after letting go. \nThis is why we wait for 30ns before sampling the pin.\nBy repeating this process over and over, we can simulate having a normal pull-down resistor.\nThanks to this module, you can ignore that any of this is even happening and simply use its output as you would the input with a pull-down.\nThe only difference is instead of using io_dip or io_button you use dip_pd.out and button_pd.out respectively.\n\n    \n\nLet's take a look at the top file.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nYou can see we have a handful of inputs and outputs named io*. \nThese are the Io Element specific signals.\nio_led connects to the 24 LEDs. \nThis signal is organized as a 2D array to make it easier to access the three groups of 8 LEDs. \nFor example, if you want to get the first group of LEDs you would use io_led[0] and if you wanted to get the third LED in the first group, you would use io_led[0][2].\nBecause io_led is a 2D array, when we set all the LEDs to 0, we have to use a little fancy syntax.\n\nWe need the dimensions of our constant to match io_led. \nIn this case, io_led is a 3 by 8 array. We use 8h00 as the base constant which is a single dimensional array of width 8. \nThe x{} syntax takes the outermost dimension and duplicates it. \nIf we wrote 3x{8h00}, we would end up with 24h000000 since the outermost dimension is 8. \nThis isn't what we want as it is still a 1D array. \nInstead, we need to first create a 1 by 8 array and duplicate it three times. \nTo do this we use the array building syntax, {}. \nThe value {8h00} is a 1 by 8 2D array.\nWe then use 3x{{8h00}} to get a 3 by 8 array of all zeros. \nNote that we could have also written {8h00, 8h00, 8h00}, but the duplication syntax is a bit cleaner.\nio_segment and io_select are used to control the 4 seven-segment LED displays. \nThey are active low (0 = on, 1 = off) and they will be covered in more detail later.\nio_button is simply the 5 push buttons. io_button[0] is up, io_button[1] is center, io_button[2] is down, io_button[3] is left, and io_button[4] is right.\nFinally, io_dip is the 24 DIP switches. This is arranged in a 2D array exactly the same way as io_led.\nLogic Gates\nThe first example we will work though is connecting a few DIP switches to the LEDs through logic gates. \nIf you aren't familiar with what logic gates (AND, OR, NOT, XOR) are, you should take a look at the digital logic tutorial.\nIn this example we are going to start by making the first LED light up when switch 0 and 1 are turned on.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nTake a look at the last line. \nFirst we need to index the first LED. \nThe first LED is in the first group (group 0) and is the first in its group, so we used the index [0][0].\nWe then index the first and second switches in the same manner. \nFinally, we use the &amp; operator to AND the bits together. &amp; is the bit-wise AND operator.\nNotice that I didn't change the line where we assigned all LEDs a value of 0. \nThis is because the assignment to the first LED will simply be overruled by our second assignment. \nIt's good to remember that while always blocks have a sequential order of precedence, they aren't actually sequential. \nThis means that io_led[0][0] will only have the value of the second assignment and it as if the first assignment never happened. \nThe tools will simply wire an AND gate to the two switch inputs and the LED output.\nGo ahead and build/load the project onto your board or click the bug to start the simulator. \nTry playing with the first two switches. \nIf either switch is off, the LED should be off. \nOnly when both switches are on should the LED turn on.\nYou can now go back and replace the &amp; operator with the operators for OR, |, and XOR, ^. \nPlay with the switches and make sure you understand the different operators.\n\nPractice\nAdd two more lines to the always block so that the first LED of the first group lights up as before, the first LED of the second group lights up when either (OR) of the first two switches in the second group are on, and the first LED of the last group lights up only when exactly one (XOR) switch of the first two switches in the last group are on.\n\nBit-wise\nThe operators we have talked about so far are all bit-wise operators. \nThat means that they operate on two equally sized arrays and will perform their operation on each pair of bits individually.\nFor example, if we want to light up the LED in the first group only when the corresponding switch in the first and second groups are both on we could do the following.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nNote that io_led[0] is an array of width 8. So is io_dip[0] and io_dip[1]. \nThis single statement will create 8 individual AND gates.\nYou can again use the OR and XOR operators in the same way.\nWe can also chain multiple gates together. \nFor example, what if we want the LED to light only when the corresponding switch in all three groups is on?\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nBit-wise operators are evaluated from left to right.\nIn this case, io_dip[0] will be ANDed with io_dip[1] and the result will then be ANDed with io_dip[2]. \nIn the case of AND gates, the order actually doesn't matter. \nHowever, if you start mixing and matching operators the order can matter. \nYou can also use parenthesis to make the order you want things evaluated explicit.\n\nPractice\nUse two bit-wise operators so that the LEDs in the first group light up when the corresponding switch in the third group is on or both switches in the first two groups are on.\n\nReduction Operators\nReduction operators are similar to the bit-wise operators, but they work on a single input array and always output one bit.\nou could say they reduce an array to a single bit. \nYou can think of these operators as one huge logic gate with many inputs. \nThe number of inputs is equal to the size of the array the operator is used on.\nIn this example, we want to turn the first LED on only if every switch in the first group is turned on. \nTo do this we can use the &amp; reduction operator.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nThis is equivalent to ANDing each bit individually as shown below.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nHowever, as you can tell, the reduction operator is much more compact.\nIt is even possible to use the reduction operators on multidimensional arrays. \nFor example, if we want the LED to turn on when any switch is on we could use the following.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nI tend to use the AND version to easily detect if a signal is at its maximum value (all 1's). \nThe OR version basically tells you if the value is not 0 and the XOR version will tell you if there is an odd number of 1's.\nEach of these operators can also be negated with the bit-wise negate operator, ~. You can simply place this in front of the expression to get the NAND, NOR, and XNOR equivalents.\n\nPractice\nUsing your newly acquired bit-wise and reduction operator skills, make the first LED light up when any switch in the third group is on, or all the switches in the second group are on and the first group has an odd number of switches on. \nThis is a fairly tricky challenge but everything you need has been mentioned in this tutorial. \nIf you get stuck feel free to head over to the forum for some help.\n\nMath\nThis part of the tutorial we will look at addition, subtraction, and multiplication. \nWe will be performing different operations using the DIP switches as our number inputs. \nThis means everything will be in binary, so if you aren't familiar with binary check out the encodings tutorial.\nLet's start with some addition. We will add the binary values from the first and second groups of DIP switches.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nBecause the result of many of our operations will be more than 8 bits, we can create a signal, result, to hold the value. \nYou can think of signals (sig) simply as wires. \nThey don't add any cost to your design as they simply define the connection from something to something else.\nWe set result to be the output of our addition. \nThe addition of two 8-bit numbers results in a 9-bit result. \nThis is because an 8-bit number has the range 0-255 so adding two of them together will have the range 0-510, which requires 9 bits to represent.\nWe then take result and connect it to the LEDs so that we can see all 24 bits. \nHowever, this requires the use of the function $build(). \nThis function takes a 1D array as the first argument and splits it into a multidimensional array. \nIn our case we pass 3 as the second parameter which causes it to split the 24 bits three ways into a 3x8 array.\nYou can pass $build() more than one dimension to split. \nFor example, $build(result, 3, 2) would create a 3x2x4 array.\nThe function $flatten() does the opposite. \nIt takes a multidimensional array and flattens it into a 1D array.\nBuild and load your project to your board or fire up the simulator. \nCongratulations! \nYou've just build a very basic calculator. \nTo make sure everything is working properly, let's calculate 2+2. \n2 has the binary representation of 0000 0010. \nSet both groups of switches to 2. \nThe result on the LEDs should be 4, or 0000 0100.\n\nNow change the + to a - to subtract the first switch value from the second.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nWhat happens when you set the second switch to 0 and the first to 1 so you're performing 0-1? \nAll 24 LEDs turn on! \nYou can interpret this answer in two different ways. \nThe first is that the result simply underflowed and restarted back at the maximum value. \nThe second way is to assume the number is a 2's complement representation of -1. \nBoth are valid interpretations and what you use will depend on the scenario.\nEven though when the number is negative all 24 LEDs light up, you only need 9 bits to represent any 8 bit by 8 bit addition or subtraction. \nThis is because when the value would be negative, dropping the leading 1's doesn't change its value.\nFinally, change the - to * to test out multiplication.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nYou should notice that multiplying two numbers can generate a much bigger result than the operands. \nThe result will generally be the size of the inputs combined. \nSo in our case, up to 16 bits wide.\nMultiplication is much more expensive to perform than a simple addition or subtraction. \nThis is because a multiplication is essentially many additions. \nMultiplying two 8-bit numbers will result in a series of eight additions.\nNow for division...\nDivision is much more complicated than even multiplication.\nYou typically don't want to just use the / operator to perform division with general numbers.\nThis is because this operation doesn't allow for any pipelining so the entire division must happen all at once and that can be slow.\nIf you don't need real division, you can approximate it by multiplying with fractions.\nTo approximate division, you can first multiply by any number and then shift the value to the right. \nShifting to the right effectively divides by a power of two (rounding down).\nFor example, if you want to divide a number by 3, you could multiply by 85 then shift right 8 bits. \nThis will effectively multiply your value by 85/256 = 0.33203 which is pretty close to 1/3. \nIf you need higher precision, you can use more bits. \nFor example, you could instead multiply by 21845 and shift 16 bits to the right. \nThis is effectively multiplying by 0.333328, but 16 bit multiplication is significantly more expensive than 8 bit.\nIf you need real division, you can try to use the / operator directly.\nIf you are using an Au, you can also use the Vivado IP Catalog to generate an optimized divider.\nGo ahead and try out division.\nNote that dividing by 0 technically produces the value bx which means the tools what do whatever they want.\nWith Vivado and Yosys, dividing by 0 produced 24hFFFFFF.\nWith i_cecube2, dividing by 0 produced 24h0000FF.\nIf you divide by 0 in the simulator, the LEDs will turn red indicating a bx value.\nSeven-Segment Displays\nThe Io Element has four seven-segment displays that are multiplexed. This means that we have two groups of signals, the first, io_segment, connects to the segments of each display.\n\nNote that even though we call these seven-segment displays there are actually 8 LEDs in each one because of the decimal point.\nAll four displays have all their segments connected together. \nThat means if you apply power to segment 0, all four displays segment 0 receive power! \nThis is done to save on the number of pins required to drive the displays. \nHowever, it means that we need a way to disable all but one display so that we can show a unique number on each one.\nThis is where the second group of signals, io_select, comes in handy. \nThese are used to select which digit is active. \nTypically, only one digit will be active at any time. \nIf you have more than one digit active, all active digits will show exactly the same thing since their segments are wired together.\nThe way we are going to display four unique numbers is by cycling which digit is active really fast. \nIf we can do this fast enough, our eyes can't tell, and it looks like all four digits are always on.\nHowever, before we do that, let's play around with the displays a bit to get familiar with how they work.\nIndexing Segments\nWe are going to set up some modules so that we light one segment at a time. \nTo do this we will be using some of the components built into Alchitry Labs.\nClick on the three block icon. \nIf you have a Cu, this will open the Component Library.\nIf you have an Au, you will need to click Component Library from the dropdown.\nUnder Miscellaneous check off Counter and Decoder. \n\nClick Add Components to add them to your project.\nYou can now find the source for these components under Source Files in the left project tree in Alchitry Labs.\nThese are marked with the component icon.\nNote that while you are free to look at the source, components are read-only (no editing!). \nIf you ever want to modify a component, simply copy and paste the code into a module of your own.\nIt's always a good idea to check out the source and read the description of the component. \nMany components have parameters that you can set to customize them for your use. \nWe'll be doing exactly that with these two.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nHere we add the counter and decoder modules to the top level module. \nThe counter component requires both a clock and reset signal so we have it in the nested in both the .clk and .rst connection blocks. \nOn the other hand, decoder doesn't require either, so it is outside both.\nThe counter is simply a counter. \nIt will output a value starting from zero and increment to whatever the maximum value you set is. \nAfter that it will reset back to zero. \nIt is also possible to configure it to count down from the max value to zero.\nThe counter has four parameters you can set to get it to operate how you want, but here we only need to change two. \nSIZE dictates how wide the output of the counter is. \nIn this case we need it to count from 0 to 7 for all 8 segments of our displays. \nThree bits is exactly 0 - 7. \nIf we wanted to count to a value that wasn't conveniently a power of 2 minus one, we could set the parameter TOP to control its maximum value.\nThe DIV parameter is used to set how many bits to use to divide the clock. \nBy setting this to 25, the counter will only increment its output every 225, or 33,554,432, clock cycles. \nThe clock runs at 100MHz (100,000,000 cycles per second) on the Au and Cu. \nIf the counter incremented every clock cycle it would be way too fast for us to see.\nFor simulations, we use 9 instead of 25 because of the reduced simulation speed.\nThe decoder is a binary to one-hot decoder. \nIf you need a refresher on one-hot representation check out the encodings tutorial. \nBasically, the decoder will take our three bits and convert it to eight bits. \nIf the input is 0, then the 0th bit of the output will be 1 and everything else will be 0. \nIf the input is 4, the 4th bit will be 1 and everything else will be 0. \nThis allows us to use the binary counter to light individual LEDs.\nNote that the output of the decoder is 2^SIZE bits wide. So in our case, 2^3 = 8 bits wide.\nNow we can hook up the modules.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nWe feed the binary counter value into the decoder and the output of the decoder to io_segment. \nNote that io_segment and io_select are both active low. \nThis means that when the signal is 0, it is active. \nTo turn only one LED on we need to invert the output of the decoder with the bit-wise inversion, ~, operator. \nThis will make the signal zero-hot.\nAlso notice we need to set io_select to 0 to enable a digit. \nSetting all of them to 0 will turn them all on.\nBuild and load your project to your board or fire up the simulator. \nYou should now see the segments of all 4 displays lighting one at time. \nTry to light only a single display by setting io_select to ~4h1 instead.\nNow what if we wanted to cycle through each digit? \nWe need another counter that increments each time the original counter overflows. \nThat way once each LED of a specific digit is lit, the next digit is selected. \nHowever, we don't actually need another counter to do this! We can simply make our existing counter 2 bits wider. \nBy adding extra bits, these will increment only when the lower three bits overflow, creating the behavior we want.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nHere we increase the SIZE of ctr to 5. \nWe also add another decoder with WIDTH of 2. \nWe need 2 since we have 4 digits to select from and an input of 2 bits gives us possible values of 0-3.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nWe can select the lower three bits of ctr.value by using the bit selector [2:0]. \nThis says we want bits 2 down-to 0 inclusive. \nWe can do the same thing for the upper two bits.\nBuild and load your project again. \nThis time you should see only one digit and one segment lit at any time. \nOnce each segment of a digit has been lit, the next digit is selected.\nYou may have also noticed that the segments are now much brighter. \nThis is because the resistor that is in-line with the LEDs is sized for a single LED, not all four. \nWhen you have all four on at the same time, the current is split between them making them all dimmer.\nGetting Fancy With Numbers\nLighting up the segments is super cool and all, but it's much cooler to actually show some numbers.\nBefore we jump into multiplexing, we need a way to convert a number into the segments that need to be lit to represent that number. \nTo do this we can use a look-up table.\nCreate a new module called seven_seg and add the following.\n\nThis module will take a binary number, char, and output the segments, segs, that need to be on.\nThis module uses a case statement. \nCase statements are equivalent to a bunch of if statements. \nOne of the entries will be selected based on the value of char.\nIf char is 1, then only the block after the 1: is used. \nIf none of the blocks match, the default: block is used. \nThe default block is optional, but it is generally a good idea to include it even if you think you have all the cases covered.\nIf char is an invalid number (not 0-9), then all the segments will be off.\nTo test out our look-up table, let's connect it to our counter.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nWe need ctr to count from 0-9 so we set TOP to 9 to cap its value. \nAlso, we need to change SIZE to 4, as we only need 4 bits to represent 0-9.\nBecause we don't need the decoders anymore, we can remove them and add our seven_seg module.\nFinally, we need to wire it up the LEDs\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nio_select is set to ~4h1 so that only the right most digit is on.\nBuild and load the project onto your board to make sure the first digit is correctly counting from 0 to 9.\nNow we need to make a module that will take four values in and display them on all four digits instead of only using one.\nCreate a new module called multi_seven_seg and add the following code.\n\nThis module is parameterized so that it could be used to drive more or less than 4 digits, but the defaults are set to work well with our project.\nThe constant DIGIT_BITS is the number of bits we need to cover all DIGITS number of digits. \nWe use the function $clog2() which computes the ceiling log base 2 of a constant value.\nWe only want the counter to count from 0 to DIGITS-1 so we set the TOP parameter accordingly.\nThe way this module works is ctr is used to select the active digit. \nThe value from values is then selected, decoded, and sent to the segments of the LEDs displays. \nThe binary value of the active digit is then decoded into a one-hot value as before and used to select which digit is on. \nBecause ctr keeps cycling the active digits, all the displays will appear on.\nDIV is used so that we don't switch between the digits too fast.\nIf DIV is too low and we switch too fast, the transistors that drive the LEDs don't have time to fully turn off, and we get bleed between digits.\nIf it is set too high, we will start to see the digits flicker.\nFor simulations, we don't have this problem so we set it to 0.\nLet's test out this module by feeding it some constant numbers to show.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nWe don't need the counter or the seven_seg modules from before, but we need the multi_seven_seg module now.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nOn the line starting with seg.values, we feed the values to display into the driver.\nBuild and load the design to your board and make sure each digit is displaying the correct number.\nDecimal Counters\nAlright, now that we have a way to show a value on our display, let's make the display count! \nFor this we need a decimal counter. \nWe could use a regular counter and convert the binary value into four decimal values, but that's a bit trickier.\nInstead, we will create a special counter that counts in base 10.\nTo do this we will create two modules. The first will be a single digit counter and the second will chain these together for a multi-digit counter.\nCreate a new module called decimal_counter with the following code.\n\nOur decimal counter has an input inc that is used to signal when the value should be increased. \nWhen the digit is about to overflow to 0, the flag ovf is set to 1. \nThe current value of the counter is output on value.\nWe now need to chain these together to make a multi-digit counter.\nCreate a new module named multi_decimal_counter and add the following code.\n\nHere we take DIGITS decimal_counter modules and chain them together. \nEach counter's inc signal is connected to the previous counter's ovf signal. \nThis means that once a counter overflows from 9 to 0, the next one will be incremented. \nOf course, the first counter doesn't have a previous counter's ovf signal, so we use an external increment signal instead.\nWe use the bit selectors [1+:DIGITS-1] and [0+:DIGITS-1] to select bits from dctr.inc and dctr.ovf. \nWhat [1+:DIGITS-1] means is starting from bit 1, select DIGITS-1 bits going up. \nThis is an easy way to select a specified number of bits given some start index. \nYou can use -: instead of +: to select bits going down instead of up from the given start index.\nAll that is left now is to generate the inc signal and connect the counter to our display driver.\nThe inc signal needs to be a pulse that stays high for only one clock cycle every time we want to increment our counter. \nTo create this we are going to use the counter component as before, but there is a problem with this. \nIf we create a counter that only outputs one bit, the bit will be high for have of the time and not just one cycle at a time. \nTo fix this we will use another component, the Edge Detector.\nGo into the Component Library and add the Edge Detector to your project. You can find it under Pulses.\nThis component takes a signal and sends out a pulse when it detects a rising, falling, or either type of edge. \nYou can configure which edges you care about.\nLet's add all the modules to alchitry_top.\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nFor the edge detector, we set RISE to 1 and FALL to 0. \nThis means we will generate a pulse only on rising edges.\nWe now have the multi-digit driver, the multi-digit counter, and a way to generate a pulse from the counter.\nLet's wire them all up!\n\nStandard\n \n \nFake Pull-downs\n \n\n \n\nThe value from the counter is fed into the edge detector. \nThe pulse from the edge detector is fed into the decimal counter. \nThe decimals from the decimal counter are sent to the multi-digit driver. \nFinally, the multi-digit driver is connected to the actual display.\nThis is what is so cool about FPGAs. \nEach one of these modules operates completely independently of one another since they all exist in hardware!\nThis example is fairly complicated, but by breaking down the problem in little chunks (modules) we were able to create a design that is relatively easy to understand and flexible for future upgrades.\nNow for the moment of truth, build and load the project onto your board or fire up the simulator! \nWith any luck, you should see the seven-segment display counting!\nIf you want to make it count slower or faster you can mess with ctr's DIV value.\n","id":"https://alchitry.com/tutorials/io-element/","title":"Io Element"},"https://alchitry.com/tutorials/lucid-reference/":{"body":"This page is a reference for the Lucid V2 language.\nLucid File Contents\nEvery Lucid file (.luc extension) can contain  module, testbench, and/or global declarations.\nModules\nModules are the core of any Lucid project. They are where you define a block of functionality.\nA module declaration takes the following form.\n\nParameters\nParameters provide a way for a module to be customized when it is instantiated to improve code reuse.\nAll parameters must be constant as they are replaced during synthesis (build time).\nParameters are defined in list of comma separated parameter declarations between #( and ).\nIt is optional and can be completely omitted.\nEach parameter declaration takes the following form.\n\nor\n\nHere, PARAM_NAME is the name of the parameter. \nParameter names, like constants, must be made up of only capital letters and underscores.\nEverything besides PARAM_NAME is optional.\nIn the first example, = default_value, will provide a default value for the parameter. If a default value is provided, when the module is instantiated the parameter can be omitted.\nIf you want to require a value to be provided when the module in instantiated then you can use the form in the second example of ~ test_value. \nWith this form, test_value is used as an example value to test your module in a stand-alone fashion by Alchitry Labs. However, it won't be used when the module is instantiated.\nThe test_value and default_value can be omitted but this will hinder the amount of error checking Alchitry Labs can perform on your module until it is instantiated.\nThe last piece, : test_condition provides a condition to test the parameter against. If it is false (evaluates to 0), then an error is thrown when the module is instantiated. \nThe test_condition can be any expression that evaluates to a number and references only this parameter or any previously declared parameters (ones that appear before this one in the list).\nAn example full declaration could look like this.\n\nIf a parameter has a default_value provided, then any value assigned to the module during instantiation, must be compatible with the width of default_value.\nFor a width to be compatible all of its dimensions except the outermost dimension must match.\nFor example, if a parameter was declared as PARAM = {8d1, 8d2, 8d3} then any value assigned to PARAM must has the width of [x][8] where x can be anything.\nIf the parameter is a simple number, or default_value is omitted, then the width of the parameter is assumed to be a simple (1D) array.\nPorts\nPorts are how modules connect to the outside world.\nThey act similar to signals but have a direction associated with them.\nPorts are defined in a comma separated list of port declarations between ( and ). \nNote that this differs from the parameter list in that opening symbol is simply ( instead of #(.\nEach port declaration takes the following form.\n\nsigned optionally marks the port to be interpreted as signed.\nThe direction is one of input, output, or inout. The details of these are below.\nThe port_name is the name of the port and must start with a lowercase letter. \nIt can then be followed by letters, numbers, and underscores.\nIt is convention for it to be snake_case.\nThe port can have an optional port_size. \nThis follows the format defined in sizing. \nIf it is omitted, then the port is a single bit wide.\ninput\nInputs are read-only signals passed into the module. \noutput\nOutputs are write-only signals passed out of module.\nTypically, they will have a value of b0 or b1. However, if they connect directly to a top-level output (pin on the FPGA) they can also have the value bz meaning high-impedance (not driven).\nSignals inside an FPGA don't have a mechanism for realizing bz so this can't be used internally.\ninout\nInouts provide a way to create a bidirectional signal.\nThese can't be used internally in the FPGA and are only valid to be connected directly to a top-level inout (pin on the FPGA).\nWhen an inout is written, the value will dictate if the pin's driver is enabled. \nIf it is anything other than bz the driver will be enabled. \nA value of bz will disable the driver and leave the pin floating to be driven externally.\nWhen an inout is read, the value at the actual pin is read. The value will never be bz.\nA module with an inout can be instantiated inside another module as long as the inout is passed directly to an inout of the parent module. It can't be interacted with inside the FPGA.\nModule Body\nA module body consists of any number of the following statement types between { and } at the end of a module declaration.\nType Declarations\nInside the module body, local types can be defined.\nThese can be signals, DFFs, constants, or enums as defined in the types section.\nModule Instances\nA module can contain sub-modules. When you use a module, that is called instantiation.\nA module instantiation takes the following form.\n\nThe module_type is the name of a previously defined module to be instantiated.\nThe module_instance_name is the name of this particular instance. It must start with a lowercase letter. It can then be followed by letters, numbers, and underscores. \nIt is convention for it to be snake_case.\nThe optional_array_size follows the format defined in the sizing section for arrays. Structs are not supported for module instances.\nIf optional_array_size is omitted, a single instance of the module is created.\nIf optional_array_size is provided, an instance of the module will be created for every index in the specified size. Each port of every instance is concatenated into a single multidimensional port.\nFor example, if the module, module_type, had an output named out that was 1 bit wide and we instantiated 8 copies it with the following, then module_instance_name.out would be an 8-bit wide array with each index corresponding to each copy.\n\nIf out was already an array then module_instance_name.out would be a 2-D array of size [8][n] where n is the size of a single out.\nFinally, port_and_param_connections are a comma separated list of connections to ports and parameters.\nPort connections take the form .port_name(port_value) where port_name is the name of the port and port_value is the value to connect to it. port_value can be an expression of matching width.\nParameter connections take the form #PARAM_NAME(param_value) where PARAM_NAME is the name of the parameter and param_value is the value to assign to it. param_value must be a constant expression that can be evaluated during synthesis.\nPort and parameter connections can be presented in any order. Convention is to list all parameters first.\nConnection Blocks\nWhen declaring many DFFs or modules, you may find yourself specifying the same connection over and over. This is where connection blocks are helpful.\nConnection blocks allow you to define a connection to a port or parameter for all instances inside of them. The most common use case for this is connecting the clk port of a dff to the clk signal in the module.\nConnection blocks take the following format. \n\nThe connection_list is a comma separated list of port and parameter connections with the same format used during a typical module instantiation.\nInside the block, you can instantiate modules or DFFs. You can also nest other connection blocks.\nA common use case is to have two nested connection blocks. The outer one for the clk port and the inner one for the rst port.\n\nThis allows you to easily create dff with and without resets.\nIf the dff or module instance is an array, the connections in the connection blocks are connected to each individual instance instead of to the concatenated value.\nThis can be helpful if you have an array modules and want to use the same parameter value for each one.\n\nIn the above example, all eight instances of module_type will have their parameter, PARAM_NAME set to 10.\nIf we wanted to assign different values to each one, they would need to be assigned inline as an array.\n\nThis does not apply to the dff. \nThe clk and rst inputs are always 1 bit and the INIT parameter always applies to the full dff.\nAlways Blocks\nAlways blocks provide a way to describe complex behavior in a way that resembles traditional programming.\nAn always block takes the following format.\n\nalways_statements are defined in the block statements section.\nThe always block can contain any number of these separated by new lines or semicolons.\nThe statements are evaluated top-down. This means lower statements take precedent over higher ones.\nFor example, if you assigned the signal led the value of 0 then immediately assigned it 1 the first assignment would be ignored.\n\nThis is identical to simply removing the first assignment.\nAn always block describes the desired behavior for part of your design. It is not actually run like typical code would be. The tools look at the block and figure out a way to make a circuit that would behave the same way. This means that there are some restrictions.\nFor example, repeat loops must have a fixed number of iterations. This is because there isn't actually a way to loop with hardware and the loop must be unrolled.\nIf a signal is written inside an always block, it must be written in all possible cases.\nFor example, this is not allowed.\n\nIn the case that button_pressed is false, my_sig won't have a value.\nThis could be remedied by adding an else clause or by assigning a value before the if.\n\n\nThese two blocks are functionally identical and the choice for each depends on your use case.\nIf it is a simple assignment like this, you may prefer the first.\nIf you have a reasonable default with complex logic for when it should deviate, use the second.\nAn exception to this rule is for DFFs. The .d input of a dff doesn't need to always be driven. This is because the .d input is implicitly assigned the value of .q at the start of the always block.\nIf the .d input isn't assigned, then the value of the dff won't change.\nHere is an example where the dff will only increment when button_pressed is true.\n\nAt the beginning of the always block my_dff.d = my_dff.q is implicitly added making this valid.\nIf an always block writes a signal, it is the driver for that signal meaning it can't be driven else where. In other words, a signal can be written in only one always block.\nGlobals\nGlobals allow you declare are group of constants, structs, and enums that are available anywhere in your project.\nA global declaration takes the following form.\n\nGlobalName is the name of the global namespace. All the definitions in it are accessed by using GlobalName.declaration_name. It must start with a capital letter and contain at least one lowercase letter. Convention is to use UpperCamelCase.\nGlobalName must be unique across the entire project.\nThe declarations are  constants, structs, or enums. \nHere's an example.\n\nThese can be accessed later with MyGlobal.CLK_FREQ, MyGlobal.States, and MyGlobal.color_struct.\nTestbenches\nTestbenches look very similar to modules, but they serve as a way to run simulations.\nThe basic format is as follows.\n\nThe testbench_name follows the same conventions as module names. \nIt must start with a lower case letter and can be followed by letters, numbers, or underscores. \nIt is snake_case by convention.\ntestbench_body is basically the same as the module body in the way can instantiate modules and DFFs or declare constants, enums, and structs.\nHowever, instead of always blocks you have test blocks. You can also declare functions.\nTest Blocks\nThe rules inside a test block are similar to those inside of an always block except that things are actually run sequentially like code.\nThe simulation will run each line in the test block line by line. Special test-only functions let you control the flow of the simulation.\nA test block takes the following format.\n\nThe test keyword is followed by the name of the test, test_name, which must start with a lowercase letter and can be followed by letters, numbers, or underscores.\nThe test_statements can be any statements described in the statements section.\nComments\nComments can appear anywhere and are ignored by the Lucid parser. They share the same format as C/Java comments.\nSingle Line Comments\nSingle line comments take the following form.\n\nThe // denotes the start of the comment and it continues to the end of the line.\nMulti-line Comments\nMulti-line comments take the following form.\n\nThe comment is everything between the two markers, /* and */.\nThey doesn't necessarily have to be on different lines and can be used to place a comment inline with code.\nSignals\nBasically any named value in Lucid can be thought of as a signal. This includes the sig type, ports on a module or dff, and even a const.\nSizing\nWhen declaring a type, you can specify the width of that type with any number of array  dimensions followed by an optional struct type with the following format.\n\nAfter the array sizes, you can specify a struct type using the syntax &lt;struct_type&gt; where struct_type is some previously declared struct. \nThe only exception to this is module instances don't support structs.\nAll of the components of a signals size are optional and if omitted it defaults to 1 (either a bit or a single module instance).\nIf you declare something with both, you will have an array of that struct. Here is an example.\n\nA component of a_few_colors could be accessed like a_few_colors[9].r. To get the least significant bit of green for index 2 we could use a_few_colors[2].g[0]\nArrays\nAn array is a list consisting of elements of all the same size.\nTo make an array, you use the [size] syntax where size is some constant. These can be chained together to form multi-dimensional arrays.\nA 1-D array is treated as a binary number. See the expressions section for some examples.\nstruct\nStructs are a way to split a signal into arbitrary named sections.\nUnlike an array that requires each element to be identical in size, in a struct, each element can be have any width.\nThe syntax of a struct declaration looks like the following.\n\nThe struct_name is the name of the struct. It must start with a lowercase letter and can be followed by letters, numbers, or underscores. By convention, it is snake_case.\nThe struct_elements are a comma separated list of elements. Each element takes the following format.\n\nThe signed keyword is optional and will mark this element to be treated as a signed value. If the signal_width has a struct component to it, this does nothing.\nelement_name is the name of the element. It must start with a lowercase letter and can be followed by letters, numbers, or underscores. By convention, it is snake_case. It must be unique inside this struct.\nsignal_width is an optional width for the element as specified in the sizing section.\nAn example struct for holding a 24 bit color could look like this.\n\nComponents of the struct are accessed via the .element_name syntax.\nSignal Selection\nWhen reading or writing a signal, if it isn't a single bit, you may need access only part of it. How you do this depends on the width of the signal.\nArray Selection\nIf the signal is an array, you can use any of the array selectors to access part of it.\nThere are three main types of array selectors. \nIndex Selector\nThis selector is used to select a single index out of an array and takes the form [idx].\nThe selector, idx, doesn't need to be constant.\nThis is the only selector that can have another array selector following it.\nConstant Range Selector\nYou can select a range of indices using the [max:min] syntax.\nThe values of max and min must be constant values and max must be greater or equal to min.\nThis selector will select all the indices from min to max including both.\nFixed Width Selector\nYou will sometimes need to select multiple bits using a dynamic index. This is where the fixed width selector is helpful.\nWith the selector you specify a starting index then how many bits to include above or below including the start bit.\nIt takes the form [start+:width] to select a total of width bits starting at start and going up or [start-:width] to select width bits starting at start but going down.\nFor example, [4+:3] would select indices 4, 5, and 6. [4-:3] would select indices 4, 3, and 2.\nThe value used for width must be constant. However, the value used for start can be dynamic.\nThe reason for this is so that the resulting selection is always a fixed width.\nNegative Indices\nThe indices for the selectors can also be negative.\nWhen an index is negative, it wraps around to the highest value. \nFor example, if you had an 8 bit wide signal then index [-1] would be the same as [7].\nAn index of [-2] would be the same as [6] and so on.\nAn index of [-8] would be out of bounds and invalid.\nThe actual index used is essentially the negative value plus the width of the signal.\nMany times a signal's width is defined by a constant or a parameter to allow it to be easily changed.\nNegative indices makes it easy to access the MSB of a signal regardless of its width.\nStruct Selection\nIf a signal is a struct then to select an element from it you use the syntax my_struct_signal.element_name.\nThis assumes the signal my_struct_signal is of a struct type that has an element named element_name.\nTypes\nsig\nThe sig type is short for signal. These are used as basic connections between parts of your design.\nEach sig must have a single driver. Something that provides a value at all times as they have no state themselves.\nDeclaring a sig takes the following form.\n\nEverything other than the sig keyword and sig_name are optional.\nsigned optionally marks the sig to be interpreted as signed.\nsig_name is the name of the signal and it must start with a lowercase letter. It can then contain letters, numbers, and underscores. By convention, it is snake_case.\nsig_size is the optional array/struct size of the signal. See sizing for details.\nA signal can have an expression attached to it. This expression is considered to be the driver of the signal and it can't be written elsewhere if provided.\nIf the = expression portion is present, it behaves exactly the same as the following.\n\nA sig can be read and written inside an always block. The value that is read is always the last value written.\nIf a sig is read in the same always block that it is written, then it must be written before it is read.\nHere's an example.\n\nA sig is often used explicitly internally in an always block as a temporary value.\n\nAs mentioned before, inside an always block, the value of a sig is always the last value written to it.\n\nOutside the always block that drives the sig, only the final value will ever be seen. \nIn the previous example, the final line my_sig = 1 means that anything reading my_sig outside of that always block will always see the value 1.\ndff\nThe dff is the building block of any sequential logic. It is the only type to have an internal state.\nYou can think of the dff as a single bit of memory.\nThe dff acts a lot like a module instance in that it has ports and parameters.\nIt has three inputs, one output, and one parameter.\nThe .d input is the data input. This is used to update the value of the dff.\nThe .clk input is the clock input. Whenever this transitions from 0 to 1, a rising edge, the .d input is saved. \n\n    \n    \n        Generally, the .clk of every dff should all connect to the same system clock. \nYou shouldn't drive this signal with other logic. \nFPGAs have special dedicated clock routing resources to efficiently distribute a clock signal to the entire (or large portions) of the FPGA. \nMessing with this can cause your design to simulate fine but fail in the real world.\n\n    \n\nThe .rst input is the reset input. \nThis is used to force the dff into a known state (0 or 1). \nIf a reset isn't needed, this input can be left unconnected. \nYou should only use this when a reset is actually needed as omitting it will reduce the routing complexity of your design.\nA complementary .arst input can be used as an asynchronous reset.\nThis input works the same as the .rst input, but it doesn't wait for a rising edge of the clock to reset the .q value.\nThis is typically not desired and should be used with caution as it may lead to timing issues.\nOnly .rst or .arst can be used at once.\nThe .q output is the current value of the dff.\nThe #INIT parameter is used to specify the value that the dff will both initialize and reset to. It has a default value of 0. \nFPGAs are fully initialized when programmed regardless if the dff has a rst signal or not.\nThe format to declare a dff looks like the following.\n\nsigned optionally marks the dff to be interpreted as signed.\nThe dff_name is the name of the dff and it must start with a lowercase letter. It can then contain letters, numbers, and underscores. By convention, it is snake_case.\ndff_size  is the optional array/struct size of the signal. See sizing for details.\nThe ports_and_params portion is a comma separated list of port and parameter connections. See module instances for details.\nconst\nThe const type provides a way to name constant values. This allows you to set the value in one place but use in in many places. That way if you need to change it later, it is easy.\nThe form for a const declaration looks the the following.\n\nIt starts with the const keyword followed by CONST_NAME, the name of your constant. The name must start with an uppercase letter and be followed by uppercase setters and underscores. By convention, it is UPPER_SNAKE_CASE.\nThe value of the constant is provided by const_expr. This can be any expression that evaluates to a constant value.\nThe width and sign of the const is inferred from the const_expr.\nFor example, if you need a constant of an 8-bit number you could use the following.\n\nThe constant, MY_CONST, would be an array of 8 bits wide with the value 120.\nenum\nAn enum provides a way to group a list of constants whose value  you don't explicitly care about.\nDeclaring one takes the following form.\n\nIt starts with the enum keyword followed by its name, EnumName. The name must start with an uppercase letter and contain at lease one lowercase letter. It can otherwise contain letters, numbers, and underscores. By convention, it is UpperCamelCase.\nFollowing the name is a list of comma separated values. The names of the values follow the same naming convention as constants.\nTo access the values of the enum you use the notation EnumName.VALUE.\nThe enum is often paired with a dff to store the state of a finite-state machine (FSM).\nHere is a common example.\n\nThe $width function can be used on the enum to get the minimum number of bits to store a value.\nExpressions\nExpressions appear all over Lucid.\nAn expression is something that can be evaluated to a single value.\nThe following sections appear in order of precedence. That means that higher up on the list, the earlier the Lucid parser will match that expression.\nFor example, the multiply and divide section comes before the add and subtract section. That means for something like 5 + 2 * 6  the parser will first evaluate the multiplication before the addition.\nValue\nThe simplest expression is a value.\nThis can be a literal value, a signal, or a constant.\nSigned\nWhen a value is signed, it means that it will be interpreted as a 2's complement number and can represent negative and positive numbers instead of simply positive. \nAn unsigned value can represent values from 0 to 2b -1 where b is the number of bits.\nA signed value can represent  values from -2b-1  to 2b-1 -1 where b is the number of bits.\nThe signed keyword can be applied as a prefix to most types to mark them as signed.\nThe functions $signed() and $unsigned() can be used to explicitly mark an expression as one or the other.\nExpression that operate on numbers assume the values are unsigned binary numbers unless all of the arguments are marked as signed. In that case, they are all treated as 2's complement signed numbers.\nIt's common to see something like $signed(a) * $signed(5) to ensure that the multiplication is signed.\nGroup\nThe group expression takes the form ( expr ) where expr is an expression.\nIt is used to force the order expressions are evaluated. For example, (5 + 2) * 6 will cause the 5 + 2 to be evaluated before the multiplication.\nConcatenation\nConcatenation provides a way to merge two or more arrays.\nIt takes the form c{ expr1, expr2, ... } where all expr are arrays or bits.\nIf the values passed into it are multi-dimensional arrays, all of their sub-dimensions must match. For example, an array of width [2][8] could be concatenated with an array of width [3][8] to form an array of width [5][8].\nThe order of concatenation is such that the right most element occupies the least significant spot.\nHere is an example.\n\nDuplication\nDuplication provides a way to concatenate a single value many times with itself.\nIt takes the form const_expr x{ expr } where const_expr is a constant expression indicating how many times to duplicate expr.\nThe value expr must be an array (or bit).\nDuplication works the same way as concatenation. For example, 3x{2b11} is the same as c{2b11, 2b11, 2b11}. Both equal 6b111111.\nIt is often used to get a value of all 1 with some given width.\nFor example, you could get the max value of a signal with PARAM bits using PARAMx{b1}.\nArray Builder\nThe array builder provides a way to create an array from any number of identically sized expressions.\nThe syntax is { expr1, expr2, ... } where all expr have the same width.\nThe order of the array is such that the right most expr is index 0.\nHere is an example.\n\nInvert\nThe invert operators allow you to perform a bitwise or logical invert.\nOperatorFunction\n~exprBitwise invert\n!exprLogical invert\n\nThe result of a bitwise invert is the same width as expr with every bit inverted (0 becomes 1 and 1 becomes 0).\nThe result of a logical invert is a single bit. It is 1 if expr is equal to 0 and 0 otherwise.\nNegate\nThe negate operator allows you to negate the 2's complement interpretation of an array.\nIt takes the form -expr where expr must be a 1-D array or bit.  The result is the negative value of expr. The width of the result is always 1 bit wider than expr to accommodate overflow.\nFor example, -4b0001 is equal to 5b11111.\nUsing this operator does not mark the value to be considered signed.\nMultiply and Divide\nThe multiply and divide operators do what you would expect, they multiply or divide two expressions.\nOperatorFunction\nexpr * exprMultiplication\nexpr / exprDivision\n\nThe result from each operation is the minimum number of bits to represent the largest possible value.\nThe expr used in either must be 1-D arrays or bits.\nFor the computation to be signed, both expr must be signed. If either is unsigned, the computation will be unsigned.\n\n    \n    \n        FPGAs typically have some number of dedicated multipliers that make multiplication pretty fast. \nDivision can be very costly to perform. However, it is basically free if your denominator is a power of 2.\nA simple trick you can often use is to multiply the numerator by something then divide by a power of 2 to approximate the division. For example dividing by 3 can be efficiently approximated with n * 85 / 256.\n\n    \nAddition and Subtract\nThe addition and subtraction operators allow you to add or subtract two expressions.\nOperatorFunction\nexpr + exprAddition\nexpr - exprSubtraction\n\nThe result from each operation is the width of the larger expr plus one bit to account for overflow.\nThe expr used in either must be 1-D arrays or bits.\nFor the computation to be signed, both expr must be signed. If either is unsigned, the computation will be unsigned.\nShifting\nThe shifting operators allow you to shift the bits in a 1-D array or bit left or right.\nThere are four versions of the shifting operator.\nOperatorFunction\nexpr &lt;&lt; amountLogical left shift\nexpr &gt;&gt; amountLogical right shift\nexpr &lt;&lt;&lt; amountArithmetic left shift\nexpr &gt;&gt;&gt; amountArithmetic right shift\n\namount and expr must be 1-D arrays or bits.\nLogical shifts always use 0 for the bits shifted in.\nArithmetic right shift will use the sign bit if expr is signed and 0 if it is not.\nArithmetic left always uses 0 and is functionally identical to logical left.\nThe result of right shifts have the width of expr.\nThe result of left shifts have the width of expr plus the value of amount.\nHere are some examples.\n\nBitwise\nBitwise operators allow you to perform the boolean operations and, or, and xor on a bit-by-bit basis of two expressions with matching widths.\nOperatorFunction\nexpr &amp; exprAND\nexpr | exprOR\nexpr ^ exprXOR\n\nThe widths of both expr must match exactly. Otherwise, they can be anything.\nThe result has the same width as expr.\nReduction\nReduction operators allow you to perform the boolean operations and, or, and xor on all the bits in an expression with all the other bits.\nOperatorFunction\n&amp; exprAND\n| exprOR\n^ exprXOR\n\nThe result of any reduction operator is a single bit.\nThe &amp; operator is 1 if every bit in expr is 1 and 0 otherwise.\nThe | operator is 1 if any bit in expr is 1 and 0 otherwise.\nThe ^ operator is 1 if there are an odd number of 1 bits in expr and 0 otherwise.\nComparison\nThe comparison operators allow you to compare the values of two 1-D arrays or bits.\nOperatorFunction\nexpr &lt; exprLess than\nexpr &gt; exprGreater than\nexpr == exprEquality\nexpr != exprNot equal\nexpr &lt;= exprLess than or equal\nexpr &gt;= exprGreater than or equal\n\nThe result of any comparison is a single bit. The value 1 means the comparison was true and 0 means false.\nFor a comparison to be signed, both expr must be signed. If either is unsigned, the comparison will be unsigned.\nLogical\nLogical operators allow you to perform the boolean operations and and or on two logical values.\nOperatorFunction\nexpr &amp;&amp; exprAND\nexpr || exprOR\n\nThe result from either operator is a single bit.\nThe expr is considered to be true if it isn't 0 and false only when it equals 0.\nThe &amp;&amp; operator will produce 1 if both expr are true and 0 otherwise.\nThe || operator will produce 1 is either expr is true and 0 otherwise.\nTernary\nThe ternary operator allows you select between two identically sized expressions using the value of a third expression.\nIt takes the following form.\n\nThe selector is considered to be true if it isn't 0 and false only when it equals 0.\nThe result has the same width of true_expr and false_expr, which must match.\nWhen selector is true the result is true_expr otherwise it is false_expr.\nAlways/Test Block Statements\nThis section contains the statements that can appear inside always and test blocks.\nAssignments\nThe most common statement is the assignment statement. These allow you to write a value to a signal.\nThey take the following form.\n\nWhere signal is the writable signal to have the value of expression written to it.\nThe signal doesn't necessarily have to be the entire width of the signal and signal selectors can be used to assign a value to only part of the signal.\nHere is an example.\n\nIf any portion of a signal is driven inside an always block then all of the signal must be driven somewhere in the block. In the above example, removing either assignment would result in an error since that always block would have a value for only half of the signal.\nif\nAn if statement allows you to conditionally consider a block of statements.\nThey take the following form.\n\nIf condition is true, meaning non-zero, then the statements in the first statements section are considered. If it is false, meaning zero, then the statements in the second statements section are considered.\nThe else portion is optional.\nThe brackets can be omitted if there is only one statement in statements.\ncase\nThe case statement provides a way to cleanly write a group of conditional statements that depend on the value of a single expression.\nIt takes the following form.\n\nThe condition expression is evaluated and compared against the provided values (VALUE_1, VALUE_2, etc) inside the case block.\nIf one of the values match condition, then its corresponding group of statements are considered. If none of the values match, an optional default branch's statements are considered.\nUnlike some programming languages, there is no break keyword and the branches don't fall through to the next condition without one.\nYou often see these used in conjunction with enums where the condition is a dff that holds the current state and each branch is one of the enum's values.\nrepeat\nThe repeat statement allows for a block of statements to be considered multiple times.\nThey take the following form.\n\nHere count is a constant expression indicating how many times the block of statements should be considered.\nThe arguments start and step are optional and have default values of 0 and 1 respectively.\nThe i argument is an optional variable name that can be used inside the repeat block. It will start with the value start and increment by step each iteration of the loop to a final value of start + step * (count - 1). It must start with a lowercase letter and can contain letters, numbers, and underscores. By convention, it is snake_case.\nIf i is omitted, then only count should be provided making it take the form repeat(count).\nThe count value can be an expression depending on outer loops var in the case of nested repeat blocks.\nHere is an example.\n\nThis would print the following (in a simulation).\n\n\n    \n    \n        While it may seem like repeat works like for loops in many programming languages, it is important to remember that always blocks are only a convenient abstraction for describing a circuit's behavior. When your design is synthesized it must be converted to hardware.\nThis means that all loops must be unrolled. A repeat block is identical to simply copy-pasting the contents over and over and replacing the loop variable with a different value for each one.\n\n    \nFunction call\nIn test blocks, you can call simulation functions as a statement.\nThese are used to control the simulator or produce output like $print() used in the repeat example.\nLiterals\nNumbers\nNumbers can be represented in decimal, binary, or hexadecimal. In each case you can choose to explicitly specify the number of bits.\nFormatRadixWidth\n012345678910 (decimal)Minimum bits required\nd012345678910 (decimal)Minimum bits required\nb01xz2 (binary)Number of digits\nh0123456789ABCDEFxz16 (hex)Number of digits * 4\n\nDecimal numbers can be written as a stand-alone number. For example, 12 will have the expected value of 12. They can also be prefixed with a d to specify that it is a decimal number like d12. In both of these cases, the value will have the minimum number of bits required, 4.\nBinary numbers are written with the b prefix. After that, they can have the digits 0, 1, x, and z. \nHex numbers are written with the h prefix. After that, they can have the digits 0 through 9, A through F, x, and z.\nThe value of x means either don't care or unknown depending on the context.\nIt is impossible for hardware to realize the value x so outside of simulations these are actually 0 or 1. You can assign something x if you don't care what the value is and this will give the tools the freedom to choose whatever value is most efficient.\nThe value of z means high-impedance and is covered in the ports section.\nFPGAs don't have the hardware internally to realize z values so they can only be used on top-level outputs and inouts.\nTo explicitly specify the width of a number, you add the number of bits before the radix prefix.\nFor example, 8d10 will have the value 10 and be 8 bits wide.\nIf the explicit width is wider than the minimum required width, the value is padded with 0 unless the most-significant (left-most) digit is either x or z. In that case, it will be padded with x or z respectively.\nFor example, 12hx0 has the value 12bxxxxxxxx0000.\nIf the explicit width is less than the minimum required width, the value will be truncated and a warning will be shown.\nUnderscores can be added anywhere in the value portion of a number to help with readability.\nFor example, 100_000_000 or 8b1010_1100.\nArrays\nLiteral arrays can be constructed using other literals and the array builder expression.\nHere is an example of an array of 4, 8 bit values.\n\nStrings\nStrings are just an easy way of creating an array of 8 bit values that correspond to text.\nThey take the form of text enclosed by quotation marks like \"this example\".\nThe right-most character is index 0 in the resulting array.\nFor example, \"Hi\" is equal to {8h48, 8h69} (h48 is the code for H and h69 is i).\nYou will often see strings used in conjunction with $reverse() to make index 0 be the left-most letter.\nStructs\nStruct types are covered in the struct section.\nTo create a literal of a struct, you use the following syntax.\n\nHere struct_type is a previously defined struct type.\nThe following comma separated list must contain every element in struct_type. The element_name is the name of element in the struct_type and const_value is the constant value to assign to the element.\nHere is an example.\n\nFunctions\nBuilt-in\nIn the table below, the argument type of Value means a 1-D array or bit. In other words, something that can represent a number.\nFunctionArgument TypePurpose\n$width(expr, dim)expr is an array and dim is a constant valueProvides the width of expr on dimension dim. If expr is a 1-D array or bit, dim is optional and assumed to be 0. If expr is a multi-dimensional array, then dim is required. For example, $width({4b0,4b0}, 0) is equal to 2, $width({4b0,4b0}, 1) is equal to 4, and $width(8b0) is equal to 8.\n$signed(expr)ValueMarks the value to be interpreted as signed without changing the underlying bits.\n$unsigned(expr)ValueMarks the value to be interpreted as unsigned without changing the underlying bits.\n$clog2(expr)Constant valueCalculates ceiling log base 2 of expr.\n$cdiv(numer, denom)Constant valueCalculates the ceiling of numer / denom\n$pow(expr, expo)Constant valuesCalculates expr to the power of expo.\n$reverse(expr)Constant arrayReverses the indices of the outer most dimension of expr.\n$flatten(expr)AnythingReturns a 1-D array of all the bits in expr. Arrays are concatenated in order and structs are in the order their elements were declared.\n$build(expr, dims...)expr is a value and dims are constant valuesConverts a 1-D array into a multi-dimensional array based on the dims passed in. Each dim corresponds to how many times it should be split. For example, $build(b111000, 2) will split it into 2 becoming {b111, b000}. More than one dim can be supplied to build more dimensions. For example, $build(b11001001, 2, 2) becomes {{b11, b00}, {b10, b01}}.\n$resize(expr, size)expr is a value and size is a constant valuesResizes a value either smaller or wider. If expr is signed, it will be sign extended.\n$fixed_point(real, width, fractional)real is a real number, width and fractional are  constant valuesCalculates the nearest fixed-point representation of real using a total width of width and fractional fractional bits. For example, $fixed_point(3.14, 8, 4) produces 8d50.\n$c_fixed_point(real, width, fractional)real is a real number, width and fractional are  constant valuesCalculates the smallest fixed-point representation of real  that is still larger than it using a total width of width and fractional fractional bits. For example, $c_fixed_point(3.14, 8, 4) produces 8d51.\n$f_fixed_point(real, width, fractional)real is a real number, width and fractional are  constant valuesCalculates the largest fixed-point representation of real  that is still smaller than it using a total width of width and fractional fractional bits. For example, $f_fixed_point(3.14, 8, 4) produces 8d50.\n$is_sim()NoneEvaluates to 1b1 during interactive simulations and 1b0 otherwise.\n\nSimulation Only\nThese functions are only available during simulations. In other words, inside test blocks or test functions.\nFunctionArgument TypePurpose\n$tick()NonePropagates all signal changes and captures the state.\n$silent_tick()NonePropagates all signal changes.\n$assert(expr)Any expression, typically a comparison.Checks that expr is non-zero (true). If it is zero the simulation is halted and an error is printed indicating the failed assert.\n$print(expr)Any expressionPrints the value of expr. If expr is a string literal, it prints the string. Otherwise, it prints expr = value where expr is the text and value is the actual value.\n$print(format, exprs...)format is a string literal and exprs is a variable number of expressions depending on the formatPrints the string format with the values of the provided exprs replaced where applicable. Valid format flags are %d for decimal, %h for hex, %b for binary, %nf for fractional where n is the number of fractional bits.\n\nUser Created\nInside testbenches, you can create your own functions using the following syntax.\n\nfunction_name is the name of the function. It must start with a lowercase letter and be followed by letters, numbers, and underscores. By convention, it is snake_case.\nThe argument_list is an optional list of arguments. They act the same as read-only signals and have a width of 1 bit if a width isn't provided. They may also be marked as signed using the signed keyword.\nTo call a function, you use the syntax $function_name(arg, ...).\nHere is an example function with an argument.\n\nThis could be called using something like $tick_clock(20).\n","id":"https://alchitry.com/tutorials/lucid-reference/","title":"Lucid Reference"},"https://alchitry.com/tutorials/lucid_v1/":{"body":"These are the original Lucid tutorials for the Alchitry boards. For the Mojo, click here.\n","id":"https://alchitry.com/tutorials/lucid_v1/","title":"Lucid V1"},"https://alchitry.com/tutorials/lucid_v1/components/":{"body":"In this tutorial we will use the USB port and create a project that will echo back all the data sent to the Au or Cu. Click here for a tutorial for the Mojo.\nThis will teach you how to use components in your projects.\nGetting Started\nLike before, we will start by creating a new project. Go to File-&gt;New Project... and create a new Lucid project. I'm calling mine Serial Port Echo. It is from the Base Project example.\nGreat! Now we have a bare-bones project. The Au's and Cu's USB port is accessible to the FPGA through the FTDI USB&lt;-&gt;serial bridge. Serial is often called UART (Universal Asynchronous Receiver Transmitter) and this is the name of the components we will need.\nComponents\nComponents are prewritten modules that you will likely need to use in many of your projects. For this tutorial, we need to add two components to our project. One to receive data and one to send data.\nLaunch the Component Selector by going to Project-&gt;Add Components...\nUnder Protocols you will find the components UART TX and UART RX. Click the checkboxes next to each one.\n\nYou can click each component for a short description of what it does. \nFeel free to explore the other categories to see what's available. The list of components grows over time with new releases of Alchitry Labs.\nClick Add to copy the components into your project.\nNotice that there is a new category called Components.\n\nYou can open any of the components you want to take a look at how they work. However, for this tutorial we will be using them as a black box.\nInstantiating the Component\nNow that the components we need are in our project, we need to use them.\nWe are going make some changes in the top file.\n\nThis will create instances of uart_rx and uart_tx named rx and tx respectively.\nWe need to specify two parameters for each one. The BAUD parameter is the number of bits per second it should send. The important thing is that you match this rate to the one you set on your computer. The serial port monitor in Alchitry Labs uses 1M baud so that is what we specify here.\nThe other parameter, ﻿_CLK_FREQ_﻿, is the frequency of the clock. This is used to calculate how many clock cycles are required per bit.\nIf you only do this, you will actually get some errors. These errors are because some of the inputs to the modules were never assigned.\nWe are going to hook the modules up to each other so that when data is received, it is promptly sent back.\nChange the always block to look the following.\n\nOn lines 28 and 29, we connect the external input and output to our two modules. \nOn lines 31 and 32, we connect the rx module's outputs to the tx module's inputs. \nOn line 33, we set the block input of tx to 0. When this value is 1, the uart_tx component won't send any data out. This is useful if you have some way to tell that the receiver is busy. With the Au and Cu, we just assume the data is being read from the computer in a timely manner to keep the FTDI's buffer from overflowing. This is a reasonable assumption as long as there is some program actually reading the data.\nSending and Receiving Data\nWhen new data arrives, the signal rx.new_data goes high. This tells you that the data on rx.data is valid. Normally you would want to wait for rx.new_data to go high and then do something with the data.\nWriting data to the serial port follows the same idea. We set tx.data to the byte to send and we set tx.new_data high. However, there is one more signal to look out for. That is tx.busy. If this signal is high, the transmitter is busy for some reason, either it is currently sending a byte or block is high. Either way, if you try to send data when this is high, it will be ignored.\nFor this simple example, we are going to ignore tx.busy. This should not be a problem since we never block and the bytes coming in arrive at the same rate we can send them out.\nThe next tutorial will handle this more gracefully by actually respecting this flag. \nYou should now be able to build your project and load it on the board. You can then go to Tools-&gt;Serial Port Monitor in Alchitry Labs to launch the monitor. The monitor should automatically detect the serial port of your board. If you have an Alchitry board (not a Mojo) it'll ask for the baud rate (enter 1000000). You should then be able to type data into the monitor. Whatever you type should be shown.\nCapturing Data\nBefore we wrap up, let's do a little more with the incoming data. We are going to save the last byte received and display it on the LEDs.\nTo do this this, we need an 8 bit dff. The following line goes inside the .clk(clk) block but outside the .rsr(rst) block. It could go inside the .rst(rst) block but it really doesn't need a reset.\n\nWe can then write to the dff when we have new data. These lines go at the end of the always block. You can also remove the previous assignment of 0 to led.\n\nOn the last line, we connect the LEDs to the output of the dff.\nIf you don't assign a dff a value, then it will retain the last value it had. Since we are only assigning it a value when rx.new_data is high, it will hold the last byte until the next one comes in.\nNow, if you build and load your project, when you fire up a serial port monitor you should not only see the text you send back in the monitor, but the LEDs on the board should also changed depending on the character you sent.\nThe full module looks like this.\n\n","id":"https://alchitry.com/tutorials/lucid_v1/components/","title":"Components"},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"body":"In this tutorial we are going to setup an interface to the DDR3 memory with the FPGA on the Alchitry Au.\nSetup\nBefore starting, you need to have Alchitry Labs 1.1.6 and Vivado 2019.1 or newer.\nThe first step is to setup your project. Open Alchitry Labs, and go to Project-&gt;New Project. From here, make a new project based on the Base Project. We called ours DDR Demo, but feel free to name yours whatever you want.\nAlso make sure that the project is for the Alchitry Au. The Alchitry Cu and Mojo don't have DDR memory on board so this tutorial is only for the Alchitry Au.\nAdding the memory controller\nThere is special hardware on the Artix 7 FPGA that is used for interfacing with the DDR chip. To efficiently use this, Xilinx provides customizable IP via their IP catalog in Vivado.\nCustomizing this IP requires full knowledge of the DDR3 chip being used and the board pinout. While you can find all the information you need to set this up for the Alchitry Au, we have drastically simplified it for you in Alchitry Labs.\nTo invoke the commands needed to add the Xilinx memory interface to your project with everything already setup, go to Project-&gt;Add Memory Controller. Note that this option is only visible if your project is for the Alchitry Au board.\nOnce you click this, Alchitry Labs will add a Vivado IP Project to your project and invoke the necessary commands to add the memory interface.\n\nThe initial setup can take a couple minutes since it actually builds the core. Once it is done it should look like the above screen shot.\nIf you open the Cores section of the project tree, you should see the mig_7series_0 core. Under its heading you can find the stub file. This is an empty Verilog file that defines all the connections to the core.\nAdapting to Lucid\nYou can use this core directly in your design if you want, but it is generally more convenient to wrap it. Go to Project-&gt;Add Components and under Memory select the MIG Wrapper. Click Add to add it to your project.\n\nThis component wraps the mig_7series_0 core you previously generated and defines two global structures to make hooking up other modules to it easier.\nIf you look at the module declaration of the wrapper, you will see a bunch of inouts and outputs that start with ddr3_. These are all top level signals that need to connect to the DDR3 chip.\nThese names are actually important since the pins they connect to are defined in the mig_7series_0 core. You don't need to specify a pinout for them in your constraints file.\nHooking up the wrapper\nWe can copy/paste these connections to our top level module and hook them up.\n\nNote that you'll get an error on the mig instantiation since we haven't hooked up the user interface yet.\nAgain, it is important you don't change the names of these signals since they are used in the constraint file included with the mig_7series_0 core. If you change the names, the tools won't know what pins they need to connect to on the FPGA.\nSetting up the clock\nThe memory interface requires both a 100MHz and a 200MHz clock. Since the Alchitry Au only has a 100MHz clock, we need to synthesize the 200MHz one.\nWe can do this using the Vivado IP Catalog. Go to Project-&gt;Vivado IP Catalog to launch it.\nAfter a few seconds, a window should open that looks likes this.\n\nNote that there is already a core in our project, the mig_7series_0.\nIn the right IP Catalog panel, navigate to FPGA Features and Design-&gt;Clocking-&gt;Clocking Wizard and double click on Clocking Wizard.\nThis will open a new dialog to customize the IP.\n\nThe defaults on the first page are all fine. However, by default, it is set to output only a single 100MHz clock.\nGo to the Output Clocks tab and check the clk_out2 box.\nUnder Output Freq (MHz) Requested, enter 200.\n\nWe can now click OK to close the dialog.\nAnother dialog will open with some generation settings, just click on Generate to generate the core.\nAfter a few seconds, another dialog saying Out-of-context module run was launched for generating output products. Simply click OK and wait until you see 100% under the Progress section in the bottom of the main window.\n\nYou can now close the IP catalog.\nBack in Alchitry Labs, you should see some text in the console about finding the new core. You should also see clk_wiz_0 added to the Cores section of the project tree.\n\nWe can now hook up the clocks to the memory interface core.\n\nNote that we are using the 100MHz output from the clk_wiz module instead of the clk signal directly. This is to keep the routing in the FPGA simple. The clk only needs to route to the clk_wiz_0 core and nowhere else. You can often run into issues if you try to route the clock to special resources like the PLL used by the clock wizard and the general fabric.\nThe two outputs of the clock wizard are also phase aligned (rising edges match up) which may or may not be important for your design. The same is not true for the input clock and the output clocks. In this case, we don't really care about this.\nTo clock the rest of our design, we will be using the signal mig.ui_clk which is another synthesized clock from the memory interface. This clock is the one that the user interface is synchronized to. In our case, it is 81.25MHz. This is because our DDR3 interface is setup to run at 325MHz with a 4:1 ratio.\nAlso notice that we are using the mig.sync_rst signal as our reset. Because of this, we can remove the reset_conditioner module from our top level module.\nThe reset button on the board will still work as the reset since it is used to reset the clock wizard which then resets the memory controller. This works since the locked output of the clock wizard goes low when it is reset. The locked output goes high when it isn't being reset and the clocks are stable. If you don't hold your circuit in reset when this input isn't high, you risk running into glitches as the clocks may be doing weird things.\nWith all of that we are now fully setup to use the core!\nThe user interface\nThe memory interface abstracts away a ton of the complexities of dealing with DDR3 memory, but the interface we get to it is still reasonably complex.\nCheck out this document from Xilinx that details all the information on the core. Skip to page 57 and look at the section labeled User Interface.\nThis section details what each of the signals we will be interacting with do.\nThe actual signals we need to deal with are a subset of the ones listed. See the two structs declared in the mig_wrapper component for the ones we need.\nOne thing to note is that while the cmd signal (app_cmd in the Xilinx doc) is three bits wide, it only ever has a value of 0 (for write) and 1 (for read). Other values are used in different configurations of the core (for example, with ECC memory).\nThere are really three independent interface bundled together used to deal with the controller.\nThe first is the write FIFO. The controller will store data in a FIFO to be used in subsequent write commands. The signal wr_rdy is 1 when there is space in the buffer. You can write to the buffer by supplying data on wr_data and setting we_en to 1.\nThe signal wr_mask can be used to ignore bytes in wr_data. A 1 means to ignore the corresponding byte. To write the full 16 bytes (128 bits) set wr_mask to 0.\nNote that this mask doesn't change which bytes are sent to the DDR3 chip. It is used to control the DM lines which tell the DDR3 chip to ignore certain bytes. If you set wr_mask to 16hFFFF and perform a write, the full 128 bits will still be sent to the DDR3 but nothing will happen.\nWith data in the FIFO, you can issue a write command.\nThe command interface can be used when the signal rdy is 1.\nTo issue a command, set cmd to 0 for a write or 1 for a read, supply the related address on addr and set en to 1.\nIf you issue a write command, the first value written to the write FIFO will be used as data.\nIf you issue a read command, once it has been performed, the value will be returned on the read interface.\nThe read interface consists of rd_valid, which is 1 when there is new data, and rd_data, which is the data. After sending a read command, you wait for rd_valid to be 1 which means the data you requested is on rd_data.\nThe reason for the three independent interfaces it efficiency. The command interface may be ready to accept more commands before the read data is fully ready. The write FIFO may also be willing to accept data while a read is being performed.\nIt is also possible to setup the core to allow it to reorder the execution of commands to improve efficiency. In this case you may be issuing many commands while waiting for the first read command to finish. However, to keep things simple, our interface configuration uses strict ordering (commands executed in the order given).\nWrite and read example\nIn this next section, we will create a small state machine that first initializes the DDR3 to have sequential values stored and then reads them back displaying them on the LEDs.\nHere's the full top level module.\n\nFirst notice that we used the signal mig.ui_clk in the .clk block for our dffs and fsm. This is the clock that the user interface of the memory interface is synchronized to. If you need to use a different clock for the rest of your design, you'll have to implement some clock domain crossing scheme. It is easiest if you can make your design work at the 81.25MHz of this clock.\nIf you look a little lower in the always block, you'll see the default values we assign to the mem_in struct on the mig module. The wr_mask signal is active low, meaning a 0 enables the byte. Since we will be writing all the bytes we can fix it to 0.\nThe other values we don't care about when the enable signals are 0 so they are set to x.\nThe state machine is simple, it starts in WRITE_DATA where it writes a value to the write FIFO. Once the value is written, which is noted by wr_en and wr_rdy both being 1, it switches to the WRITE_CMD state.\nIn this state, it sends the write command. One thing to note is that the address associated with the write is the DDR native address. This means that the first three bits should always be 0 since each DDR entry is 16 bits (the DDR3 on the Au has a 16 bit bus) and each read/write we preform is on 128 bit blocks.\nThis is easy to do by concatenating three 0's onto the end of our address.\n\nThe 128 bit operation size isn't configurable. Xillinx's memory interface uses bursts of 8 to increase efficiency. This is common practice when working with DDR memory. Also note that the DDR interface is clocked at 4x the system clock which means that you complete an entire burst in the span of a single system clock cycle (4x freq * 2 for double data rate = 8 values per system cycle).\nThe burst operation is actually supported by the DDR3 chip itself. The address you give the memory interface is sent directly the the DDR3 chip. If you don't set the last three bits to 0 weird things happen. For writes, these bits are ignored and everything works as if they were 0.\nFor reads, the same 16 bit words in the burst will be read from same 128 bit block but in a different order. For example, if the last three bits are 0, then they are read in the expected order, 0, 1, 2, 3, 4, 5, 6, and 7. However, if you set the last three bits to 2 then it will read them in the order 2, 3, 0, 1, 6, 7, 4, and 5. See page 145 of this document for the full behavior. The memory controller is setup to use the sequential burst type.\nIt is generally best to just ensure these bits are always 0. The reason this feature exists is so that you can get a specific 16 bit value as soon as possible while still reading in a burst of 8.\nNote that we are writing the address' value to each address. In other words, address 0 gets value 0, address 1 gets value 1, and so on. This means when we read these back in order, it'll look like a counter.\nOnce all 256 addresses have been written, it switches to reading. The READ_CMD state issues the read command and then transitions to the WAIT_READ state.\nIn the WAIT_READ state, it waits for rd_valid to be 1. It then uses the read value to set the LED's state.\nFinally, it goes into the DELAY state to waste some time so we can see the LED value before it loops to READ_CMD again.\nIt will continue reading the first 256 addresses of the DDR3 over and over.\nIf you change what value is written in the WRITE_DATA state, it'll change what the LEDs show.\nWith this you should be able to build the project and load it onto your board to see the LEDs counting.\nCaching\nYou may have noticed that this example is incredibly wasteful. We are reading and writing full 128 bit blocks of data when we are only using the first 8 bits.\nThis could be fixed if we just combined 16 values into 128 bit blocks and wrote those to a single address. When we read them we could then store a while line and iterate over each byte before reading in another line.\nFor our trivial example, it wouldn't be too hard to implement this directly. However, for more complex read/write patterns, this could be very difficult to do efficiently.\nLuckily, there is a component in the component library that can help us with this.\nGo to Project-&gt;Add Components and under Memory select LRU Cache.\n\nThis component is pretty complicated but it can take the memory interface from the MIG Wrapper component and give you efficient read and write interfaces of selectable word sizes.\nThis cache is lazy and will only access the RAM when it needs to. That means you can read and write to entries in the cache as much as you want without hitting the memory. It will only access values in the external memory when it needs to free up a cache line or if you try to read values that aren't in the cache.\nThe cache presents independant read and write interfaces. This comes in handy when you have one section of your design doing only reads and another doing only writes. If you read and write the same address in the same cycle, you will read the old value.\nYou can configure the cache to have multiple entries (AKA cache lines). This can save a ton of IO for certain memory access patterns. For example, in our GPU demo project the rasterizer reads values from the Z buffer sequentially and writes values back sequentially at a slightly delayed time down the pipeline. This cache was used with two entries so that the reads and writes would each have their own cache lines to minimize fighting.\nThis cache attempts to approximate a LRU (Least Recently Used) cache policy. This means that when a new cache line is needed, the least recently used (AKA oldest) entry will be evicted.\nThe age of each entry is kept track of by adding 1 to its age counter every time a read/write is performed to any entry. The age counter can saturate if it isn't accessed in a long time.\nEach time an entry is accessed, its age counter is reset.\nThe maximum age can be set with the AGE_BITS parameter. The default value is 3, which gives a maximum age of 7. This way of keeping track of age isn't perfect and if AGE_BITS is too small, in some cases the cache may not act as a perfect LRU. However, this typically isn't an issue as it will always evict the oldest or a max age cache line.\nSetting AGE_BITS to a large value will ensure that the oldest cache line is more likely to be removed but will incur a performance penalty.\nCache interface\nThe interface to the cache is pretty simple.\nThe addresses used are word address. This means you don't need to worry about zero padding anything.\nYou can set the size of the data word with the WORD_SIZE parameter. This can be set to 8, 16, 32, 64, or 128. \nTo write, you simply check wr_ready. If this signal is 1, you can specify a value on wr_data, an address on wr_addr, and set wr_valid to 1. \nTo read, you check if rd_ready is 1. If it is, you set rd_addr to the address to read and rd_cmd_valid to 1.\nYou then wait for rd_data_valid to be 1. When it is, rd_data has your data.\nWhen you perform reads, rd_data_valid is guaranteed to take at least one cycle from the request to go high. However, rd_ready may stay high if it is a cache hit. That means you can stream multiple reads back to back with each result delayed a single cycle if they are all hits.\nCache misses will take longer for rd_data_valid to go high since it will need to actually fetch the value from the RAM.\nIf you have a cache in your design and are also reading values from another piece of your design, you may need to occasionally flush the cache to ensure that the values are actually written to the DDR3. For this, you can use the ﻿_flush_﻿ signal. When ﻿_flush_﻿ and ﻿_flush_ready_﻿ are high, the cache will write all dirty entries to the DDR3 memory.\nCache example\nWith the cache component in our design, we can use it to more efficiently use the DDR3.\n\nThis new design performs exactly the same as before, but now we are using the DDR3 more efficiently. We are using 1/16th the memory as we were before without having to complicate our design. It actually simplifies the design since the writes don't require separate operations to write the data and command.\nNote that ENTRIES is set to 1 since our access pattern is super simple and having more entries won't increase the number of cache hits we have (unless ENTRIES was set to 16 which would mean everything would fit in the cache).\nWe also set AGE_BITS to 1 since there isn't much of a choice which entry to evict with there is only 1.\nIn this super basic use case, the cache component is overkill. However, the tools will optimize a lot of the logic out keeping it fairly efficient.\nMultiple devices\nIt is common to want to interface multiple parts of your design with the one memory interface. To make this easy there is a component in the Components LIbrary called DDR Arbiter under the Memory section.\n\nThis module can be hooked up to the memory interface via the master_in and master_out signals. You then get DEVICES number of similar interfaces on the device_in and device_out arrays that can be hooked up to different parts of your design.\nFor example, in our GPU project, we have a section that writes frames and another that reads the buffer to display the frames on the LCD.\nIt is important to order your devices carefully since the device attached to index 0 get full priority. If it never has idle bus time, it'll starve out all the other devices.\n","id":"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/","title":"DDR3 Memory"},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"body":"In this tutorial we will be making some modifications to the Hello World! project from the last tutorial so make sure you have read the ROMs and FSMs tutorial first. We will be personalizing the greeter so that it first asks for your name and then prints \"Hello NAME\" where NAME is the name you entered. To do this we will need some form of memory and in this case we will use a single port RAM.\nWith the project open from the last tutorial, you can make a copy to edit for this tutorial by going to File-&gt;Clone Project. Enter a new name in the dialog that pops up and click Create.\nThe RAM\nWe need to add the RAM component to our project. Go to Project-&gt;Add Components... and under Memory check off Simple RAM.\nGo ahead and open up simple_ram.v.\n\nNote that this component is written in Verilog instead of Lucid. This is because the tools that actually build your project can be very picky when it comes to deciding if something is a block of RAM or not. By using this module we can ensure that our RAM is properly recognized as RAM. This is important because FPGAs actually have dedicated block RAM (also known as BRAM). If your RAM is big enough, the tools will use BRAM to implement it instead of the FPGA fabric. Using BRAM is both substantially faster and smaller than the FPGA fabric.\nA single port RAM like this works much the same as the ROM from the last tutorial. However, we now have the option to write to an address instead of only reading. To write to an address, we simply supply the address and data to write then set write_en to 1. The data at that address will then be updated to whatever write_data is.\nThe parameters SIZE and DEPTH are used to specify how big we want the RAM to be. SIZE specifies how big each entry is. In our case we will be storing letters and a letter is 8 bits wide so SIZE will be set to 8. DEPTH is used to specify how many entries we want. This will be the maximum name length we can accept.\nThe Greeter (revisited)\nJust like the last tutorial we will have a greeter module. The interface to this module is exactly the same as before but it is now a bit more mannered and will greet you personally.\nLike most tutorials, I'll post the entire module here and then break it down.\n\nNo More ROM\nSo unlike last tutorial, we aren't going to use an explicit ROM module. This is because some convenient features of Lucid allow us to easily use constants with strings as ROMs. Let us take a look at the constant declaration.\n\nHere we are using a function called $reverse(). This function takes some constant expression and reverse the order of the top most dimension of the array. Since strings are 2D arrays with the top most dimension being the letter order, this is exactly the same as typing the string backwards like we did in the last tutorial. This is just a little bit cleaner and easier to deal with.\nBecause strings are 2D arrays, we can simply use HELLO_TEXT[i] to access the _i_th letter of it.\nNote that we are using the @ symbol in place of a name. This will signal to our design where to insert the name that was recorded.\nModules and DFFs\nJust like before we have an FSM state. This will store the current state of our module. IDLE is where we will start and it will initialize everything. PROMPT will print the prompt asking for your name. LISTEN will listen to you type your name and echo it back. Finally, HELLO will greet you personally.\nWe need counters to keep track of what letter in each ROM we are currently positioned.\n\nLet us take a look at hello_count. We need it to be wide enough so that we can index all the letters in HELLO_TEXT. We can get how many letters there are in the string by using the WIDTH attribute. Because HELLO_TEXT is a multi-dimensional array (2D in this case), WIDTH will be a 2D array. The first index of WIDTH is the number of indices in the first dimension of HELLO_TEXT. This is the number of letters. So we simply use HELLO_TEXT.WIDTH[0]. Note that the second dimension has a width of 8 since each letter is 8 bits wide.\nWe can then use the $clog2() function as before to make sure it is large enough to store values from 0 to HELLO_TEXT.WIDTH[0]-1.\nNext take a look at name_count. This will be used to index into the RAM. We can set this width to be whatever we want, but the size of the RAM will grow exponentially with it. I set it to 5 which will allow for a name of 25, or 32 letters long. We will play with this towards the end of the tutorial.\nWe need the size of the RAM to match the size of name_count.\n\nHere we are using the function $pow() which takes two constants and returns the first to the power of the second. In this case, name_count.WIDTH is 5, so 25 is 32. By using name_count.WIDTH instead of typing in 5 or 32 directly, we ensure that if we change the width of name_count then everything will still work.\nThe FSM\nThe IDLE and PROMPT states should look very familiar to the last tutorial so we will jump to the LISTEN state.\n\nHere we wait until new_rx is 1. This signals that we have a new byte to process and that the data on rx_data is valid. We then write rx_data into our RAM. We are writing to the address specified by name_count.q as ram.address is set to this in the beginning of the always block.\nWe also need to send the character we received back so that you can see your name as you type it. We simply set new_tx to 1 and tx_data to rx_data. Note that we aren't checking tx_busy so it is possible this byte will be dropped. However, in practice you can't type fast enough for this to be an issue. If you wanted to make this more robust you would need to buffer the received letters and send them out only when tx_busy was 0.\nThe if statement is used to know when to stop. We have two conditions to stop on. The first is if we simply run out of space. To check of this we use &amp;name_count.q. The &amp; operator here ands all the bits of name_count.q together into a single bit. This tells us if all the bits of name_count.q are 1. The second condition is that the user pressed the enter key. We want to accept \"\\n\" or \"\\r\" as a stop character so we check for both.\nWhen we are moving onto the next state, notice that we reset name_count. This is so that we can start printing the name from the beginning.\n\nIn this state, we are going to use two counters, hello_count and name_count. First we will start by sending each letter of HELLO_TEXT. However, once we hit the \"@\" letter we will send all the letters in our RAM. Once that is done, we will finish sending the rest of HELLO_TEXT.\nOnce everything has been sent, we return to the IDLE state to await another key press to start it all over again.\nThe Top Level\nThe top level tile file is exactly the same as last time since the interface to our greeter module is the same.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nBuilding the Project\nYou should now be all set to build the project. Once the project has build successfully, load it onto your board and open up the serial port monitor to test it out. Note that you have to send it a letter to get it to prompt you for your name.\nHere is some demo output.\n\nNotice that the moment you type 32 letters it cuts you off and says hello.\n\nThe rest of the tutorial is based on the Mojo and ISE.\nFor the Cu, iCEcube 2 shows similar (although somewhat simplified) statistics. It also seems to pack the RAM into BRAM even when it is only 32 entries deep. Changing it to 1024 (making name_count 10 bits wide) entries deep will cause it to use two BRAMs. This is listed under Device Utilization Summary in the build output.\nFor the Au, Vivado also shows similar statistics. Look for the table labeled Report Cell Usage in the synthesis output. You will notice it is using eight of something called RAM32X1S. This is a 32x1bit RAM that fits our small RAM perfectly! It isn't BRAM but a special slice that can be confirmed as a tiny RAM (or generic logic). If you increase the RAM size, you'll notice it switches to using RAMB18E1 which is larger more flexible BRAM. See this document for more info.\n\nOnce you've played with it a bit, look back at the output from the build. If you scroll up a bit from the bottom you should find something that looks like the following.\n\nThis tells you how much of the FPGA your design is using. The two most important numbers are typically the slice register and slice LUT usage. You can see in our case we are using about 2% of the space in the FPGA!\nThe reason we are looking at this is to see how the RAM was implemented in the FPGA. Remember the FPGA has blocks of RAM that we can use? These are shown under Specific Feature Utilization. RAMB16BWER and RAMB8BWER are the two types of BRAM we can use. But wait! We aren't using any! This is because our RAM is too small to warrant its own BRAM.\nIf we go back to where name_count is declared and make it bigger, we can increase the RAM size.\n\nIf you build the project again with the bigger RAM, you will get the following.\n\nNotice that we are using a RAMB8BWER now. Also notice that the number of registers and LUTs we are using went down. This is because we are using the BRAM instead of the general fabric.\nThis is why it is important to use the simple_ram component that implements the template the tools look for. If we used a different coding style the tools may not recognize that it could use BRAM and we could quickly fill up the FPGA with a large RAM that would otherwise take very little space.\n","id":"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/","title":"Hello YOUR_NAME_HERE"},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"body":"This tutorial will introduce the Io Element and walk through some basic examples to get your feet wet. If you haven't already, I highly recommend reading through the Your First FPGA Project and synchronous logic tutorials before continuing.\nCreate the Project\nIn Alchitry Labs, open the new project dialog (File-&gt;New Project...) and name it whatever you want. I named mine Io Element Demo. Before you click Create, select IO Element Base from the From Example drop-down menu. This will give you a bare bones base to start working with the element.\nThe only difference between this project and the standard base project is that this has the connections to the Io Element already defined for you.\nLet's take a look at the top file. You can use the tabs to select the version for your board.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nYou can see we have a handful of inputs and outputs named io_*. These are the Io Element specific signals.\nio_led connects to the 24 LEDs. This signal is organized as a 2D array to make it easier to access the three groups of 8 LEDs. For example, if you want to get the first group of LEDs you would use io_led[0] and if you wanted to get the third LED in the first group, you would use io_led[0][2].\nBecause io_led is a 2D array, when we set all the LEDs to 0, we have a little fancy syntax.\n\nWe need the dimensions of our constant to match io_led. In this case, io_led is a 3 by 8 array. We use 8h00 as the base constant which is a single dimensional array of width 8. The x{} syntax takes the outermost dimension and duplicates it. If we wrote 3x{8h00}, we would end up with 24h000000 since the outer most dimension is 8. This isn't what we want as it is still a 1D array. Instead, we need to first create a 1 by 8 array and duplicate it three times. To do this we use the array building syntax, {}. The value {8h00} is a 1 by 8 2D array. We then use 3x{{8h00}} to get a 3 by 8 array of all zeros. Note that we could have also written {8h00, 8h00, 8h00}, but the duplication syntax is a bit cleaner.\nio_seg and io_sel are used to control the 4 seven-segment LED displays. They are active low (0 = on, 1 = off) and they will be covered in more detail later.\nio_button is simply the 5 push buttons. io_button[0] is up, io_button[1] is center, io_button[2] is down, io_button[3] is left, and io_button[4] is right.\nFinally, io_dip is the 24 DIP switches. This is arranged in a 2D array exactly the same way as io_led.\nFaking Pull-downs on the Cu\nIf you are using a Cu then you may have noticed your top module looks a little different than the Au. There are two modules, pull_down and pull_down_2d, instantiated and the io_button and io_dip signals are of type inout not input.\nThese module fakes pull-down resistors on the DIP switches and buttons by pulling the pin low for a very short amount of time, releasing it, waiting a short period, then sampling the input. \nThis is done because the Io Element was originally designed to use the pull-down resistors embedded in the FPGA. However, the FPGA on the Cu only has internal pull-up resistors.\nIf you take a look at the schematic, you'll see that the buttons and DIP switches are connected to +3.3V via a 330 ohm resistor. This will prevent any damage to the FPGA if the button or DIP switch is active and it tries to pull the pin to 0V.\nThis method of faking the pull-down resistor works because there is some amount of capacitance on each input pin. Some of it is internal to the FPGA and some is from the board. When the switch isn't active, the pin is normally floating (not being pulled to specific voltage). The FPGA the forces it to 0V and releases it. Since nothing is trying to move it, the only sources to change the voltage are small amounts of leakage in the FPGA and noise. These both take much longer than a couple clock cycles (30ns) to significantly affect it. Therefore, when we read the state of the pin right after pulling it down, it will still be 0 if nothing tried to change it.\nIf the button or switch is active, when the FPGA pulls the pin down, it will still get it down. This is thanks to that resistor. However, once the FPGA lets go of the pin, the parasitic capacitance will start to charge. We found it takes about 10ns-20ns for it to reach a '1' state (3.3V) after letting go. This is why we wait for 30ns before sampling the pin.\nBy repeating this process over and over, we can simulate having a normal pull-down resistor.\nThanks to this module, you can ignore that any of this is even happening and simply use its output as you would the input with a pull-down.\nThe only difference is instead of using io_dip or io_button you use dip_pd.out and button_pd.out respectively.\nLogic Gates\nThe first example we will work though is connecting a few DIP switches to the LEDs through logic gates. If you aren't familiar with what logic gates (AND, OR, NOT, XOR) are, you should take a look at the digital logic tutorial.\nIn this example we are going to start by making the first LED light up when switch 0 and 1 are turned on.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nTake a look at the last line. First we need to index the first LED. The first LED is in the first group (group 0) and is the first in its group, so we used the index [0][0]. We then index the first and second switches in the same manner. Finally, we use the &amp; operator to AND the bits together. &amp; is the bit-wise AND operator.\n\nNote that for the Cu this line will look a little different since you need to use the output from the pulldown modules.\n\n\nNotice that I didn't change the line where we assigned all LEDs a value of 0. This is because the assignment to the first LED will simply be overruled by our second assignment. It's good to remember that while always blocks have a sequential order of precedence, they aren't actually sequential. This means that io_led[0][0] will only have the value of the second assignment and it as if the first assignment never happened. The tools will simply wire an AND gate to the two switch inputs and the led output.\nGo ahead and build/load the project onto your board. Try playing with the first two switches. If either switch is off, the LED should be off. Only when both switches are on should the LED turn on.\nYou can now go back and replace the &amp; operator with the operators for OR, |, XOR, ^, and XNOR, ~^. Play with the switches and make sure you understand the different operators.\nPractice: Add two more lines to the always block so that the first LED of the first group lights up as before, the first LED of the second group lights up when either (OR) of the first two switches in the second group are on, and the first LED of the last group lights up only when exactly one (XOR) switch of the first two switches in the last group are on.\nBit-wise\nThe operators we have talked about so far are all bit-wise operators. That means that they operate on two equally sized arrays and will perform their operation on each pair of bits individually.\nFor example, if we want to light up the LED in the first group only when the corresponding switch in the first and second groups are both on we could do the following.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nNote that io_led[0] is an array of width 8, and so is io_dip[0] and io_dip[1]. This single statement will create 8 individual AND gates.\nYou can again use the OR, XOR, and XNOR operators in the same way.\nWe can also chain multiple gates together. For example, what if we want the LED to light only when the corresponding switch in all three groups is on?\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nBit-wise operators are evaluated from left to right so in this case io_dip[0] will be ANDed with io_dip[1] and the result will then be ANDed with io_dip[2]. In the case of AND gates, the order actually doesn't matter. However, if you start mixing and matching operators the order can matter. You can also use parenthesis to make the order you want things evaluated explicit.\nPractice: Use two bit-wise operators so that the LEDs in the first group light up when the corresponding switch in the third group is on or both switches in the first two groups are on.\nReduction Operators\nReduction operators are similar to the bit-wise operators but they work on a single input array and always output one bit. You could say they reduce an array to a single bit. \nYou can think of these operators as one huge logic gate with many inputs. The number of inputs is equal to the size of the array the operator is used on.\nIn our example, we want to turn the first LED on only if every switch in the first group is turned on. To do this we can use the &amp; reduction operator.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nThis is equivalent to ANDing each bit individually as shown below.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nHowever, as you can tell, the reduction operator is much more compact.\nIt is even possible to use the reduction operators on multi-dimensional arrays. For example, if we want the LED to turn on when any switch is on we could use the following.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nI tend to use the AND version to easily detect if a signal is at its maximum value (all 1's). The OR version basically tells you if the value is not 0 and the XOR version will tell you if there is an odd number of 1's.\nEach of these operators can also be negated with the bit-wise negate operator, ~. You can simply place this in front of the expression to get the NAND, NOR, and XNOR equivalents.\nPractice: Using your newly acquired bit-wise and reduction operator skills, make the first LED light up when any switch in the third group is on, or all the switches in the second group are on and the first group has an odd number of switches on. This is a fairly tricky challenge but everything you need has been mentioned in this tutorial. If you get stuck feel free to head over to the forum for some help.\nMath\nThis part of the tutorial we will look at addition, subtraction, and multiplication. We will be performing different operations using the DIP switches as our number inputs. This means everything will be in binary, so if you aren't familiar with binary check out the encodings tutorial.\nLet's start with some addition. We will add the binary values from the first and second groups of DIP switches.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nBecause the result of many of our operations will be more than 8 bits, we can create a signal, result, to hold the value. You can think of signals (sig) simply as wires. They don't add any cost to your design as they simply define the connection from something to something else.\nWe set result to be the output of our addition. The addition of two 8 bit numbers results in a 9 bit result. This is because an 8 bit number has the range 0-255 so adding two of them together will have the range 0-510, which requires 9 bits to represent.\nWe then take result and connect it to the LEDs so that we can see all 24 bits. However, this requires the use of the helper function $build(). This function takes a 1D array as the first argument and splits it into a multidimensional array. In our case we pass 3 as the second parameter which causes it to split the 24 bits three ways into a 3x8 array.\nYou can pass $build() more than one dimension to split. For example, $build(result,3,2) would create a 3x2x4 array.\nThe helper function $flatten() does the opposite. It takes a multidimensional array and flattens it into a 1D array.\nBuild and load your project to your board. Congratulations! You've just build a very basic calculator. To make sure everything is working properly, let's calculate 2+2. 2 has the binary representation of 0000 0010. Set both groups of switches to 2. The result on the LEDs should be 4, or 0000 0100.\nNow change the + to a - to subtract the first switch value from the second.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nWhat happens when you set the second switch to 0 and the first to 1 so you're performing 0-1? All 24 LEDs turn on! You can interpret this answer in two different ways. The first is that the result simply underflowed and restarted back at the maximum value. The second way is to assume the number is a 2's complement representation of -1. Both are valid interpretations and what you use will depend on the scenario.\nEven though when the number is negative all 24 LEDs light up, you only need 9 bits to represent any 8 bit by 8 bit addition or subtraction. This is because when the value would be negative, dropping the leading 1's doesn't change its value.\nFinally, change the - to ***** to test out multiplication.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nYou should notice that multiplying two numbers can generate a much bigger result than the operands. The result will generally be twice the size of the inputs. So in our case, up to 16 bits wide.\nMultiplication is much more expensive to perform than a simple addition or subtraction. This is because a multiplication is essentially many additions. Multiplying two 8 bit numbers will result in a series of eight additions.\nAlso note that we didn't talk about division. This is because there isn't a division operator. Division is much more complicated than even multiplication and there are some trade offs you need to decide for your design so a default option doesn't make sense. If you don't need real division, you can approximate it by multiplying with fractions.\nTo approximate division, you can first multiply by any number and then shift the value to the right. Shifting to the right effectively divides by a power of two (rounding down). For example, if you want to divide a number by 3, you could multiply by 85 then shift right 8 bits. This will effectively multiply your value by 85/256 = 0.33203 which is pretty close to 1/3. If you need higher precision, you can use more bits. For example, you could instead multiply by 21845 and shift 16 bits to the right. This is effectively multiplying by 0.333328, but 16 bit multiplication is significantly more expensive than 8 bit.\nSeven-Segment Displays\nThe Io Element has four seven-segment displays that are multiplexed. This means that we have two groups of signals, the first, io_seg, connects to the segments of each display.\n\nNote that even though we call these seven-segment displays there are actually 8 LEDs in each one because of the decimal point.\nAll four displays have all their segments connected together. That means if you apply power to segment 0, all four displays segment 0 receive power! This is done to save on the number of pins required to drive the displays. However, it means that we need a way to disable all but one display so that we can show a unique number on each one.\nThis is where the second group of signals, io_sel, comes in handy. These are used to select which digit is active. Typically, only one digit will be active at any time. If you have more than one digit active, all active digits will show exactly the same thing since their segments are wired together.\nThe way we are going to display four unique numbers is by cycling which digit is active really fast. If we can do this fast enough, our eyes can't tell and it looks like all four digits are always on.\nHowever, before we do that, let's play around with the displays a bit to get familiar with how they work.\nIndexing Segments\nWe are going to setup some modules so that we light one segment at a time. To do this we will be using some of the components built into Alchitry Labs.\nClick Project-&gt;Add Components.... Under Miscellaneous check off Counter and Decoder. Click Add to add them to your project.\nYou can now find the source for these components under Components in the left project tree in Alchitry Labs. Note that while you are free to look at the source, components are read-only (no editing!). If you ever want to modify a component, simply copy and paste the code into a module of your own.\nIt's always a good idea to check out the source and read the description of the component. Many components have parameters that you can set to customize them for your use. We'll be doing exactly that with these two.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nHere we add the counter and decoder modules to the top level module. The counter component requires both a clock and reset signal so we have it in the nested in both the .clk and .rst connection blocks. On the other hand, decoder doesn't require either, so it is outside of both.\nThe counter is simply a counter. It will output a value starting from zero and increment to whatever the maximum value you set is. After that it will reset back to zero. It is also possible to configure it to count down from the max value to zero.\nThe counter has four parameters you can set to get it to operate how you want, but here we only need to change two. SIZE dictates how wide the output of the counter is. In this case we need it to count from 0 to 7 for all 8 segments of our displays. Three bits is exactly 0 - 7. If we wanted to count to a value that wasn't conveniently a power of 2 minus one, we could set the parameter TOP to control its maximum value.\nThe DIV parameter is used to set how many bits to use to divide the clock. By setting this to 25 (or 24 on the Mojo), the counter will only increment its output every 225, or 33,554,432, clock cycles (16,777,216 on the Mojo). The clock runs at 100MHz (100,000,000 cycles per second) on the Au and Cu and 50MHz (50,000,000 cycles per second) on the Mojo. If the counter incremented every clock cycle it would be way too fast for us to see.\nThe decoder is a binary to one-hot decoder. If you need a refresher on one-hot representation check out the encodings tutorial. Basically, the decoder will take our three bits and convert it to eight bits. If the input is 0, then the 0th bit of the output will be 1 and everything else will be 0. If the input is 4, the 4th bit will be 1 and everything else will be 0. This allows us to use the binary counter to light individual LEDs.\nNote that the output of the decoder is 2^WIDTH bits wide. So in our case, 2^3 = 8 bits wide.\nNow we can hook up the modules.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nWe feed the binary counter value into the decoder and the output of the decoder to io_seg. Note that io_seg and io_sel are both active low. This means that when the signal is 0, it is active. To turn only one LED on we need to invert the output of the decoder with the bit-wise inversion, ~, operator. This will make the signal zero-hot.\nAlso notice we need to set io_sel to 0 so that the LED segments are selected. Setting all of them to 0 will turn them all on.\nBuild and load your project to your board. You should now see the segments of all 4 displays lighting one at time. Try to light only a single display by setting io_sel to ~4h1 instead.\nNow what if we wanted to cycle through each digit? We need another counter that increments each time the original counter overflows. That way once each LED of a specific digit is lit, the next digit is selected. However, we don't actually need another counter to do this! We can simply make our existing counter 2 bits wider. By adding extra bits, these will increment only when the lower three bits overflow, creating the behavior we want.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nHere we increase the SIZE of ctr to 5. We also add another decoder with WIDTH of 2. We need 2 since we have 4 digits to select from and an input of 2 bits gives us possible values of 0-3.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nWe can select the lower three bits of ctr.value by using the bit selector [2:0]. This says we want bits 2 down-to 0 inclusive. We can do the same thing for the upper two bits.\nBuild and load your project again. This time you should see only one digit and one segment lit at any time. Once each segment of a digit has been lit, the next digit is selected.\nYou may have also noticed that the segments are now much brighter. This is because the resistor that is in-line with the LEDs is sized for a single LED, not all four. When you have all four on at the same time, the current is split between them making them all dimmer.\nGetting Fancy With Numbers\nLighting up the segments is super cool and all, but it's much cooler to actually show some numbers.\nBefore we jump into multiplexing, we need a way to convert a number into the segments that need to be lit to represent that number. To do this we can use a look-up table.\nCreate a new module called seven_seg and add the following.\n\nThis module will take a binary number, char, and output the segments, segs, that need to be on.\nThis module uses a case statement. Case statements are equivalent to a bunch of if statements. One of the entries will be selected based on the value of char. If char is 1, then only the block after the 1: is used. If none of the blocks match, the default: block is used. The default block is optional, but it is generally a good idea to include it even if you think you have all the cases covered.\nIf char is an invalid number (not 0-9), then all the segments will be off.\nTo test out our look-up table, let's connect it to our counter.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nWe need ctr to count from 0-9 so we set TOP to 9 to cap its value. Also, we need to change SIZE to 4, as we only need 4 bits to represent 0-9.\nBecause we don't need the decoders anymore, we can remove them and add our seven_seg module.\nFinally, we need to wire it up the LEDs\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nio_sel is set to ~4h1 so that only the right most digit is on.\nBuild and load the project onto your board to make sure the first digit is correctly counting from 0 to 9.\nNow we need to make a module that will take four values in and display them on all four digits instead of only using one.\nCreate a new module called multi_seven_seg and add the following code.\n\nThis module is parameterized so that it could be used to drive more or less than 4 digits, but the defaults are set to work well with our project.\nThe constant DIGIT_BITS is the number of bits we need to cover all DIGITS number of digits. We use the function $clog2() which computes the ceiling log base 2 of a constant value.\nWe only want the counter to count from 0 to DIGITS-1 so we set the TOP parameter accordingly.\nDIV is used so that we don't switch between the digits too fast. If we switch too fast, the transistors that drive the LEDs don't have time to fully turn off, and we get bleed between digits.\nThe way this module works is ctr is used to select the active digit. The value from values is then selected, decoded, and sent to the segments of the LEDs displays. The binary value of the active digit is then decoded into a one-hot value as before and used to select which digit is on. Because ctr keeps cycling the active digits, all the displays will appear on.\nWe can tweak DIV, but if it is set too high, we will start to see the digits flicker. If it is set too low, we will see bleeding between digits.\nLet's test out this module by feeding it some constant numbers to show.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nWe don't need the counter or the seven_seg modules from before, but we need the multi_seven_seg now.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nOn the line starting with seg.values, we feed the values to display into the driver.\nBuild and load the design to your Mojo to make sure each digit is displaying the correct number.\nDecimal Counters\nAlright, now that we have a way to show a value on our display, let's make the display count! For this we need a decimal counter. We could use a regular counter and convert the binary value into four decimal values, but that's a bit trickier. Instead, we will create a special counter that counts in base 10.\nTo do this we will create two modules. The first will be a single digit counter and the second will chain these together for a multi-digit counter.\nCreate a new module called decimal_counter with the following code.\n\nOur decimal counter has an input inc that is used to signal when the value should be increased. When the digit is about to overflow to 0, the flag ovf is set to 1. The current value of the counter is output on value.\nWe now need to chain these together to make a multi-digit counter.\nCreate a new module named multi_dec_ctr and add the following code.\n\nHere we take DIGITS decimal_counter modules and chain them together. Each counter inc signal is connected to the previous counter's ovf signal. This means that once a counter overflows from 9 to 0, the next one will be incremented. Of course, the first counter doesn't have a previous counter's ovf signal, so we use an external increment signal instead.\nWe use the bit selectors [1+:DIGITS-1] and [0+:DIGITS-1] to select bits from dctr.inc and dctr.ovf. What [1+:DIGITS-1] means is starting from bit 1, select DIGITS-1 bits going up. This is an easy way to select a specified number of bits given some start index. You can use -: instead of +: to select bits going down from the given start index instead of going up.\nAll that is left now is to generate the inc signal and connect the counter to our display driver.\nThe inc signal needs to be a pulse that stays high for only one clock cycle every time we want to increment our counter. To create this we are going to use the counter component as before, but there is a problem with this. If we create a counter that only outputs one bit, the bit will be high for have of the time and not just one cycle at a time. To fix this we will use another component, the Edge Detector.\nGo into the component selector and add the Edge Detector to your project. You can find it under Miscellaneous.\nThis component takes a signal and sends out a pulse when it detects a rising, falling, or either type of edge. You can configure which edges you care about.\nLet's add all the modules to mojo_top.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nFor the edge detector, we set RISE to 1 and FALL to 0. This means we will generate a pulse only on rising edges.\nWe now have the multi-digit driver, the multi-digit counter, and a way to generate a pulse from the counter.\nLet's wire them all up!\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nThe value from the counter is fed into the edge detector. The pulse from the edge detector is fed into the decimal counter. The decimals from the decimal counter are sent to the multi-digit driver. Finally, the multi-digit driver is connected to the actual display.\nThis is what is so cool about FPGAs. Each one of these modules operates completely independently of one another since they all exist in hardware!\nThis example is fairly complicated, but by breaking down the problem in little chunks (modules) we were able to create a design that is relatively easy to understand and flexible for future upgrades.\nNow for the moment of truth, build and load the project onto your board! With any luck, you should see the seven-segment display counting!\nIf you want to make it count slower or faster you can mess with ctr's DIV value.\n","id":"https://alchitry.com/tutorials/lucid_v1/io-element/","title":"Io Element"},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"body":"These are the original Lucid V1 tutorials for the Mojo.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/","title":"Mojo"},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"body":"Welcome to the Analog Inputs Tutorial! In this tutorial, you will learn how to read the analog inputs on the Mojo. To demo this, we will modify the AVR Interface Project so that the analog values are displayed on the LEDs.\nReading a Channel\nWe will start off by first reading only the A0 input and displaying its value on all eight LEDs.\nFirst, make a new project based on the AVR Interface Project. This project already has the avr_interface module added and the basic connections wired up.\nADC to LEDs\nWe are going to create a new module named adc_to_leds. But before we do that, add the Pulse Width Modulator component to your project. It can be found under LED Effects in the Component Selector. We will be using this to fade the LEDs based on the voltage read.\nWith all the components we need added, create a new module named adc_to_leds and fill it with the following.\n\nThe way the ADC interface works is that we specify a channel we want to sample on channel. Then when a new sample is ready, the new_sample signal will go high. This signals that sample and sample_channel have valid data. The signal sample_channel specifies which channel the sample came from. This is important because as you start switching the channel to sample from, you are not guaranteed that the next sample will come from the new channel if a sample was already being read from the old channel. In this particular case, we are only ever reading one channel so all the samples must have come from channel 0.\nNote that the channel number corresponds to the analog input number. In other words, channel 0 is A0, channel 8 is A8, etc. If you set channel to an invalid number (like 15), the ADC is disabled and no channels are sampled. This is useful if you don't need the ADC running as it frees up the AVR to send and receive USB data faster.\nThe PWM module is pretty simple. Since we set the WIDTH to 10, we specify a 10 bit value on pwm.value and set pwm.update to 1 whenever there is a new value. The output, pwm_pulse, is then a PWM signal with a duty cycle of pwm.value/210.\nFinally, we simply duplicate the pwm output to all LEDs.\nConnect it Up\nWe now need to add our new module to mojo_top.\n\nWe also need to connect it up.\n\nNote that the lines where avr.channel and led were previously assigned should be removed.\nYou should be able to build the project and load it onto your Mojo. With the project loaded, if you take a potentiometer and connected one end to +V (3.3v), the other to gnd (0v), and the arm to A0 then you should be able to use the potentiometer to control the brightness of the LEDs.\nMultiple Channels\nThis is super cool and all, but we have 8 inputs so it feels like a waste to only use one. Since there are conveniently 8 analog inputs and 8 LEDs, lets show each analog input on its own LED.\nTo do this we only need to change the adc_to_leds module.\n\nThe analog input channels are slightly strange on the Mojo in that A2 and A3 don't exist. To compensate for this, we use the constants LED_TO_CHANNEL and CHANNEL_TO_LED to map from our LED indices (0 to 7) to the ADC channel indices. Notice that there are 16 possible values for the channel, but we are only using 8 so we filled the remaining slots with 4bx. This is because these values should never be used anyways and it gives the tools freedom to choose whatever makes our design simplest.\nNotice that we now have eight pwm modules as pwm is now an array. This is because we want a different PWM output for each of the eight LEDs.\nRemember that the PWM modules only update their values when update is 1. This allows us to set all the modules to have the same value input and only set the corresponding module's update to be 1 when we have a new sample.\nLine 26 has some interesting syntax. We are duplicating an array of sample 8 times. This builds a two dimensional array with dimensions of 8 by 10. If instead we simply did 8x{sample} we would have a single dimensional array of 80 bits wide and the dimensions wouldn't match pwm.value. The reason this works is because {sample} is a 2D array with dimensions of 1 by 10. The 8x{} part then duplicates the outermost dimension making it 8 by 10.\nEach time a new sample comes in, we increment the ch counter. This is so that we continue to sample all the channels in a round-robin fashion.\nIf you now build and load your project, you should see all eight LEDs working independently. You can test each one by plugging in your potentiometer to each channel.\nThat's it for this tutorial. You should now know how to make use of the analog inputs on the Mojo. A good challenge would be to modify adc_to_leds so that instead of using PWM to display the analog values, you set a single LED on to show which channel has the largest value. For example, if A1 has the highest value, then LED[1] should be lit and the rest should be off. You should have all the tools for this if you've followed the tutorials up to this point. If you need help you can always visit our forum.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/","title":"Analog Inputs"},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"body":"In this tutorial we will create a super basic CPU that you can then write some assembly for. You can then go brag to all your friends what a badass you are.\nWhat is a CPU?\nIf you are reading this, there is an excellent chance you already have a decent idea what a CPU is. However, since we are going to be making one, we need to have a clear idea of exactly we are going to be making.\nIn its most abstract form, a CPU is a circuit whose behavior is determined by the code it is fed. This way, the same circuit can perform a completely different task simply by changing some values in a ROM. In general, a CPU will also have some form of memory to perform work and they all need a way to input and output data (if you don't have any IO, you can't do anything useful).\nA CPU is some circuit that has a stream of instructions fed to it and those instructions determine what it will do. But what sort of operations do we need?\nInstruction Set\nA CPU's instruction set is the set of instructions that the CPU understands. It is the language of that particular processor. Each CPU has its own instruction set, however, many CPUs share the same, or very similar, instruction sets. For example, x86 is the name of Intel's instruction set for their 32 bit processors. By keeping the instruction set the same between generations of processors, the exact same software can run on different processors without needing to be modified.\nFor our super basic CPU, we will be making up our own instruction set (because we are cool like that). Our set will be pretty minimal (16 instructions) and will consist only of the essentials.\nThere are two important sizes in a CPU. The first, and the one you hear about the most, is the data path size. This determines the largest values that can be operated on at any time. When you hear that a CPU is 8 bit, 32 bit, etc., these are the data path sizes. An 8 bit processor can only operate on 8 bits at a time while a 64 bit processor can operate on 8 times that. The other important size is the instruction size. Depending on the CPU these may or may not be the same size and depending on the instruction set, instructions may actually have varying lengths!\nFor our CPU, we are going to make it 8 bit with a 16 bit instruction size. This means all our instructions need to be encoded with 16 bits. By having a fixed instruction size, it is easy to know where the next instruction starts without having to inspect every instruction before it.\nMemory\nBefore we dive into what our CPU will actually do, we need to figure out how data will get in and out and when it is in, how do we work with it? CPUs typically have a tiny bit of super duper fast memory built into them. This memory is known as the CPU's registers and serves as the working memory of the CPU. Our CPU will only be able to perform operations directly on its registers. So if all the work happens on these registers, how do we process outside data? We need a way to load data into a register and output the value of a register. The interface we will use will be basically the same as the RAM interface in the Hello YOUR_NAME_HERE tutorial. We will specify an address and data (for a write) or an address and we will receive data (for a read). This will be covered a bit more later. For now, just know that we have internal memory called registers and we will have a way to load and store values to/from the outside world.\nOperations\nWe now need a way to encode the instructions for our CPU. We are going to fit each instruction into 16 bits. The first four bits will be to encode what the operation is (since we will have 16 operations), and the remaining 12 bits will be unique to each operation. The four bits that encode the type of operation are known as the opcode.\nBecause some of our instructions will require 3 arguments, that leaves 4 bits for each argument. If each argument is the address of a register, we can haven at most 16 registers without increasing our instruction size.\nNOP\nWhat is the most basic operation you can think of? If you thought of nothing, you win! The do nothing instruction, or no operation (often abbreviated to NOP), is going to be our first instruction.\n\nNOP0\n\nThis instruction does nothing so we can just fill the 12 bits with 0.\nLOAD and STORE\nAs you should recall from only a few lines up, all CPUs need some form of IO. If you can't input data and output results, the CPU would be useless. It would be like a fully paralyzed person with no senses. They may have super interesting thoughts, but no one would ever know. We can then create two more instructions, LOAD and STORE for loading a value (input) and storing a value (output) respectively.\n\nLOADDESTADDROFFSET\nSTORESRCADDROFFSET\n\nSince the loads and stores need to provide both a value and an address, we need two arguments. The DEST argument is the register that will get the value from a LOAD. The SRC argument is the register whose value will be output. The ADDR argument is the register whose value should be used as the address. Finally, OFFSET is a constant that will be added to the value of the ADDR register to get the address. This offset can be convenient to have, but you don't really need it. I added it because there were 4 extra bits we could do something with.\nSET\nWe will commonly need to set the value of a register to some constant. The SET operation will let us do that.\n\nSETDESTCONST\n\nHere DEST is the register that will be set and CONST is the 8 bit value to set it to. Keep in mind that since we are making an 8 bit processor, the registers are 8 bits wide.\nLT and EQ\nWe will likely want to be able to compare two different values. To do any comparison, we only need two operators, less-than (LT) and equal (EQ). If we then wanted to perform a greater-than we could simply use less-than and flip the arguments. Less-than or equal to can be achieved by using both.\n\nLTDESTOP1OP2\nEQDESTOP1OP2\n\nIn the LT case the DEST register will be 1 if OP1 is less than OP2 and 0 otherwise. EQ is the same, except it checks for equality.\nBEQ and BNEQ\nTypically, a program will execute instruction after instruction. However, it can be really powerful to be able to control the flow. This is where branching instructions are useful.\n\nBEQOP1CONST\nBNEQOP1CONST\n\nIf register OP1 is equal to the value CONST then the BEQ instruction will skip the instruction following it. Otherwise, the program will continue as normal. BNEQ does the same thing but skips is they are not equal.\nThese instructions allow you to create if statements in your code.\nThe ALU\nCPUs commonly need to manipulate the values in the registers. Operations like addition, AND, OR, bit shifting, etc. are all typically contained in something called the ALU or Arithmetic Logic Unit. These types of instructions will make up the remainder of our instruction set.\n\nADDDESTOP1OP2\nSUBDESTOP1OP2\nSHLDESTOP1OP2\nSHRDESTOP1OP2\nANDDESTOP1OP2\nORDESTOP1OP2\nINVDESTOP10\nXORDESTOP1OP2\n\nADD and SUB add or subtract OP1 and OP2 and store the result into DEST.\nSHL and SHR shift OP1 to the right or left by OP2 bits and store the result into DEST.\nAND, OR, and XOR perform their respective bit-wise operations on OP1 and OP2 and store their result into DEST.\nINV does a bit-wise inversion of OP1 and stores the result into DEST.\nThe Program Counter\nWe are going to put all the instructions for whatever program we write into a ROM. The ROM will need an address in order to know what instruction we need. This address will be specified by the program counter. For our CPU, we will use register 0 as our program counter. This will allow us to directly manipulate the flow of program by messing with its value.\nThe CPU\nNow that we have all the pieces, let's take a look at the actual module. You should create a new project based on the Base Project and create a new module named cpu.\n\nThe astute observer will notice that the entire CPU file is less than 100 lines long! It's pretty amazing how much functionality you can get with such a simple design.\nTake a look at the global block at the beginning of the file.\n\nThis block allows us to define constants that can be used in any Lucid file in out project. This is helpful since we will be using these in our instruction ROM. The name you give a global block is the namespace that its contents live in. To access a globally defined constant, you use the syntax Namespace.CONST. The name of a namespace needs to start with a capital and contain at least one lowercase letter.\n\nOur CPU's registers are nothing other than a set of dffs. We use a 2D array of 16 by 8 since we want 16 registers of width 8.\n\nWe can't forget out program ROM! We will cover the actual ROM in a bit. However, it has only two ports, address and inst. It simply outputs the corresponding instruction on inst for the given address.\n\nThese signals aren't strictly needed, but they help make the code a bit more readable by allowing us to rename parts of the instruction.\n\nHere is the actual assignment. The way we defined our instruction set, the opcode is always the 4 most-significant bits. The other four signals are just the common names for the different parts of the instruction.\n\nIn the beginning of an always block, it is a good idea to assign defaults at the top so you don't have to worry about assigning a value in every possible conditional branch. In this case, by default we don't want to perform a read or write and if we aren't performing a read or write we don't care what the values of address or dout are.\n\nWe decided to use the first register as our program counter. This means we are going to feed its value into the instruction ROM. We also need to increment it each cycle so that our program continues to execute. Since the line to perform the increment comes before the code to execute the instruction, if the instruction writes to the first register it will have precedence over the increment. This will allow us to manipulate the program counter with our code.\n\nHere we execute the instruction. You may be surprised how simple this is. We simply use a case statement to select what behavior we want.\nThe Program\nNow that we have a CPU, we need to write a program for it. Before getting deep into it, let's get something running to make sure everything is working.\nCreate a new module instRom and paste in the following.\n\nThis code will slowly increment a counter and output it to address 128. We will go over the details of it a bit later, but first let us hook it up to the LEDs.\n\nIn mojo_top we need to add the CPU and a dff to hold the value for the LEDs. When the CPU writes to address 128, we can save the value in the dff and connect that to the LEDs. This way, the CPU can directly control the LEDs by writing to this address!\nWhy use address 128? In practice could have chosen any address, but the reason we used 128 instead of say 0, is because the first half of the address space is typically reserved for RAM. Our CPU doesn't currently have access to RAM, but we could hook it up to some. Using a memory interface like this to perform IO is known as memory mapped IO. This is how basically all CPUs perform IO. If you've ever worked with AVRs and written something like PORTA = 0x5A;, PORTA is actually just a special memory address that instead of writing to RAM writes to the IO port (exactly what we are doing here).\nGo ahead and build/load the project to your Mojo. The LEDs should now count slowly.\nThe Assembler\nWhile we could write the instRom module ourselves to create programs, but it becomes a huge pain to edit them. If you want to insert an instruction you have to renumber everything. It is a nightmare. Luckily we don't have to! I wrote a basic assembler for us (you're welcome &lt;3). You can find the assembler code on GitHub. If you just want to download the runnable JAR you can click here. It should run on any OS with Java 1.7.\nI used ANTLR to parse the assembly. This is an awesome library that makes writing something like this pretty easy.\nTo use the assembler, use the following command.\n\nIt should then turn your assembly in assembly-file.asm into the instRom module, or tell you what's wrong with your file.\nHere is the assembly file I used to generate the ROM from earlier.\n\nThere are two types of lines that the assembler will accept, labels and instructions. A label is simply a name followed by a ':'. These act as constants that will be replaced with the line number of the instruction following it. For example, the label begin in the above code will have the value 0 since it is before the first instruction. These make it easy to reference instructions without having to relay on fixed numbers (to avoid the insert problem).\nInstructions consist of the name of the opcode followed by a list of comma separated arguments. Constants can either be a decimal number or a label. Registers take the form R# where # is the register number.\nWriting Code\nWhile our CPU only treats R0 specially (it's the program counter), it is helpful to assign special roles to some registers for use in our programs. For example, for many instructions it can be handy to have a temporary register to load a constant into. I used R1 for this purpose. The other special register I used was R15 to store the return address from a function call (more on this later).\nThe goal of this program was to count and output the count to address 128. Since we have no external RAM, all our memory needs to fit in the 16 registers. I chose R2 to store our primary counter.\nThe first line initializes R2 to 0, we then enter the main loop. The main loop starts by writing R2 to address 128. R1 is used to store the address 128 used by the STORE instruction. We then increment R2 by one. Again, we use R1 to store the constant 1 to add to R2.\nWe could simply loop here, however, it would count way too fast for us to see on the LEDs. So we need to create a delay function. A function is just a block of code that can be called from anywhere and will return to where it's called from. We use R15 to specify the address we want to return to. In our case, we cheat a little bit and set R15 to the beginning of our loop instead of the instruction after the call to delay. This is just a little more efficient.\nWe can use the SET instruction with R0 to jump to anywhere in our program. There is where labels are really helpful since we don't care what the actual instruction number is as the label will get replaced with the proper value.\nThe delay function uses R11, R12, and R13 to count from 0 to 16,777,215. This takes a decent amount of time so we can actually see the LEDs change.\nOnce the counter overflows, the delay function returns to the address in R15 using the ADD instruction to set R0 to R15.\nTry editing this code, or write you own program! Feel free to even swap out some of the instructions for your own if you can think of something more useful. Maybe you'd rather an instruction for directly setting a bit instead of XOR, or maybe you would rather be able to tell if a value is even than shifting right.\nThat's it for this tutorial. I hope you enjoyed making a basic CPU! It's pretty freaking awesome to write code for hardware that you designed! Go make something awesome!\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/","title":"Basic CPU"},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"body":"In this tutorial we will go over how to use the Camera Shield and SDRAM Shield to capture images, but first, let me take a selfie!\n\nTake a Picture\nThis tutorial will run a bit backwards from most of the other tutorials. First, we will use the example project to take a picture, then go through and understand it.\nBefore we continue, make sure the firmware on your Mojo is up-to-date. Some USB bugs were fixed that may cause issues when trying to capture an image. To flash the latest firmware, in the Mojo IDE click Tools-&gt;Flash Firmware...\nWith that out of the way, create a new project based on the Image Capture example.\nBuild the project and load it onto your Mojo.\nNow make sure your setup goes Mojo-&gt;SDRAM Shield-&gt;Camera Shield-&gt;OV2640. It's important that the SDRAM Shield be the first board in the stack. Also, you have to be using the OV2640 camera module for the design to work.\nWith the stack setup and the design loaded, you should see the right LED on the Mojo blinking 7.5 times per second. The LED toggles each time a picture is taken (15 frames per second).\nIn the Mojo IDE, go to Tools-&gt;Image Capture....\n\nLeave everything as the defaults and with your Mojo plugged in, click Capture.\nYou should now see the image start to load. It takes some time for it to come through so be patient.\nOnce the image is loaded, you can save it as a .png by clicking Save Image.\nWhat's Going On\nIt's time to dig into the design to understand what's going on. It's always a good idea to start at the top level and work down, so open up mojo_top.luc.\n\nThere's a lot going on, so I drew a block diagram to help you out.\n\nThe ov2640.luc component deals with initializing the camera and reading in the pixel data. Open up this file and take a look.\n\nThe OV2640 camera (with the configurations in the IDE) takes a 24MHz clock and uses an internal PLL to boost it to 36MHz. This clock is used to output the pixel data. The problem is we need a way to capture the pixel data reliably without violating any timing constraints. We could just use this clock for the entire design, but the SDRAM controller is designed to work at 100MHz and if you ever want to do some more complicated processing the extra speed may be nice.\nTo get the pixel data from the 36MHz clock domain to our 100MHz domain, we can use an asynchronous FIFO. A FIFO (or First In First Out) buffer is a type of memory structure that allows you to write/read data to/from it. Unlike a chunk of RAM, you don't specify addresses, but rather just that you'd like to read or write. The order that you write data dictates the order that you read it. In other words, the order is preserved. What's special about an asynchronous FIFO, is that the writing and reading operations can happen from two different clock domains.\nWe can write all the pixel data to the FIFO with the 36MHz clock, then read it back out with the 100MHz clock. The only restrictions when using a FIFO is that your average read speed needs to be equal to or faster than the write speed so you don't fill up the FIFO and drop data. You also need to size the FIFO so that it can handle the largest burst size you need to absorb.\nIn our case, we are reading at 100MHz and writing at 36Mhz, so we will have no problems keeping up with the data flow.\nThere are four signals the camera uses to send image data to us. pclk is the pixel clock. This is the 36MHz clock that the rest of the signals are aligned to. vsync is the vertical sync signal. It tells us when a frame starts and stops. href is horizontal reference. It tells us when a row starts and stops. data is the eight data lines that convey the actual color information.\nWhen href and vsync are both high, each rising edge of pclk signals a new valid byte of data on data. The current configuration of the camera has it outputting 16 bits per pixel, so a new pixel is received every two rising edges of pclk.\nThe ov2640 module's job is to output the pixel data and flags for the end of row/frame. Each time vsync falls, the end of a frame is signaled. Each time href falls, the end of a row if signaled. Ever other valid pclk cycle, the two bytes are packed together into a single 16 bit pixel that is output.\nThe format of each pixel is 565 RGB. That means bits 15-11 are red, 10-5 are green, and 4-0 are blue. You can convert these values to 24 bit color by appending the MSBs of each color so that it's 8 bits wide. For example, if red is 5 bits wide, you can do c{red[4:0],red[4:2]} to get the 8 bit equivalent. Note that you aren't actually upscaling the color, but just converting to a different color space.\nAs we mentioned before, these signals can't be sampled directly in the 100MHz clock domain so the asynchronous FIFO is setup so that each rising edge of pclk writes the href, vsync, and data signals to it. In the 100MHz clock domain, we simply wait until the FIFO has data to read and treat that data as the three signals to generate the pixel data and flags.\nConfiguration\nWhen the camera is first powered up, it isn't taking any pictures. It needs to go through a fairly complicated configuration process before it'll start sending useful data. Unfortunately, camera companies seem to feel the need to keep all the configuration data locked up under NDAs. Fortunately, I was able to find a Linux driver for this camera that contained all the configuration data needed to get it to spit out images. This data is packed into the ov2640_uxga_config.luc module.\nThis driver contained different configuration settings for various frame sizes from 176x144 to 1600x1200. The ov2640_uxga_config.luc module contains data for 1600x1200 resolution images. If you want to change the resolution, you can remove this component and add one of the other configuration ROMs under Image in the components library. Note that you can only have one of these modules in your project at any given time as they all use the same module name, ov2640_config.\nThis camera is capable of shooting up to 60fps at 408x304, but unfortunately, these configurations are always 15fps. I haven't found any valid configurations for properly setting it up to shoot at higher frame rates, but if someone does find one, let us know.\nThe configuration data is written using a protocol called SCCB, or Serial Camera Control Bus. SCCB is very similar to I2C, with only very minor differences.\nImage Capture\nNow that we have the camera setup and spitting out useful pixel information, we need to do something with it.\nIn this tutorial, we are going to simply save the pixel data into SDRAM so that it can be used later. Open up img_capture.luc.\n\nThis module waits until start signals to capture a frame. It then waits for the current frame to end (signaling a fresh frame is about to start). Once the frame starts, it waits for the first pixel, save it in a dff, then when the next pixel is received it write them both to RAM. The reason it needs to wait for two pixels is because each pixel is 16 bits of data and the SDRAM interface uses 32 bits of data per address. This means we can pack two pixels into each address.\nThis continues until we have written an entire frames worth of pixels to RAM. We know how many pixels are in a frame from the OV2640_config.IMG_SIZE constant. This constant is defined in the configuration ROM, so if you switch out the ROM, this constant will change everywhere.\nThere is one minor issue that we didn't consider yet. We get a new pixel at a rate of 36MHz/2 = 18MHz. This means we need to write to RAM at a rate of 18MHz/2 = 9MHz. A write takes 5 clock cycles @ 100MHz (assuming the row is already open) so we should be able to write at 20MHz. However, SDRAM requires refresh cycles to keep the contents intact. This means that periodically there will be fairly large delays. A refresh operation takes 11 cycles. That means, in the worst case, we have to wait 16 cycles between writes. 16 cycles is equivalent to 6.25MHz and since we need to write on average at 9MHz, we have a problem. The solution, another FIFO.\nThe key is that we need to average a rate 9MHz. The average write performance is easily about 9MHz, we just need to smooth out the delays caused from refresh cycles and opening/closing rows. There is a component, mem_write_buffer that has the same interface as the SDRAM controller that will absorb our writes and spew them out when the SDRAM controller isn't busy.\nThis buffer makes sure that we don't lose any pixels and everything is written to RAM.\nJust to recap, we now have the camera configured and spitting out pixel data. When we receive a signal to capture a frame, we then save the pixel data into SDRAM starting at address 0 and going to address (OV2640_config.IMG_SIZE/2)-1.\nRetrieving the Image\nNow that we have a way to capture an image in SDRAM, we need a way to trigger the capture and read the data back.\nThis is where the Register Interface comes in handy. If you haven't read that tutorial yet, make sure you do.\nJust as a recap, the register interface allows us to easily issue read and write commands over the USB port on the Mojo to specific addresses. We can then use these addresses for whatever we want.\nWe can use a write to address 0 to trigger the capture of an image. Check out these lines from mojo_top.\n\nWhen a write to address 0 is detected, we set img_capture.start to 1 to capture an image.\nWe now just need a way to give the register interface access to the SDRAM.\nThis is where ram_to_reg takes over.\n\nThis modules takes all read requests from the register interface and forwards them the SDRAM controller. The results from the SDRAM controller and sent back to the register interface. Note that writes could easily be forwarded too, but we are using writes to address 0 to signal an image capture and we don't want to corrupt the image data.\nNotice how similar these interfaces are. We barely have to do anything to forward the requests.\nMemory Arbiter\nWe now have a way to take an image, save it, and retrieve the data. However, there's one last issue we need to address. We now have the img_capture and ram_to_reg modules needing to connect to the SDRAM controller.\nWe need a way to give both modules access to the SDRAM. Good thing we have the memory_arbiter component. This component allows you to connect an arbitrary number of modules implementing the master memory interface (things that want to write/read from RAM) to a single slave (the SDRAM controller).\n\nThe way it works is it takes requests from any any attached master module. These requests are then issued to the slave in priority order. That means that the first device always has the highest priority, followed by the next, etc.\nPriority order is nice because it is simple to implement as it has no internal state (you don't care who was just served). However, it isn't a fair algorithm. That means if the module with the highest priority saturates the memory bus, lower priority modules will never get their requests served.\nThis isn't typically a problem as long as you order the masters carefully.\nIn our case, it actually doesn't really matter if the img_capture or ram_to_reg module has higher priority as they won't be operating at the same time (the image is captured, then it is read back). Anyways, the img_capture module was given higher priority as it attaches to the 0th position and ram_to_reg attaches to the 1st position.\nConclusion\nIf we go back and look at the block diagram from the beginning, all the connections should now make sense.\n\nThe SCCB and Config ROM modules are used to configure the camera. The camera then spits out image data that the OV2640 modules brings over to the 100MHz clock domain and packs into pixel chunks. The image data is then fed into the Image Capture module that, when told to, saves an entire frame into the SDRAM. Writes are buffered in the RAM Write Buffer so we don't drop any pixels when the SDRAM is busy refreshing or opening a new row. The Register Interface module allows us to issue reads and writes to various addresses. If a write to address 0 is issued, we issue a start command to the Image Capture module. All reads are forwarded to the Reg to RAM module which sends them to the SDRAM controller. The Memory Arbiter allows us to give both the Image Capture and Reg to RAM modules access to the SDRAM.\nThe Image Capture Tool in the Mojo IDE issues a write to address 0 when you click Capture. It then waits a small amount of time for the image to be captured and then reads all the addresses needed for an entire frame. As the image data is read in, it builds an image out of it.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/camera/","title":"Camera"},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"body":"In this tutorial we will use the USB port and create a project that will echo back all the data sent to the Mojo.\nThis will teach you how to use components in your projects.\nGetting Started\nLike before, we will start by creating a new project. Go to File-&gt;New Project... and create a new Lucid project. I'm calling mine Serial Port Echo. It is from the Base Project example.\nGreat! Now we have a bare-bones project. The Mojo's USB port is accessible to the FPGA through the AVR (the microcontroller). The AVR acts as a USB&lt;-&gt;serial bridge once the FPGA is configured so we need to talk to the AVR over UART (Universal Asynchronous Receiver Transmitter).\nComponents\nComponents are prewritten modules that you will likely need to use in many of your projects. For this tutorial, we need to add the AVR Interface component to our project.\nLaunch the Component Selector by going to Project-&gt;Add Components...\nUnder Interfaces you will find the component AVR Interface. Click the checkbox next to it.\n\nNotice that there are four more components under AVR Interface that automatically got selected. These are dependencies of AVR Interface. That means they must be included for it to work.\nYou can click each one for a short description of what it does. Each of the dependencies can be included separately for use if your own projects if you want (they exist in other categories).\nYou should take some time to look at what components are available to you for your future projects.\nClick Add to copy the components into your project.\nNotice that there is a new category called Components.\n\nYou can open any of the components you want to take a look at how they work. However, for this tutorial we will be using them as a black box.\nInstantiating the Component\nNow that the components we need are in our project, we need to use them.\nWe are going make some changes in mojo_top.luc.\n\nThis will create an instance of avr_interface named avr.\nIf you only do this, you will actually get an error. The error is because some of the inputs to the module were never assigned. Add the following to line 33.\n\nHere we are just connecting the inputs and outputs of the avr instance to the inputs and outputs of our module.\nAlso, now that the connections to the AVR are actually being used, don't forget to remove the following lines that assign default values from the always block.\n\nNote that avr.channel is set to hf, this will disable the ADC since it is an invalid channel. You should disable the ADC when you aren't using it because the AVR with otherwise spend time taking readings. You can get better USB data rates when it is disabled.\nAlso note that avr.rx connects to avr_tx and avr.tx connects to avr_rx. This is because the top level signals were named the same as those on the AVR while the module signal names are its own. You want the module's transmitter to connect to the AVR's receiver and vice versa.\nWe are still missing some connections, but first a small detour.\nSending and Receiving Data\nWhen new data arrives, the signal avr.new_rx_data goes high. This tells you that the data of avr.rx_data is valid. Normally you would want to wait for avr.new_rx_data to go high and then do something with the data.\nTo write data to the USB port is the same idea. We set avr.tx_data to the byte to send and we set avr.new_tx_data high. However, there is one more signal to look out for. That is avr.tx_busy. If this signal is high, the transmitter is busy for some reason, either it is currently sending a byte or the AVR can't take any more data at this moment. Either way, if you try to send data when this is high, it will be ignored.\nFor this simple example, we are going to ignore avr.tx_busy and just live with dropped data if too much stuff is sent at once. The next tutorial will handle this more gracefully.\nAll we want to do is echo data we receive back to the transmitter. To do this we can just connect the transmitter to the receiver.\n\nYou should now be able to build your project and load it on the Mojo. If you fire up your favorite serial port monitor and connect to the Mojo, any text you send should be sent right back. Note that the baud rate you set doesn't matter (it's ignored) as long as it's not 1200, which is used to put the AVR into bootloader mode.\nCapturing Data\nBefore we wrap up, let's do a little more with the incoming data. We are going to save the last byte received and display it on the LEDs.\nTo do this this, we need an 8 bit dff.\n\nWe can then write to the dff when we have new data.\n\nOn the last line, we connect the LEDs to the output of the dff.\nIf you don't assign a dff a value, then it will retain the last value it had. Since we are only assigning it a value when avr.new_rx_data is high, it will hold the last byte until the next one comes in.\nNow, if you build and load your project, when you fire up a serial port monitor you should not only see the text you send back in the monitor, but the LEDs on the Mojo should also changed depending on the character you sent.\nThe full module looks like this.\n\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/components/","title":"Components"},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"body":"This tutorial will cover how to connect your design to the IO pins on the Mojo as well as some of the dangers that can arise when interfacing your digital design with the external world.\nThe Button Counter\nTo demonstrate these principles, we will hook up an external button to the FPGA. Each time the button is pressed we will increment a counter. The counter can then be displayed on the LEDs so we can see each time a button press is registered.\nHooking up a Button\nFirst we need a button to connect! Above is a picture of the button I am going to use. Pretty much any momentary switch will work.\n\nWe now need to connect it to the Mojo. We simply need to connect one side of the button to ground and the other to any pin on the Mojo. The FPGA has configurable internal pull-up and pull-down resistors so we don't need an external pull-up. I like this particular button because it fits nicely in the header. I put one pin into ground and the other to P51. Like I said before, you don't need to use P51, you just need to make note of which pin you choose.\nAdding the Button to the Top Level\nMake a new project based on the Base Project. We now need to add our new button input to mojo_top. Remember, the inputs and outputs of this module are the inputs and outputs of the FPGA.\n\nNote that I had to add a comma after avr_rx_busy.\nThe User Constraints File\nOK so now we have the button signal in our design, but how do the tools know what pin to connect button to? This is where the User Constraints File, or UCF, comes into play.\nUnder the Constraints heading in the left panel of the Mojo IDE, open the mojo.ucf file.\n\nHere are all the definitions of all the predefined pins! Also note the first two lines define the parameters for the clock so the tools know what your design needs to handle.\nThe IOSTANDARD specifies what standard the pin will operate at. Since all the IO pins on the Mojo are powered with 3.3V, LVTTL and CMOS33 are the only valid options for singled ended signals. These standards define what should be considered a 1 and what should be a 0. These two are more or less the same, with a 1 being 3.3v and 0 being 0v (or roughly these levels), but you can only use one type per IO bank, so stick with LVTTL. If you are really curious about the different standards check out this document from Xilinx (IO standards start at page 24), but be warned, it's pretty thick.\nThe mojo.ucf file is part of the component library so it can't be edited. To add our own pin definitions, we need to add a new constraints file. Click the new file icon (left-most icon in the toolbar) and create a new User Constraints file called custom.ucf.\nNow we need to add the following line to the the file for the button.\n\nThe NET name, \"button\", must match the name of the signal of the top level module. Here I set the location (LOC) to P51 which is the pin I chose to connect the button to. If you chose a different pin, use that instead.\nNotice at the end there is the extra PULLUP parameter. This tells the tools we want the internal pull-up resistor to be used on the pin. You can also specify PULLDOWN to use a pull-down resistor.\nThat's all there is to adding a new signal! Just to make sure it's all working properly let's modify mojo_top.luc and connect the button the LEDs.\n\nBuild and load your project to your Mojo. When you aren't pushing the button the LEDs should be on. When it's pressed the LEDs should turn off.\nThe Counter\nWe can now write out module that takes the button input and counts how many times it has been pressed.\n\nThis module is making use of the edge_detector component so make sure you add that to your project (it's under Miscellaneous). The edge_detector is pretty simple and you should take a look at the source. To use it, we need to specify what types of edges we are interested in. In our case, we only care about the rising edge so we set RISE to 1 and FALL to 0. This means that every time there is a rising edge on edge_detector.in, edge_detector.out will be 1 for a single clock cycle.\nWith the edge detector, we only then need to increment our counter each time an edge is detected.\nFinally, add this to mojo_top and connect the output to the LEDs.\n\nBuild and load it onto your Mojo. Try pressing the button and observing what happens. Is it counting exactly once per press? Chances are many presses will register as multiple presses. In my case it wasn't uncommon for a single press to be counted as high as eight times!\nThis happens because the button bounces and each bounce will be counted as a press. But before we get to fixing that, we run into another problem.\nMetastability\nTo understand metastability, you first need a little background on the timing requirements of the flip-flop. As we discussed before, a flip-flop will copy the value at the D side to the Q side at the positive edge of the clock and hold the value steady until the next positive edge. What we didn't cover was what is known as the setup and hold timing constraints.\nThis tutorial will not go into too much detail on what causes these constraints and what their actual values are. All that is important right now is to know that the setup constraint tells you how long before the positive edge must the value on the D side be stable. The hold time tells you how long after the positive edge the D side must continue to be stable.\nHere is a diagram illustrating this.\n\nThe areas that D needs to be constant are shaded in gray on the clock. As you can see the setup time specifies the time before the rising edge and the hold time is the time after the rising edge.\nThe D and the Q signals under the clock are an example of what could happen. The first two rising edges are valid since during the setup and hold time D is constant. For the last edge D changes when it shouldn't so the value of Q becomes unknown.\nQ may take a random value of 0 or 1, however, that is the best case. There is also a possibility that Q will get stuck somewhere between 0 and 1 (0.5?!?), or worse yet it may oscillate, flipping between 0 and 1 very rapidly.\nAs you may have guessed you don't want any of that to happen. Bad things will happen and your circuit will do unexpected things.\nThere are two solutions to this problem.\nFirst, you can just design your circuit so this never happens! This is exactly what the tools do for you when you build your design. If it can't meet timing for some reason you'll get timing errors. If you are just running the Mojo at 50MHz, you probably won't encounter these unless you do multiple multiplications between flip flops or some other complicated computational logic. This will be covered more in later tutorials.\nAs you may have realized, sometimes you can't control when a signal will change. For this tutorial we are using a button. It's impossible for us to guarantee that the button won't be pressed and violate the setup and hold constraints.\nThe second solution is to then to use not one but two flip-flops!\n\nThis will add a small amount of latency to your input signal, but it significantly reduces the chance that you will encounter metastability problems. This is the solution we will use to read the button reliably.\nIt is important to note that this does not solve the metastability problem and there is still a small chance you could have problems. However, using two flip-flops drastically reduces that chance. If you are really worried about a certain input, you can chain more flip-flops together for a smaller chance of stability issues. However, there are diminishing returns and two will be plenty for most cases.\nDebouncing\nWhen you press a button, there is a chance that the button will not simply go from open to closed. Since a button is a mechanical device the contacts can bounce. When a button bounces the value it produces looks something like this.\n\nFor a short period after the button is pressed the value you read from an IO pin may toggle between 0 and 1 a few times before settling on the actual value. This is where debouncing comes into play.\nTo debounce a button, you just need to require that for a button to register as being pressed, it must look like it's being pressed for a set amount of time. In this case, being pressed is when the value of the button is 0. If you read enough 0's in a row it is safe to assume that the button has stopped bouncing and you can register one button press.\nIf you fail to do this and you are using the button to increment a counter, then the counter may increase by more than 1 per button press since it will appear that each bounce was a separate press. Just as we saw before.\nConveniently, there is a component under Miscellaneous called Button Conditioner that we can use to fix these problems.\n\nThis component works by taking a button press and passing it through two (or more) flip-flops to prevent stability issues. This happens in the pipeline component which is just a string of connected flip-flops of length DEPTH. With the synchronized signal, a counter is incremented when the button is pressed and reset when it isn't. The counter will saturate at it's max value. Once it hit's the max value it is safe to say the the button has been pressed and the output changes to 1.\nBy using the button_conditioner module you can be sure that you will be able to reliably read button presses.\nPutting It All Together\nWe now have all the parts we need to reliably count the number of times the button is pressed.\nThe only change we need to make is to add the button conditioner to counter.\n\nBuild and load your project for the last time. When you push the button now, the counter should only increase by one each time!\nIf you have other external inputs that aren't synchronized to the Mojo's clock, you can use the pipeline component to synchronize them. This component will create a chain of flip-flops for you and the length of the chain is parameterizable.\nThat's it for this tutorial. You should now be able to connect your Mojo to whatever you want!\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/","title":"External IO"},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"body":"This tutorial covers the basis of using the HDMI Shield. There are a few components bundled in the Mojo IDE that make encoding and decoding HDMI streams easier. This tutorial gives a basic example for each one.\nThe HDMI Shield\n\nThis tutorial assumes you are using the HDMI Shield in its default configuration. Out of the box, the HDMI Shield is setup so that the port labeled HDMI 1 is a source (output) and HDMI 2 is a sink (input). It is possible to change these via solder jumpers.\nTMDS\nTMDS, or Transition Minimized Differential Signaling, is a type of differential signaling that encodes each byte sent into 10 bits so that the number of edges (transitions from 0-&gt;1 or 1-&gt;0) are minimized to reduce noise and increase signal integrity.\nThe details of TMDS aren't really important for this tutorial. However, if you are curious, Wikipedia does a good job at outlining the details.\nHDMI Encoding\nAny projects that incorporate HDMI are going to have slightly complicated clocking. Even in the simplest case of just encoding HDMI data three different clock frequencies are required. These frequencies are synthesized for you in the HDMI components.\nThe HDMI Encoder component requires an input clock to synthesize three new clocks. The pixel clock is the frequency of the input clock divided between 1 and 12. The other two clocks are 10x and 2x the pixel clock frequency. These are used to clock out the actual bits. The data for each pixel is 24 bits split across three channels (red, green, blue). The eight bits for each color are converted to 10 bits of TMDS data. These bits are clocked out at 10x the pixel clock. The 2x clock is used by the FPGA's special IO resources to clock data out this fast.\nThe Spartan 6 on the Mojo is capable of IO signals up to 945MHz which means a pixel clock of up to 94.5MHz. This is fast enough for 1080p@30Hz or 720p@60Hz.\nDue to the way the FPGA is designed, the clock that is fed into the HDMI encoder can't be used for anything else. Instead you need to use the pclk output of the component to clock the rest of your design. This is the clock that the HDMI data needs to be aligned with.\nChoosing a Pixel Clock\nYour pixel clock rate will depend on two things, the video resolution and framerate. The minimum pixel clock is simply width x height x frames per second. For example, 720p@60Hz is 1280 x 720 x 60 = 55296000 =&gt; ~55.3MHz. However, this isn't the full story. The width and height of each frame needs padding for the vertical and horizontal sync signals. For for 720p@60Hz, the actual image size is something more 1667 x 750 which makes for a pixel clock of 75MHz. The padding required is dependent on the device receiving the stream, however in my testing adding at least 15 to the height and 30 to the width seems to work with most devices.\nYou can play with the padding to get the pixel clock to be an easy to synthesize value (like the 75Mhz example).\nAs you are probably aware, the Mojo has a 50MHz clock input. To get a pixel clock suitable for your design you will likely need to synthesize it. Check out the Generating the Clock section from the SDRAM Tutorial for how to do this.\nGenerating a Stream\nNow that clocking is out of the way, let's create a simple project that generates a simple test pattern.\nCreate a new project based on the Base Project.\nOpen the Components Library and under Video select the HDMI Encoder. We also need to add the UCF file for the HDMI Shield. Under Constraints select HDMI Shield and click Add.\nTake a look at the module declaration.\n\nThe interface to this module is pretty simple. The parameter PCLK_DIV is used to divide the pixel clock by a value between 1 and 12. This is required when you need a pixel clock less than 19MHz. This minimum input frequency restriction is from the PLL_BASE primitive that is used to synthesize the other clocks. For more information see page 98-116 (specifically page 101) of the Xilinx document UG382 and page 57 of DS162.\nThe other parameters are used to define the stream's resolution. The X/Y_FRAME parameters define the size of each frame while X/Y_RES define the active image resolution.\nThe outputs tmds and tmdsb need to be connected directly to the HDMI output pins of the FPGA at the top level. These are the TMDS data streams and are four bits wide for the four channels, red, green, blue, and the clock.\nThe module supplies you with a few signals to help you supply the proper colors. The output active tells you that it needs color data and the frame is in an active area. The outputs x and y tell you the pixel coordinate that is about to be sent out and being requested.\nYour job is to simply take these three signals and generate the corresponding red, green, and blue signals.\nTo start we will make a static frame where each pixel's color is a function of its location.\nWe will make a 720p@60Hz stream which means we need to generate a 75MHz clock.\nLaunch CoreGen and the Clocking Wizard.\nI unchecked Phase alignment as it doesn't matter for our design.\nAlso change the primary input clock frequency to 50MHz to match the Mojo's clock.\n\nOn the next page, change the output frequency to 75MHz and click Next.\nOn page 3, uncheck RESET and LOCKED as we won't be using them.\nYou can now click Generate.\nOnce the core is generated it should show up in the Mojo IDE under the Cores section in the project tree. You can close Core Generator now.\nWe now have all the components ready. We need to instantiate the clock wizard and HDMI encoder, add the HDMI TMDS outputs, and wire everything up in mojo_top.\nAdding the HDMI TMDS outputs is pretty straightforward. If you look in the hdmi.ucf file we added before you will find the names of the defined signals we can add to mojo_top. For this project we are only using the hdmi1_tmds and hdmi1_tmdsb signals.\nWe simply add these two signals as four bit output arrays to the port list in mojo_top.\nTo instantiate the clk_wiz_v3_6 we simply need to hook up clk to its CLK_IN1 input. The output CLK_OUT1 will be used to feed the clock of hdmi_encoder.\nFor hdmi_encoder, we can connect clk_wiz.CLK_OUT1 to the clk input and 0 for the rst input (we don't need a reset).\nThe output hdmi.pclk is the clock we will use for the rest of the design. Change the port connection of .clk(clk) to .clk(hdmi.pclk).\nFinally, we just need to connect values to the red, green, and blue inputs of hdmi and its TMDS outputs to the corresponding ports.\nFor this demo I just used a function of the x and y outputs of hdmi to make a static pattern.\nTake a look at the full mojo_top.\n\nYou should now be able to build and load this design onto your Mojo. If you plug a monitor into HDMI 1 you should see the test pattern shown below.\n\nIf you don't see the pattern, You may need to use a different monitor/TV that supports 720p@60Hz or a different HDMI cable. In our testing, various cables didn't work all that reliably.\nWe can now modify the design a bit to make the pattern dynamic.\nTo do this we need some concept of time. A frame counter is probably the easiest way.\nTo check for the end of the frame, we just need to look for the max X and Y values. At 720p these are 1279 and 719. Also note that the coordinate outputs of the HDMI encoder are only valid when the active signal is high so we also need to check for that.\nThe modified mojo_top looks like this.\n\nAgain you could use frame.q in a different way to change the animation. Here is what this looks like.\n\nHDMI Decoding\nHDMI decoding is pretty simple with the HDMI Decoder component. With this component you simply connect the tmds and tmdsb inputs from the HDMI port and it will output the pixel data and a pixel clock. \nThe one tricky part with receiving HDMI data is providing something known as the EDID ROM. This is a ROM that contains data detailing about your design's capabilities. When you plug something into an HDMI port it will often read the ROM to make sure the HDMI stream it wants to send is supported. \nThe details of the ROM format are outside the scope of this tutorial, but Wikipedia has a decent outline of it here.\nThere is a component in the Component Library that will make the Mojo show up as a 720p@60Hz monitor.\nI don't have a good example project using just HDMI decoding but the next section will cover how to use the decoder and EDID ROM.\nHDMI Passthru\nIn this section we will use both ports on the HDMI Shield. HDMI 2 will act as an input and we will modify the stream then output it on HDMI 1. \nTo get started, make a new project based on the Base Project.\nOpen the Components Library and add HDMI Passthru and EDID ROM from the Video section. In the Constraints section add the HDMI Shield constraints.\nWe now need to create another constraint file to specify the max pixel clock we expect to see. Click the New File icon and enter hdmi_clock.ucf as the file name, select User Constraints as the type, and click Create File.\nOpen this file and add the following line.\n\nThe fourth TMDS pair is the clock. When specifying a clock frequency for a differential pair, you only need to specify it for the positive side of the pair. In our case this is the signal hdmi2_tmds(3). \nIf we didn't add this constraint the tools wouldn't have any idea what timing specs to try and meet.\nIn mojo_top we need to add the relevant HDMI signals to our port declaration. These consist of the two sets of TMDS pairs and the I2C signals for the EDID ROM.\nWe need to also instantiate the EDID ROM and HDMI Passthru components. The EDID ROM operates independently and we connect it to the main clock input on the Mojo. This is because we know this clock is always running but the pixel clock will only be running when there is a valid HDMI signal. When you plug in the HDMI port, the EDID ROM will be read before HDMI data is sent. If we tried to use the pixel clock, the ROM wouldn't be readable and the stream would never start.\nWe then need to connect the TMDS inputs and outputs from the HDMI Passthru component to the top level ports. The only thing left is to connect up the pixel colors.\nThe hdmi_passthru module outputs a pixel stream accompanied by the pixel's location and if it is active (valid). The module then accepts color data for pixels at a location delayed by the parameter LATENCY. By default this is set to 1. That means that you get one clock cycle to modify and supply the pixel color data.\nIn this first example we are simply going to mirror the stream. This means we need some DFFs to store the color data for this single cycle.\nPutting this all together we get a ﻿_mojo_top_﻿ module that looks like this.\n\nIf you build and load the project now you should be able to plug HDMI 2 into an HDMI port on your computer.\n\nIn the previous image you can see the Mojo showing up on my computer as a 720p monitor.\nIf you plug a monitor into HDMI 1 then you should be able to use it as a 720p monitor.\nWe can have a little more fun than just mirroring the setup. Try swapping the color assignments around when outputting the stream.\n\nIf you build and load the design again the colors from whatever you put on the monitor will now be swapped.\n\nHey look Facebook is now red!\nYou can get more creative with how you modify the stream. Remember if you need more cycles to make your edits you can change the LATENCY parameter.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/","title":"HDMI"},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"body":"This is now part of the Alchitry version.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/","title":"Hello YOUR_NAME_HERE"},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"body":"This is now part of the Io Element Tutorial.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/","title":"Io Shield"},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"body":"This tutorial will introduce you to the register interface component and how it can be used to create easy and reliable interfaces to your designs.\nOverview\nThe register interface component takes over a serial port (typically from the AVR interface component) and create an address based interface. You can then issue read and write requests over the Mojo's USB port to specific addresses. By default, these addresses have no meaning. They are simply a way for you to differentiate the requests. Both the data and address values are 32 bits wide.\nExample\nLet's create a quick example that will map the LEDs on the Mojo to address 0. That way we can read and write to address 0 to change the value of the LEDs.\nCreate a new project based on the AVR Interface example.\nNow open up the components library and add the Register Interface component, which can be found under Interfaces.\nWe now need to hook it up to the serial port of the AVR Interface in mojo_top.luc.\n\nNow we only have to deal with the register interface and we can ignore the AVR interface.\nTake a look at the reg_interface.luc file.\n\n\nHere you can see the interface we will be dealing with. When the master (your PC) issues a command, regOut.new_cmd goes high. At this time, regOut.write will tell you if it is write or read request and regOut.address will tell you what address is being referenced. During a write, regOut.data is valid and is the data that should be written to the specified address. During a read, this value is invalid and should be ignored.\nWhen a read request is sent, the value corresponding to regOut.address should be generated and presented on regIn.data. When it is ready, regIn.drdy should be set high.\nWe now need to add a dff to save the value of the LEDs.\n\nNow we can add some logic to handle the read and write requests.\n\nWhen we detect a write request, we update the value of leds, but when detect a read request, we return the value of leds. Note that we are filtering only for address 0. All other address requests will be ignored.\nHere is the fully modified module.\n\nBuild your project and load it onto your board.\nIn the Mojo IDE, go to Tools-&gt;Register Interface.... This tool allows you to send read and write requests to specific addresses when using the register interface component. Fill in 0 for Address and 1 for Value then click Write.\n\nIf everything went well, the first LED on your Mojo should have lit up! Try writing different values. Also note that you can use the radio buttons to select if you want the address and value fields to be represented in decimal or hexadecimal.\nIf you try to read from an address other than 0, you'll get an error message saying the read failed. This is because if the address isn't 0, we never return any data (regIn.drdy stays 0 forever) so the read times out. You can write to other addresses, but the writes are simply ignored.\nTry to modify the code so that address 0 still controls the LEDs, but address 1 now will read a bit-wise inverted version of what was last written to it. If you need help, hit up our forums.\nThe API\nThis built in register interface tool is helpful, but manually entering everything isn't always practical. Here we will go over how the protocol works for issuing read and write requests so that you can use this in your own applications.\nEvery request starts with 5 bytes being sent. The first byte is the command byte and the next four are the address (32 bits = 4 bytes) sent with the least significant byte first.\nIn many cases you will want to read or write to many consecutive addresses, or perhaps the same address many times. It would be inefficient to have to issue the entire command each time so the command byte contains info for consecutive or multiple read/write requests in one.\nThe MSB (bit 7) of the command byte specifies if the command is a read (0) or write (1). The next bit (bit 6), specifies if consecutive addresses should be read/written (1) or if the same address should be read/written multiple times (0). The 6 LSBs (bits 5-0) represent how many read/write requests should be generated. Note that the number of requests will alway be 1 more than the value of these bits. That means if you want to read or write a single address, they should be set to 0. Setting them to 1 will generate two read or write requests.\nIf you send a write request, after sending the command byte and address, you continue sending the data to be written. Data is always sent as four bytes per write request and the least significant byte should be sent first.\nFor reads, after sending the command byte and address, you simply wait for the data to be returned. Data is returned in least significant byte order. Note that you may not always receive all the data you ask for if there is an issue with the FPGA design (i.e. the requested data is never presented, like in our LED example).\nLet's take a look at an example.\nIf you want to write to addresses 5, 6, and 7, you could issue the following request. 0xC2 (1100 0010), 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00. This would write 1 to address 5, 2 to address 6, and 3 to address 7. If you changed the command byte to 0x82 (1000 0010) you would write 1 to address 5, 2 to address 5, and then 3 to address 5 (in that order).\nIssuing a read follows the exact same format except the data bytes are received instead of sent.\nA single command can generate up to 64 read/write requests. If you need to read/write more, you need to issue separate commands.\nJava Example\nYou can download a working Java example (Eclipse project) by clicking here. This example simply writes 0x12 to address 0, but there is a class to make it easy to perform reads and writes in bulk.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/","title":"Register Interface"},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"body":"In this tutorial we will create a project that will send \"Hello World!\" over the USB (serial) port when the letter \"h\" is received. This will help teach you how to use finite state machines (FSM).\nSetup\nAs with all the tutorials, we first need to create a new project based on the Base Project. I called mine \"Hello World\" but you are free to choose whatever name you want.\nWith the new empty project, we now need to add the avr_interface component. This will be used to talk to the AVR and expose a nice interface to send data over the USB port.\nYou should know how to add a component to your project from the last tutorial. If you need a refresher, click here.\nThe component we need to add is the AVR Interface component and it can be found under Interfaces. This component will include a bunch of other components as dependencies.\nThe AVR Interface\nLet's first take a look at what the avr_interface module looks like.\n\nWe will only be looking at the interface to the module since we don't need to know how it all works to use it properly (the magic of components).\nThere are lots of comments explaining what the signals are for, but the ones we care about I'll explain in more detail.\ncclk\ncclk is a very important signal. When the FPGA is still being configured by the AVR, the AVR uses this to send the configuration data. The signal toggles as data is being sent. However, once the FPGA is up and running, the AVR holds it high. We can then use this to make sure that the FPGA doesn't try to drive it's outputs before the AVR is ready. This is because there is a small window between when the FPGA is configured and when the AVR has initialized its IO for the FPGA post-load. We don't have to worry about this since the avr_interface module will take care of it. We just need to pass the signal in.\ntx and rx\nThese signals are the serial connection to the AVR. Data sent on these will be sent over the USB port.\nSerial TX and RX User Interfaces\nThese interfaces have a few signals which we will be using internally to tell the module what data to send and to receive any incoming data. One signal to take note of is the tx_block signal. This is used by the AVR to to do some hand-shaking with the FPGA to make sure the FPGA doesn't send too much data (as it will start dropping bytes). Again we just need to connect this to the correct external signal and everything else is taken care of for us.\nAdding avr_interface to mojo_top\nWe now can add avr_interface to our top level module, mojo_top.\n\nAll of the external signals are already defined for us in the Base Project. We simply connect them up. Something to notice is that avr_tx connects to avr.rx and avr.tx connects to avr_rx. This is because the signals avr_rx and avr_tx are from the point of view of the AVR, while avr.rx and avr.tx are from the point of view of the FPGA. We want the FPGA's transmitter to connect to the AVR's receiver and visa-versa.\nWe haven't yet connected all of the signals of avr.\nThe Serial Interface\nReceiving Data\nWe will first look at how we know when data comes in.\nThere are two signals that are important for this, avr.rx_data and avr.new_rx_data. Their names are pretty self explanatory. The signal new_rx_data is a single bit wide and acts as a flag. When this signal is 1, the value of rx_data is valid and it's the byte we just received.\nThis means if we want to wait for a specific byte, we can simply wait for new_rx_data to be high and rx_data to be the value we want. This is exactly what we will do later.\nTransmitting Data\nTransmitting data is a tiny bit more complicated since we now have three signals. The signals avr.new_tx_data and avr.tx_data are exactly the same as their rx counterparts, except this time they are inputs to the transmitter, so we generate the values. When we want to send a a byte, we set tx_data to be that byte and pulse new_tx_data high for one clock cycle (if you left it high, the same byte would be sent over and over). There is one more thing to consider, that is that the transmitter can't send an entire byte every clock cycle (the fastest we can provide data). Therefore, we need to look at the third signal, avr.tx_busy, to know when it is safe to send more data. This signal will be high when the transmitter is busy. When it is busy, any new data will be ignored. That means we must ensure that this signal is low before we attempt to send any data if we want to ensure we don't drop any bytes.\nWe will now create two new modules that will deal with all these signals to send \"Hello World!\" when an \"h\" is received.\nROMs\nBefore we get too deep into generating and handling these signals, we need to create a ROM (Read Only Memory).\nOur ROM will hold the message we want to send, in our case \"Hello World!\".\nCreate a new module named hello_world_rom and add the following to it.\n\nWe have a single input, address, and a single output, letter. We want to output the first letter, \"H\", when address is 0 and the second letter, \"e\", when address is 1. This continues for each letter in our message.\nThis is actually pretty simple to do. First we need an array of the data we want to send. This is done in the following line.\n\nHere we are using a string to represent our data. Strings of more than one letter are 2D. The first dimension has an index for each letter and the second dimension is 8 bits wide.\nNote that the text is reversed. This is because we want, as the comment says, for \"H\" to be the first letter. Also note that \"\\n\" and \"\\r\" are actually single characters each. That means when we reversed the text we didn't write \"n\\r\" which would be wrong. These characters will make sure the text is on a new line each time it is sent. \"\\n\" goes to the next line and \"\\r\" returns the cursor to the beginning of the new line.\nNext, we simply need to set letter to the correct value in TEXT based on the given address. We do that on line 9.\n\nSince the text is reversed, we can simply output the corresponding letter.\nThis wraps up the ROM!\nThe Greeter\nThis is where we will talk to the avr_interface module to actually send and receive data.\nCreate a new module named greeter and fill it with the following.\n\nThe inputs and outputs should look a little familiar. They will connect to the avr module in mojo_top.\nWe are using the constant NUM_LETTERS to specify how big the ROM is. In our case, we have 14 letters to send (this includes the new line characters).\nFSMs\nOn line 15 we instantiate an FSM.\n\nfsm is similar to dff in that they both have .clk, .rst, and .d inputs and a .q output. They behave much the same way, with one important exception. FSMs are used to store a state, not a value.\nIn this example, our FSM can have one of two states, IDLE or GREET. In a more complicated example we could add more states to our FSM simply by adding them to the list.\nTo access a state, we can use state.IDLE or state.GREET. This is done in the case statement (covered below) as well as when we assign a new state to state.\nFunctions\n\nHere we are declaring a counter that will be use to keep track of what letter we are on. That means we need the counter to be able to count from 0 to NUM_LETTERS - 1. How do we know how many bits we will need when NUM_LETTERS is a constant? We could simply compute this by hand and type in the value. However, this is fragile since it would be easy to change NUM_LETTERS and forget to change the counter size. This is where the function $clog2() comes in handy. This function will compute the ceiling log base 2 of the value passed to it. This happens to be the number of bits you need to store the values from 0 to one minus the argument. How convenient! Just what we needed.\nIt is important to note that this function can only be used with constants or constant expressions. This is because the tools will compute the value at runtime. Your circuit isn't doing anything fancy here. Computing this function in hardware would be far too complicated for a single line to properly handle.\nSaying Hello\nWe instantiate a copy of our hello_world_rom and call it rom so we know what data to send.\nSince we are only going to be sending the letters from the ROM, we can wire them up directly to tx_data.\n\nWe also can set the ROM's address to simply be the output of our counter since that's what the counter is for!\nCase Statements\nCase statements are an easy way to do a bunch of different things depending on the value of something. You could always use a bunch of if statements but this can be way more compact and easier to read.\nThe general syntax for a case statement is below.\n\nBasically, you pass in some expression and then have a bunch of blocks of statements that are considered based on the value of that expression. It sounds way more complicated than it is. Let's look at our example.\n\nWhen state.q is state.IDLE, we only look at the lines 30-32. However, when state.q is state.GREET we only look at lines 35-40.\nPutting it all Together\nSo how does it all work? Since IDLE was the first state we listed, it is, by default, the default state. You can specify an alternate default state by using the parameter #INIT(STATE_NAME).\nBecause we start in the idle state, the counter is set to 0 and we do nothing until we see \"h\". To wait for \"h\" we wait for new_rx to be high and rx_data to be \"h\".\nOnce we receive an \"h\", we change states to state.GREET\nHere we wait for tx_busy to be low to signal we can send data. We then increment the counter for next time and signal we have a new letter to send by setting new_tx high. Remember we already set tx_data as the output of our ROM.\nOnce we are out of letters, we return to the idle state to wait for another \"h\".\nAdding the Greeter to mojo_top\nFinally we need to add the greeter module to mojo_top\nFirst, let's add an instance of it.\n\nNext, we need to connect it up.\n\nThat's it! Go ahead, build your project and load it on your Mojo. You can then fire up a serial monitor and send \"h\" to your board to be nicely greeted!\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/","title":"ROMs and FSMs"},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"body":"This tutorial will cover how DRAM (Dynamic Random Access Memory), or more specifically SDRAM (Synchronized DRAM), works and how you can use it in your projects. We will be using the SDRAM Shield.\nWhat is RAM?\nIt is first important to understand what RAM is in general before diving into a specific type. RAM is simply a large block of memory that you can access more or less at random very quickly. It provides temporary storage for your design for things like images, video, or sampled data. In some applications it can even be used to store the instructions and data for a processor.\nNotice the word temporary I used. This is because RAM is a volatile form of memory. That means without power, the contents of the memory will be lost.\nRAM is organized into banks, rows, and columns. I like to think of RAM as a set of notebooks where each notebook is a bank, each page is a row, and each line is a column. Each bank, or notebook, can be accessed independently of the other banks. Each bank is comprised of many rows and each row has many columns. To access a specific piece of data you must specify all three pieces of information, the bank, row, and column.\nThe actual protocol required to access data depends on the type of RAM being used. However, all RAM breaks our a very similar interface. You generally have an address input, which specifies the row and column, a bank select input, which specifies the bank, a data input/output, which is used for reading and writing data, and a few control signals.\nHow DRAM works\nSo now you know that any type of RAM is used to store large amount of data, how does it actually store this data?\nThe basic storage element behind DRAM is the capacitor. Just as a basic refresher, a capacitor is a device that is able to store a charge. You can think of them much like a balloon. Just as you can fill a balloon with some air, you can fill a capacitor with some charge.\nThe basic cell in DRAM looks like the following.\n\nThere is simply a capacitor that stores a charge, and a transistor that allows charge to either be put into the capacitor or taken out.\nThese cells are arranged into a large 2D array of rows and columns. These are the same rows and columns from before.\nWhen you write data to DRAM, charge is placed on capacitors that should have a value of 1, but no charge is placed on capacitors that have a value of 0.\nWhen you read data from DRAM, the charge on the capacitor is measured using a circuit called a sense amplifier. If the sense amplifier detected charge on the capacitor then it outputs a 1, otherwise it assumes the cell was a 0.\nThere are a two main problems to the fundamental design of DRAM. First, to read the charge from the capacitor, the charge must be drained. This causes all reads to be destructive. Once you read a piece of data from DRAM, the value is no longer being stored in the memory array. To deal with this, the data must be written back into the array when you are done with it. This is called precharging.\nTo make the interface to DRAM a bit more efficient, an entire row is read into a buffer in the DRAM. The process of reading a row into that buffer is referred to as opening or activating the row. Once a row is open, data can be read or written to any columns in that row without having to open it again.\nHowever, only one row per bank can be open at a time. To read from a different row in the same bank, you must first precharge the current row, then open the new row.\nThe second fundamental flaw of DRAM, and the reason it is called dynamic RAM, is that capacitors leak charge. That means that once a charge is stored on a capacitor, it will start losing that charge. This happens either through the transistor connected to it, or through the capacitor itself. What this means for your data is that, if neglected, the values stored will be lost.\nThe fix to this problem is to periodically refresh each row. A refresh consists of simply reading a row then writing it back into the array. This process ensures that the capacitors retain their charge.\nThe amount of time a row can go between refreshes depends on the DRAM. However, the SDRAM chip on the SDRAM Shield, must be refreshed every 64ms.\nGenerally, SDRAM will be able to perform the refresh operation for you. However, you still must tell it when to refresh.\nDRAM vs SDRAM\nThe difference between these two types of RAM is that SDRAM is synchronous and DRAM is not. All this means is that the SDRAM uses a clock while DRAM does not. The benefits to SDRAM are that inputs and outputs are synchronized to whatever it is connected to, in our case the FPGA, as well as some speed benefits due to pipelining.\nSDRAM is much more common than plain DRAM.\nIt is also worth noting that DDR (Double Data Rate) RAM, usually heard in the context of computers, is a form of SDRAM.\nDRAM vs SRAM\nThe difference between DRAM and SRAM is a bit more interesting. SRAM operates fundamentally differently than DRAM. It doesn't store data on capacitors, but instead uses two inverters back to back.\n\nThis solves the two problems discussed earlier about destructive reads and forgetting the value. However, this comes at a price, literally. SRAM is much more expensive than DRAM due to the fact that the technology is much less dense. Each cell in SRAM is much larger than each cell of DRAM, meaning you can't pack nearly as many into the same area.\nSRAM is, however, faster and uses less power than DRAM. Because of this, it is still used frequently in digital systems for things like caches. Modern CPUs have something like 8-16MB of very fast SRAM cache, but the computer can have 1000x that much (8+GB) DRAM.\nThe Controller\nCreate a new project based on the Base Project. We now need to add the SDRAM controller to our project. In the Component Selector, select Controllers/SDRAM Controller. We also need the pin definitions for the SDRAM Shield, so also check off Constraints/SDRAM Shield. Add these to your project.\nOpen up the sdram.luc file and take a look at it. It can be helpful to have the datasheet for the SDRAM chip open.\n\nThis module uses some new advanced features that we haven't covered yet so let's get right into it.\nStructs\nThe most obvious new part to this module is the the use of structs. In this case, two structs are declared in the global namespace Sdram.\n\nYou can declare structs inside your module, but they are then local to your module and can only be used internally (not in port definitions).\nA struct definition consists of the struct keyword, followed by the name of the struct, followed by the list of the struct's members. A member declaration consists of a name, an optional struct type, and an optional array size.\nTake a look at the following example.\n\nIn this example we have two structs, color and display. The color struct has three members, red, green, and blue, each an 8bit array.\nThe display struct is a bit more complex. The first two elements, x and y are 12bit arrays, but the third, pixel is itself a struct of type color.\nThe &lt;name&gt; notation is used to specify the struct type. This can be used with struct members, input, output, inout, sig, and dff types.\nAccessing Struct Members\nNow that we know how to declare a struct, we need to be able to access its members. Let's look at another example.\n\nThe members of a struct are accessed the same way as the d/q signals of a dff or the signals of a module instance.\nThe SDRAM controller uses two other structs defined in memory_bus.luc. These are split into a different file as they may be used by other modules besides the SDRAM controller.\nThe Interface\nTake a look at the ports of the SDRAM controller.\n\nWe have the canonical clock and reset inputs. We then have a bunch of IO condensed into 4 lines by using structs. The connection to the SDRAM chip consists of an output and an inout. The interface from the controller to the rest of the FPGA is broken into an input and an output. Take a look at the struct definitions for details of their contents.\nCommands\nThe SDRAM chip accepts a series of commands that we define as constants for easier use.\n\nThese commands connect to the CS, RAS, CAS, and WE pins on the SDRAM. See page 31 of the datasheet if you want to know more.\nThe FSM\nThe entire controller is based around a single FSM.\n\nThe relations of these states can be summed up in the state diagram shown below. The WAIT state wasn't shown for clarity.\n\nWhen the board is powered on (or reset) the FSM starts in the INIT state. SDRAM requires a bit of initialization before you can read and write to it. This is also covered in the datasheet (page 42) for those curious.\nAfter the board is initialized, it sits in the IDLE state until one of two things happen, either it's time to perform a refresh or there is a pending operation.\nFirst, let's talk about the refresh. To manage the refreshing, there is a timer that tells the controller to send another refresh operation. The SDRAM requires 8,192 refresh commands to be sent every 64ms. That means you can either send a refresh command every 7.813µs or all 8,192 commands in a batch every 64ms. To provide a more uniform interface, this controller sends the refresh commands evenly spaced. This limits the maximum amount of time the controller will be busy doing refreshes. In some applications where you need very fast burst speeds, but have some known down time, performing burst refreshing can be better.\nWhen a read or write command is pending, the controller first checks to see if the row is open. If the requested row is already open, life is great, it simply reads or writes to the row. If the row isn't open then it first opens the row before performing the operation. The worst case is if there is already another row open. In this case the other row must be precharged, before the controller can open the new row and perform the operation.\nEach of these operations has some number of cycles the SDRAM requires to complete (the reason for the WAIT state). These sometimes vary with the clock frequency (in other words, they have a set amount of real time). This controller assumes a clock rate of 100MHz. This is important for other reasons as well that will be discussed a little later. All of these delays and timing specifications can be found in the datasheet (many of them are on pages 27-28).\nThis mostly sums up how the controller works. If you want an even deeper understanding, you need to take a look at the rest of the code in the controller as well as the SDRAM datasheet.\nHowever, there is some advanced voodoo magic going on in the controller code that is worth mentioning.\nDealing with the Hardware\nWhen you start interfacing with a relatively high speed external device, you start having to deal with FPGA specific details. There are two hardware related issues addressed in the controller. The first is that the FPGA can't route a clock signal directly to an output pin. This is because the clock and general logic of an FPGA share different routing resources and there isn't a way for the clock signal to move back into the general routing system. However, we can use an ODDR2 primitive to compensate for this.\n\n\nThis is the instantiation of a ODDR2 module. If you look the project files, you will notice there is no xil_ODDR2.luc file. This is because this isn't really a module, but rather an FPGA primitive. ODDR2 or Output Double Data Rate 2, is a primitive that is generally used to output data on both the rising and falling edges of the clock (hence, double data rate). However, in this case we are using the ODDR2 to simply output our clock signal. You can't output the clock signal directly due to how the FPGA is structured internally. So instead, you can use the ODDR with the data pins wired to 0 or 1.\nWhen C0 has a rising edge, D0 is output until C1 has a rising edge. At that point D1 is output. Notice that in our case C1 is actually just the clock inverted. That means D0 is output when the clock rises and D1 is output when the clock falls.\nYou may be thinking now \"Ok... but if D0 is output when the clock rises, shouldn't D0 be 1 and D1 be 0\"? Very good my young padawan. That is exactly right if you wanted to output to be the same as the clock. However, we don't want this. We want the output clock to be our clock inverted!\nWhy the *&amp;^$# would we want the clock to be inverted? Wouldn't that mean that the SDRAM would read it's inputs and change it's outputs on our falling edge? Oh wait... that's exactly what we want! We want this because that gives both devices half a clock cycle for their output to become stable before the other device. This all has to do with satisfying setup and hold times of both devices. If you don't know what the means, check out the External IO Tutorial.\nTiming is the other hardware related issue we need to account for and we will use another FPGA primitive, the IODELAY2, to deal with it.\n\n\nAs you may have guessed from the name, the IODELAY2 block provides a delay to inputs and outputs. In this case we are using it to delay the clock being output to the SDRAM. There are a lot of features of these primitives that aren't being used here. However if you want t check them out in their full glory, take a look at the UG381 document from Xilinx (ODDR2 starts on page 62 and IODELAY2 starts on page 74).\nWe need the delay because simply inverting the clock doesn't quite ensure timing is met. We need to shift it a little more.\nThe important values here are DELAY_SRC is set to make the IODELAY2 delay an output and ODELAY_VALUE is how much we want to delay the signal.\nThe actual amount of delay that is given per step of ODELAY_VALUE is a bit fuzzy and will actually vary over temperature and voltage in the Spartan 6 chip. However, with a 100MHz clock, using a delay of 100 (maximum is 255) ensures that the setup and hold times are being met. This delay was found empirically by running lots of tests checking for read/write errors.\nThe last piece to the puzzle is making sure that the input and output registers are packed into IOBs, or Input Output Buffers.\n\nThe dff type has a parameter, IOB, that, when set to 1, will mark that flip-flop to be packed into an IOB.\nWhat the heck is an IOB? An IOB is simply a flip-flop that is embedded in the pin of the FPGA. They aren't in the typical FPGA fabric, but rather right at the inputs and outputs.\nWe want to make sure these registers are packed into IOBs to ensure that there are no additional delays due to the signal needing to propagate through the FPGA.\nTo make sure these registers are actually packed into the IOB, their output/input can't connect to anything other than the top level output/input. If you tried to read these signals in some other part of your design, the tools would be forced to pull the flip-flop out of the IOB, possibly messing up timing. This is why it is important that these signals go directly to the top level inputs/outputs.\nXilinx Primitives\nAt the time of writing this, the IODELAY2 and ODDR2 are the only primitives currently supported by the Mojo IDE. All the supported primitives can be found by typing xil and the auto-complete will list the known modules (the primitives are always prefixed with xil_). More primitives will be added over time.\nThis sums up how the controller works, but now we need to use it for something.\nUsing the Controller\nWhat good is a fancy SDRAM controller if we don't even use it? NO GOOD that what! To demonstrate how to use the controller we are going to create a tester. Our module will write a bunch of stuff to the RAM then read it back to make sure the contents are still there and correct.\nThere is one big problem with creating a tester like this. What do we write to the RAM? It has to be something easily generated because we don't have enough memory to memorize all the values. If we did we wouldn't be using the SDRAM. We could use part of the address, but this causes a very artificial pattern that can fail to detect some problems.\nInstead we will use a pseudo-random number generator. The key word there is pseudo. Which is layman's terms translates to not-really-a-random number generator. This is something that generates random-looking numbers but they are actually completely predictable. That's a great property for us because we need to be able to regenerate the exact same 8,388,608 long sequence of numbers to verify our write.\nFrom the components library add Math/Pseudo-random Number Generator to your project.\n\nThis algorithm is called Xorshift and it simply is a ported version of one presented on Wikipedia.\nThis module will generate a new number each time next is high. It can be reset to start the sequence over. If the value of seed changes, the sequence will be different.\nThis type of number generator is great for hardware because it only uses XOR and shift operations. Both of which are really cheap. However, it isn't a super great random number generator and should not be used for crypto purposes where it isn't good enough to look random.\nThe Memory Interface\nBefore we get into our tester module, we need to understand the interface used for reading and writing the SDRAM. Take a look at memory_bus.luc.\n\nThe interface consists of a master and a slave. The slave in this case is the SDRAM controller (the one receiving commands) and we will play the role of the master by issuing commands.\nWhenever we want to issue a command, we need to first make sure that slave.busy is 0. This indicates that the controller can accept a new command.\nTo issue a write command we set master.write to 1, master.addr to the address we want to write to, master.data to the value we want to write, and finally master.valid to 1 to indicate a new command.\nTo perform a read we set master.write to 0, master.addr to the address to read, and master.valid to 1. The value of master.data is ignored. We then need to wait for slave.valid to be 1. When it is 1, slave.data is the value we requested. Note that slave.busy may go back to 0 before the read is actually complete. This is because the busy flag only says when the controller can accept a new request, not necessarily when it idle. If you issue multiple read requests, they will be processed in the order they are received.\nThe Tester\nCreate a new module named ram_test and copy the following into it.\n\nOur tester has two states, WRITE and READ. We start in the WRITE state and fill up the RAM with random stuff. Once the RAM is full, we reset the number generator and move to the READ state.\nIn the READ state we read each value back and generate the same sequence of numbers again. If the values we read back don't match the number in our sequence, we increment the error counter. The error counter is setup to saturate at 127 error so if there are a ton of errors it will simply max out.\nWe need to be able to see what our tester is doing so we will use the LEDs to show the status. We hook up leds[7] to the state (so we know when it's reading or writing) and the rest to the error counter.\nGenerating the Clock\nIf you've been paying attention (you have haven't you?) you probably noticed that the SDRAM controller says it assumes a clock of 100MHz. However, the Mojo's clock is only 50Mhz. Whatever will do? Luckily the FPGA has a super rad circuit called a PLL that lets you generate new clocks. Even more rad is that there are tools to help us set it up.\nWe are going to be using the Core Generator tool from Xilinx. Support for this tool is built into the Mojo IDE, so simply click Project-&gt;Launch CoreGen.\n\nUnder FPGA Features and Design/Clocking double click on Clocking Wizard.\n\nYou're a clocking wizard Harry!\nChange the name to just clk_wiz because the default is UGLY. Also uncheck Phase alignment (we don't care about that) and set the primary input clock to 50MHz.\n\nOn the next page you shouldn't have to change anything as CLK_OUT1 is already set to generate 100MHz.\n\nOn page 3, uncheck everything because again, we don't care.\n\nSkip page 4 and on page 5, remove the 1 from the signal names. We only have one input and one output so why bother labeling them 1?\nFinally, click Generate.\nOnce it finishes generating the core, you can close all the CoreGen windows. The core should automagically (it's a word, trust me) be under the Cores section of your project.\nThe Top Level\nNow that we have all the pieces we need to hook it all up.\nIf you take a look at the sdram_shield.ucf file we added in the beginning of the tutorial, you'll notice that there are only two signals defined.\n\nThis is setup so that all the signals will pack into the structs defined in the SDRAM controller.\nWe can add them to mojo_top.luc like below.\n\nWe now just need to instantiate our modules and hook everything up.\n\nYou should be able to build your project now. Stack your SDRAM Shield onto your Mojo and load the project! If everything went well, you should see the left-most LED blinking and the other 7 off (no errors). Each time the LED blinks, 32MB of data was written and read back from the SDRAM!\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/","title":"SDRAM"},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"body":"This tutorial will explain how servos work and how to use them in your Lucid projects. We will be using a pre-written module (found in the Components Library in the Mojo IDE) but the module will be fully explained. Enjoy!\nServos, for those unfamiliar, are typically little boxes that have a spline that a servo horn can be attached to. Inside the box is a set of gear, a motor, a potentiometer and some control electronics. What makes a servo useful is that you can simply specify a position and the electronics inside will drive the motor to move the spline to that position. A typical servo has a travel range of a little over 180 degrees. However, you can find servos with more. There are even special servos that act more as a motor and spin continuously. Similar to servos would be electronic speed controllers, or ESC, which can be used to accept the same signal as a servo but will drive a motor for you. These are commonly used in RC hobbies (cars, planes, helicopters, etc.) and can be great for robots.\nThe PWM Signal\nServos require that you send them a PWM signal, but the signal has some special requirements. Typically, a PWM signal will have a duty cycle that ranges from 0% (always off) to 100% (always on). However, a servo uses a much narrower range and it is less helpful to think of duty cycle as it is pulse width.\n\nA typical servo expects a pulse every 20ms, or 50 times per second. The width of these pulses specifies the position of the servo. The center, or neutral point, is generally set with a 1.5ms pulse. It is pretty safe to assume that any servo will then accept +/-0.5ms. In other words, 1ms to 2ms pulses.\nIt's important not to exceed the servo's range as servos are typically stupid and will try to drive the motor past a fixed stopping point potentially burning it out.\nLucky for us, there's a component that will make this super easy.\nControlling Servos\nMake a new Lucid project based on the Base Project and open the Components Library. Add the servo controller, which can be found under Controllers. While you are there, also add the Counter component to your project (found under Miscellaneous).\nBefore I explain how this component works, let's put it to use.\nOpen up mojo_top.luc and make it look like the following.\n\nFirst, I added the servo output. You will also need to add the following to mojo.ucf.\n\nThis will be the pin we use to control the servo.\nThe servo module has a few parameters, but the one you will change most is probably RESOLUTION. This sets how precise you can control the width of the pulse. Most of the time 8 bits will be plenty, but, we will use 16 here just to show off the FPGA (buttery smooth servo motion).\nWe then have a counter that outputs 17 bits with 10 bits of extra division to slow things down.\nThe reason we need 17 instead of simply 16 is because of the neat little trick on line 40 that allows you to use the 17th bit to make the counter count up then count down.\n\nHere we take bit 16 (the 17th bit) and duplicate it 16 times. We then XOR this with the lower 16 bits of the counter. When bit 16 is 0, the XOR with 0 does nothing and the counter behaves exactly as you would expect. However, once bit 16 is 1, all the bits of the output are XORed with 1. XOR with 1 will invert the bits. Inverting the bits is the same as taking the max value and subtracting the counter value from it, so in effect it will start counting down. What will happen is the counter will count from 16h0000 to 16hFFFF then back to 16h0000.\nHere are some images to help explain what is happening.\n\nThis is what a basic counter looks like. As it reaches the max value, it resets back to 0. The areas in gray are where the MSB is 1.\n\nIf we now simply ignore the MSB, we get the same thing but with twice the frequency and half the max value.\n\nFinally, if we use the MSB to invert every other section, we get a nice saw-tooth wave without any discontinuities.\nYou can now build the project and load it to your Mojo.\nPlug a servo into P50, RAW (make sure the Mojo is powered with 5V), and GND. The servo should move back and forth. You should notice that the servo stops at both extremes for a short period. This will be explained in the next section.\nThe Servo Controller\nNow we will take a look at the controller itself.\n\nThis module is pretty dense due to all the stuff to make it easily configurable.\nLet's first talk about the parameters. CLOCK_FREQ is used to specify the clock frequency (who would have guessed?). For the vast majority of projects, this will be 50MHz, or 50,000,000Hz. CENTER_WIDTH is used to specify the neutral point for the servo. As mentioned before this is typically 1.5ms. All the time parameters are specified in micro seconds so this is 1500 by default. MIN_MAX_DIFF is used to set how much the pulse can vary off center. Since most servos accept 1-2ms pulses, 500us gives us exactly that (1500 +/- 500 = 1000 to 2000). PERIOD is used to specify how often a pulse occurs. Again, 20ms is typical so 20000us is used.\nFinally, RESOLUTION we already talked about. It is the number of bits used to specify the servo's position. Note that there are some kinda crazy looking restrictions on this parameter. This is because there's a limit to how high this can be. It's the number of bits needed to represent the number of clock cycles in the difference between the min and max pulse widths. By default, the difference is 1ms and we have a clock of 50MHz. This means there are 50,000 clock cycles, or 50,000 possible steps we can use for the pulse width. Since you need 16 bits to represent this, 16 is the maximum value RESOLUTION can take.\nNote that the way this is setup is very different than is you use PWM on something like an Arduino to control a servo. There if you use a 16bit counter, you will only get a small sliver of that in actual usable resolution. Most of it will be wasted in waiting for the reset of the pulse period. The FPGA can achieve a MUCH higher resolution than any microcontroller I've ever seen.\nThe constants on lines 61 to 67 are just some more calculations for all the flexibility. TOP is the value to reset the timer at so we get a period of exactly PERIOD. MIN_MAX is the number of clock cycles to allow in either direction of the center. SHIFT is the number of bits to shift our input position by if we aren't operating at maximum resolution.OFFSET is the offset to use to make sure the pulse width is CENTER_WIDTH when the input position is half of its max value.\nWhen the counter reaches its maximum value (TOP - 1), we reset the counter and update the position value. The reason we update the value here is because it prevents us from updating when the pulse could be active. If the pulse could be active and we change the desired position, we could get half a pulse which causes servos to glitch (jitter).\nHere we also cap the values of the position so that we never output a pulse outside the set bounds. This is why the servo pauses at either extreme as it sweeps back and forth. The two extremes have values that aren't being used but the counter sweeps them anyways. If we wanted to open these up, we could simply set MIN_MAX_DIFF to be a bit larger.\nFinally, we output a 1 only when the shifted position plus offset is greater than the counter.\nThat's it for this module! You could totally use the PWM component instead, but you would have to do a lot of calculations to set the TOP value correctly and then you would need to be careful about what duty cycle you requested to not damage your servo. With this module, you don't have to think about the details and it won't let you send values outside the range you specify.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/servos/","title":"Servos"},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"body":"In this tutorial we will use the Microphone Shield to locate the direction that sound comes from. This is a fairly advanced tutorial that pushes the limits of what you can do with the Mojo.\nWe will start by covering the theory and working into how to implement this on the FPGA.\nMicrophone Shield\n\nThe Microphone Shield has seven PDM, or Pulse Density Modulation, microphones. This type of microphone has a digital interface. You supply a clock and they output a series of bits. The density of these bits represents the magnitude of the audio being detected. Wikipedia has a good article on this.\nThe shield also has 16 LEDs that are arranged in a ring and multiplexed over the Mojo's existing LEDs. \nWe will be using these LEDs to visually output the sound direction.\nTheory of Operation\nThe idea is that we will record a short sample of audio from all seven microphones at exactly the same time. We can then use these samples to calculate the delay between the ring of microphones and the center microphone. These delays can be used to detect the direction of the sound's source.\nFor this to work, we need to make a few fairly reasonable assumptions. The first is that all sound comes from the sides of the board and not from above or below. This is required because we only have a 2D grid of microphones. The second assumption is that sound waves have a straight wavefront. This isn't typically true as sound originating from a point will have a curved wavefront, but as long as the source isn't too close it'll be a reasonable approximation. inally, we assume that each frequency in a sample comes from a single direction.\nSo how do we go about calculating the delays between the microphones? If we had a simple pulse and everything was quiet, it would be quite easy by just looking at the peak of the pulse in each sample. However, the real world is hardly that nice. Instead, we will be using the phase of the different frequencies in each sample. This has two major benefits: the phase is pretty easy to calculate with an FPGA by using a fast fourier transform (FFT), and the other being that we can detect multiple sound sources as long as their frequency components are different enough. Imagine a bird chirping and someone talking. The bird chirps will be substantially higher pitch than the person talking, and we should be able to detect these simultaneously.\nIf you aren't familiar with FFTs, don't worry too much. All you need to know for this example is that a Fourier transform takes a signal in the time domain, meaning the x-axis of the sample is time, and converts it into the frequency domain. It tells you what frequency sine waves (and their magnitudes) you would have to add together to get the exact same signal back. If you've ever seen a music equalizer, you've seen an FFT in action. This is exactly what the demo of the Clock/Visualizer Shield does.\nSo after collecting a short sample from all seven microphones, we can run each one through an FFT to get the frequency components. The FFT output for each frequency is a complex number. The real portion of the number corresponds to the magnitude of the sine portion, and the imaginary portion corresponds to the cosine portion. By adding together sine and cosine waves of varying amplitudes, you can create a sine wave with any phase.\nThe raw output of the FFT isn't particularly useful to us. Instead, it would be much better if we knew the phase and magnitude of each frequency. To do this, we need to convert the complex number, which can be thought of as converting a Cartesian coordinate (if that helps you) into a polar coordinate. Basically, if we were to plot the complex number on a regular 2D space, instead of the x and y position of the coordinate, we want to know the angle and distance it is from the origin. Again, this isn't too bad to do with an FPGA, as you'll see later.\nWith the phase of each frequency calculated, we can subtract the phase of the center microphone from each of the surrounding six microphones to get a phase offset for each one. Using the formula delay = phase offset / frequency, we could calculate the delay for that frequency. However, scaling the delay by a constant factor (the frequency) for all six microphones won't make a difference later, and we can use this fact to avoid a costly division in the FPGA. Instead, we will simply use the phase offsets as if they were the delays, since they are proportional to them.\nNow that we have a delay for each microphone relative to the center microphone, we need to combine these to get an overall direction. To do this, we need to scale each of the microphone's location vectors by their corresponding delay and sum them. This will give us a single vector pointing in the direction of the sound source.\nThe following figure shows this geometrically. I drew in only three microphones for simplicity. Adding the other three would make the sum of the scaled vectors twice as long but wouldn't change the direction due to symmetry. I also drew this so that the sound is coming from the y direction and the microphones are rotated by ϕ instead of the sound coming in at angle ϕ. This will make it a little easier to show that this method works later. The black circles represent the locations of the microphones, and their coordinates are labeled.\n\nThe delay of each microphone to the origin (center microphone) is proportional to the y value of the microphone's location. We can draw these in, as shown below.\n\nIf we take the location of each microphone and scale it by the corresponding delay, we get the new purple lines shown in the next figure. Note that the bottom microphone has a negative delay, so the vector points in the opposite direction.\n\nFinally, we can take the three scaled vectors and sum them together by moving them tip-to-tail. This is shown by the light purple lines below. The orange vector is the result of the summation of the three scaled vectors.\n\nNotice that the x components of the summed scaled vectors cancel, so the resulting sum points only in the positive y direction. To prove that this method works, we need to show that the x components cancel and the y components sum to a positive value for any value of ϕ. We don't care about the magnitude of the resulting vector, only the direction.\nIt's fairly easy to prove this is true but I'm not going to reproduce the proof here. If you are curious it is fully covered in my book.\nNow that we have the angle for the frequency, we need to aggregate each angle into something useful. I chose to bin them into 16 directions so that it would be easier to use and display them on the LEDs. I used the magnitude from the center microphone to weight the importance of each frequency's contribution. This was done by iterating through each frequency, determining the bin it belonged to, and keeping a running total of the magnitude of each bin.\nThe final output is the 16 values representing how much noise came from that direction.\nImplementation Overview\nNow that we have an idea of how this is going to work, we need to come up with a plan for implementing this in hardware.\nFirst, we need to gather the audio samples from all seven microphones at exactly the same time. The microphones on this shield are PDM microphones, meaning that they provide a series of 1-bit pulses at a high rate (2.5 MHz in this case) that we can pass through a low-pass filter (basically, a moving average) to recover the audio signal. We also decimate the signal by a factor of 50, so our sampling rate becomes 50 KHz.\nWith the seven audio samples captured, we need to feed each of them through an FFT to extract their frequency information. The output of the FFT is complex numbers, but we need it to be in phase-magnitude form, so we then pass these values through a module that calculates the new values.\nWith the phase-magnitude representation of all the samples, we can then subtract the phases of the six surrounding microphones from the center one to get the delays. We need to be careful here because after the subtraction, the phase difference can be outside the +/– pi range. If it is, we need to add or subtract 2 pi to get it back into range.\nThe calculated phase differences are equal to the delay multiplied by the frequency. Because we are working with one frequency at a time, it is really just the delay scaled by a constant. We can use this fact to avoid having to divide by the frequency.\nWe then scale the six microphone location vectors by the corresponding phase differences (delays) and sum their components. This gives us a vector that points in the direction of the sound source for this frequency. However, we care only about the direction of this vector, as the magnitude is pretty meaningless. We can convert the Cartesian vector into a phase-magnitude representation by using the same module as before to extract the phase (angle).\nRepeating this process for all the frequencies gives us an angle for the direction of sound for each frequency. We can pair each of these directions with the magnitude (volume) of that frequency from the center microphone to find out how relevant it is.\nThis in itself could be the output of our design, but it is a little more useful to bin the directions into a handful of angles. In our case, we will assign each into one of 16 equally spaced bins. All the magnitudes of the frequencies that fall into a bin are summed to get that bin's overall magnitude. These 16 sums are the final output and represent the amount of sound that came from each bin's direction.\nWe could implement this design as a full pipeline with each stage simply feeding into the next. The following figure shows what that could look like.\n\nThis design would have the highest throughput, but it would also take up a lot of resources. In fact, it would take up way more than we have available in the Mojo's FPGA. However, we can instead perform each step in sequence and take advantage of the fact that a lot of the steps require the same operations, just on different data. In a full pipeline we would need seven FFTs and eight CORDICs (the Cartesian-to-phase-magnitude converts). However, we can reuse just one of each and save a ton of resources.\nThe following is a drawing of the data-path of the circuit. The data-path shows the way data flows through a design, but it does not, for simplicity, show the control logic that controls the multiplexers and other flow decisions. The fully pipelined version doesn't need any control logic because the data just flows from one end to the other. However, we will need to create an FSM to control the compact version. The steps the FSM will need to take are outlined in the following paragraphs.\n\nFirst, samples from the microphones pass through the decimation filter and are stored in the RAM. The RAM is organized into seven groups of two (14 RAMs total), each 16 bits wide. The seven groups correspond to the seven microphones, and two RAMs in each group will store even and odd samples, respectively. The reason for the 7 x 2 arrangement will become clear later.\nWhen the blocks of RAM are full of sample data, the data is passed one channel at a time to the FFT. The data is also passed through a Hanning window (not shown) to minimize leakage in the FFT. The purpose of this is outside the scope of this book, but it comes down to multiplying the samples by the Hann function that is stored in a ROM. The output of the FFT is fed into the CORDIC to convert it to phase-magnitude format and then written back into the RAM, overwriting the original channel's sample data. When writing back to the RAM, the seven groups still correspond to each channel, but the two values in each group now are for the phase and magnitude values instead of even and odd samples. By having these two values in different RAMs, we can easily read or write them simultaneously. This is repeated seven times, once for each channel. After this step is done, the RAM contains phase and magnitude data for each channel.\nBecause the sample data we are feeding into the FFT is all real (no imaginary components), the output of the FFT will be symmetrical. This means that even though each frequency has two values related to it, we have half the number of frequencies as we did samples, so we have the exact same number of values to store in the RAM.\nThe next step is to take the phase-magnitude data for each frequency and pass it through the direction calculator to get the directional vector for that frequency. The angle (phase) of that vector is then extracted using the same CORDIC as before. The output is then saved back into the RAM. This time, we write the data to group 0, as we don't need the phase-magnitude data for this microphone (nor microphones 1–5) anymore.\nFinally, we feed the phase data from the last step and the magnitude data from microphone 6 (the center microphone) into the aggregator. The aggregator adds each sample to its corresponding bin and outputs the final results.\nEven with all this reuse, this design still use 77% of the LUTs, 32% of the DFFs, and occupies 94% of the slices in the Mojo. It just fits!\nImplementation\nNow that we have a road map of what we need to design, let's get into the code. You can find the full source as an example project in the Mojo IDE. To view it, create a new project and select Sound Locator from the From Example dropdown in the New Project dialog.\nWe will start with the microphones and work our way through the steps of the sound locator.\nPDM Microphones\nThis project relies on PDM microphones. These are a common type of microphone and easy to interface with an FPGA because they have a digital output. As noted previously, PDM stands for pulse-density modulation, which means that the density of pulses is correlated to the pressure on the microphone. Because of this simple interface, we need a lot of pulses to be able to get any real definition of the underlying signal. The microphones on the Microphone Shield can output between 1 and 3.25 million pulses per second, depending on the clock provided to it. In our design, we will use the nice middle value of 2.5 million per second.\nTo convert this high-frequency, low-resolution pulse train into a more useful lower-frequency, higher-resolution signal, we will use a cascaded integrator–comb (CIC) filter. This type of filter is useful for changing sampling rates, decimation (decrease), or interpolation (increase). Lucky for us, Xilinx's CoreGen tool can be used to generate the filter.\nIf you have the full Sound Locator project open, you can launch CoreGen and take a look at the decimation_filter core. It was created from the CIC Compiler version 3.0, which can be found under Digital Signal Processing → Filters → CIC Compiler and is shown in the following image.\n\nHere we specify that it is a decimation type filter and should have a decimation rate of 50. This will convert the 2.5 MHz input into 50 KHz output. Take a look at the frequency response chart, which shows that it is a low-pass filter. You can play with the other parameters to get it to attenuate the higher frequencies more at the cost of more hardware. For our use, it doesn't really make a difference.\nIf you look at the second page, shown below, it shows the filter is capable of outputting 25 bits per sample. However, this is set to 20, so the last 5 bits are truncated. This was found empirically to be a good value for sensitivity, and we will be using only 16 bits for each sample anyway. The extra MSBs will be used to check for overflow but will otherwise be ignored.\nWe also have this set not to use Xtreme DSP Slices, as we don't have enough to spare in the FPGA. This option will use the built-in multipliers when selected instead of using the general fabric of the FPGA. However, it will use two multipliers per filter, and we have seven filters. The FPGA on the Mojo has 16 multipliers, so 14 just for this stage would be way too much.\n\nFor more information on the CIC filter, check out the Xilinx LogiCORE documentation.\nArmed with the filter, we can now look at the pdm_mics.luc file to see how it is used.\nIn this module, we need to generate a clock for the microphones. This is a 2.5 MHz signal that is 1/20th of the 50 MHz system clock. To do this, we can use a counter that counts from 0–9 (10 cycles) and toggle the clock each time it overflows. We can detect overflows when the MSB falls.\nOn each rising edge of the microphone clock, we have another bit of PDM data from each microphone. We first need to convert the single-bit value of 0 or 1 into a 2-bit signed value of –1 or 1 for the CIC filters.\nAll that's left is to feed the data into the CIC filters and output the data from them after converting it to 16 bits. The CIC filter data is signed, so when we convert to 16 bits and want to saturate on overflows, we need to check for negative and positive overflow separately:\n\nFFT\nBefore we jump into the sound_locator module, let's take a look at the two other cores we need from CoreGen: the FFT and CORDIC cores. Again, with the Sound Locator project open, fire up CoreGen from the Mojo IDE and take a look at the xfft_v8_0 core.\nThe first page of the FFT wizard, shown below, allows you to choose the number of channels (the number of FFTs you want to compute at once), the transform length (number of samples), the system clock, and the architecture. We will be using 512 samples per iteration, which seems to be a nice balance between latency and accuracy. The FFT architecture is set to Radix-2 Lite, Burst I/O, which will result in the smallest implementation at the cost of speed. We don't care that much about speed, but resources are at a premium. Even at the slowest architecture type, it will take only 5,671 cycles to compute the transform. With our 50 MHz clock, that is a small 113.4 μs (about 1/10,000th a second). The fastest architecture is about five times faster, but takes a lot more resources that we don't have. We could likely use the next size up for a modest speed improvement, but, again it won't make an appreciable difference for this use. It takes 100 times longer for us to capture the sample in the first place.\n\nOn the second page, we specify more details about the internals of the FFT. We are using fixed-point data, so the data format is set to fixed point. The samples from the microphones are 16 bit, so that's what the input data width is set to. The phase-factor width is the size of some values stored in a ROM that are used when computing the FFT. Higher values will result in a slightly more accurate result. The accuracy for our purposes isn't too important, as 16 bits is more than enough.\nScaling is used to save resources. Without scaling, the values continue to grow in the different FFT steps that require a much wider data path. However, if you enable scaling, you need to provide a scaling schedule that tells the FFT core when to truncate data. This is set at runtime, and I found one that worked well for the microphone data using Xilinx's Matlab module that simulates the FFT.\nThe rounding mode option is another trade-off of accuracy and resources. Truncation is basically free, while convergent rounding has a small cost.\nThe control signals are fairly self-explanatory; you can enable a reset and a clock enable if you need them. We need only the reset.\nAn FFT will naturally produce values in bit-reversed order. For an FFT of eight samples, the output order would be 0, 4, 2, 6, 1, 5, 3, 7. In binary, this is 000, 100, 010, 110, 001, 101, 011, 111. If you reverse the bits around, this becomes 0, 1, 2, 3, 4, 5, 6, 7. If you can work with the output in this order, the core can load and unload data simultaneously. Otherwise, loading and unloading must take place in different stages. By enabling XK_INDEX in the Optional Output Fields section, we get the index of each output value, so the order doesn't really matter for us.\nFinally, the throttle scheme is to specify whether whatever is receiving the output can stop the core from outputting data. In other words, will the hardware using the output ever not be able to accept data? If it can't for any reason, you need to use Non Real Time. This enables the m_axis_data_tready flag to signal that data can be output. If you set this to Real Time, it will spit out data as soon as it is ready, no matter what. In our case, we are feeding the data into the CORDIC core, which can be busy, so this needs to be Non Real Time.\n\nThe final page of the wizard, shown below, is all about hardware usage. The first section, Memory Options, allows you to choose whether you want to use block RAM or distributed RAM. We have plenty of block RAM left over in our design, so it only makes sense to take advantage of it.\nIn the Optimize Options section, choose to use the DSP multipliers. The FPGA on the Mojo has 16 of these, which should be used when you can. For the CIC filter, we set it not to use these because they would use two each, and we have seven filters, so it would take a total of 14 multipliers. That is too much (our design only has eight extra). In this case, the FFT will use only three, and we can spare them. You can see how many it will use under the Implementation Details tab on the left side of the wizard.\nIn general, if you have special resources available (block RAM and DSPs, in this case), use them. They will generally make your design faster and smaller, and if you don't take advantage of them, they will still be sitting in your FPGA.\n\nFor more information on the FFT core, check out the Xilinx LogiCORE documentation.\nCORDIC\nCoordinate Rotation Digital Computer (CORDIC) is an algorithm for efficiently calculating hyperbolic and trigonometric functions. The algorithm is capable of rotating vectors that can be cleverly used to convert to/from Cartesian and polar (magnitude and angle) notations, compute sin and cos, compute sinh and cosh, compute arc tan, compute arc tanh, or even compute square roots. We will be using it to convert from Cartesian to polar coordinates.\nOpen the mag_phase_calculator core in CoreGen.\nOn the first page of the wizard, as shown in the first image below, we have options to specify the mode of operation as well as accuracy, latency, and area trade-offs.\nThe Functional Selection option selects the mode of operation. In our case, Translate is selected for Cartesian-to-polar conversion.\nThe Architectural Configuration option gives an area versus latency trade-off. The Parallel option allows the core to spit out a new value every clock cycle by replicating a bunch of hardware. The Word Serial option reuses hardware but can work on only one value at a time. Optimizing for area, the Word Serial mode was selected.\nThe Pipelining Mode is a performance (maximum clock speed) versus area and latency trade-off. The Optimal option will pipeline as much as possible without using extra LUTs. The Maximum option will pipeline after every stage.\nThe Phase Format option is important, as it dictates the output format. Either option will output a fixed-point value with the three MSBs being the integer portion. For example, 01100000 would be 3.0, and 00010000 would be 0.5. In the Radians case, this value is the angle in radians. For Scaled Radians, this value is the angle divided by pi. We are using radians for simplicity.\nThe Inout/Output Options section is pretty self-explanatory. We are using 16-bit inputs and outputs, and truncation for internal rounding as it is the cheapest option.\nUnder Advanced Configuration Parameters, leaving Iterations and Precision at 0 will cause the wizard to automatically set these based on the output width. The Coarse Rotation option allows us to use the full circle instead of just the first quadrant. Compensation Scaling is used to compensate for a side effect of the CORDIC algorithm. By enabling this, the core will output unscaled correct values at the expense of some resources. You can select the resources to use in the drop-down. In our case, we are using Embedded Multiplier, as we still have a few DSP48A1s to use. We could have used the BRAM option as well, as we have plenty of that too.\nOn the second page of the wizard, as shown in the second image below, you can configure the input and output streams. The TLAST and TUSER options give you extra inputs to the module that will output the values seen when the corresponding inputs have been processed. It's a way to pass along data and keep it in sync. In our case, we will need the address of the values and where the last sample is, so both are enabled. The address size is 9 bits, so we set TUSER's width to 9.\nThe Flow Control option will enable buffers on the input when Blocking is specified. This is more useful when you have the CORDIC in a different mode when both input streams are used, as it will force them to be in sync. The NonBlocking option uses less resources, and there is no real benefit to Blocking for us.\nFinally, we don't care about a reset, as the CORDIC will have flushed itself by the time the FSM ever reaches it upon a reset.\n\n\nFor more information on the CORDIC core, check out the Xilinx LogiCORE documentation.\nNow that we have all the pieces, let's dig into the sound_locator module itself. The module is too big to replicate here in its entirety, but we will dissect the states of the FSM. The FSM has four main stages: CAPTURE, FFT, DIFFERENCE, and AGGREGATE. The CAPTURE state is responsible for storing the microphone samples into RAM. In FFT, these samples are converted into their frequency representation. The DIFFERENCE state takes this information and calculates a direction for each frequency by using the difference in phase for each microphone. Finally, AGGREGATE combines all the data together into the 16 directional bins and outputs the final result.\nCAPTURE State\nThe CAPTURE state is pretty straightforward. We simply wait for new samples to come in from the microphones and write them to RAM, incrementing our address counter until the RAM has been filled.\nThere is a little fancy notation for assigning the address value to all 14 RAM modules because they are in a 7 x 2 array. The first line in this state duplicates addr.q (excluding the LSB) into the 7 x 2 x 8 array.\nThe LSB of addr is used to select between even and odd RAMs. This little quirk is because we want the two RAMs separate for when we store magnitude and phase data in them later. We assign both even and odd RAMs the same data, but enable the write only on the corresponding one.\nFinally, after the RAM is full, we perform some initialization for the next state and move on to the FFT:\n\nFFT State\nIn this stage of the calculation, we have two processes going on. The first is responsible for keeping the FFT feed, and the second is for writing the result from the CORDIC into RAM. The FFT feeds directly into the CORDIC.\nThe feeding process requires a little finesse, because reading from the RAM takes a clock cycle. The flag wait_ram is used to ensure that the RAM is outputting the value for address 0 when we start. If at any point the FFT can't accept more data but we are feeding it data, we'll need to save the value that is coming out of the RAM because on the next cycle it will be gone. When resuming feeding data into the FFT, we then feed it the saved value before resuming reading from the RAM.\nBefore feeding the FFT, we also pass the data through a Hanning window. The Hann ROM has a single-cycle latency like the RAM, so we also need to save its value if the FFT can't accept values. The Hann value and microphone sample are multiplied together. The Hann value is a 1.15 fixed-point number (1 integer bit, 15 decimal bits), so the result of the multiplication is shifted 15 bits to the right before being passed to the FFT. The idea is the same as if you were multiplying two decimal numbers. For example, 2 x 1.3 can be looked at as (2 x 13) / 10. Note that the multiplication should be a signed multiplication, so both operands are wrapped by the $signed function to ensure this.\nOnce we've filled the FFT, we increment the channel and wait for the FFT to be ready to accept more data. After all seven channels have been loaded, we wait for the state to change:\n\nWe need to connect the FFT output to the CORDIC to get the magnitude-angle representation. The CORDIC conveniently lets us pass the address and last flag through it so that it stays in sync with the other data. The tready and tvalid handshaking flags ensure that data is transferred only when there is data and the CORDIC can accept it:\n\nFinally, we need to unload the CORDIC data into the RAM. We have the address to write from the tuser field, and we keep track of the channel number by counting the tlast flags.\nAfter we have unloaded the last of the data from the last channel, we can change to the next state, DIFFERENCE:\n\nDIFFERENCE State\nIn this stage, we subtract the phase of the center microphone from each of the six outer microphones. We then use this difference to scale the microphone's location vectors and then sum the vectors. The single resulting vector is fed through the CORDIC to get its angle, which is then written back to RAM.\nThe first operation that takes place is the subtraction of the phases. The only interesting part here is that we need to keep the resulting differences in the +/– pi range. This is done by checking for overflow and adding or subtracting 2pi. All the operations here are intended to be signed, so everything is wrapped in $signed again to ensure this:\n\nBecause of all the multiplications, the scaling of the vectors and summing them happens over two clock cycles. This adds a little bit of complexity: because the CORDIC can tell us it can't accept new data at any time, we need to be able to stall the pipeline.\nTo do this, we detect the specific case when pipeline data would be lost and revert to the dropped address. The only time this can happen is if the pipeline has been active for at least two cycles before being halted. This method can cause some values to be calculated more than once, depending on the halt/resume patterns, but this isn't a big deal as long as every value is calculated at least once and we continue to make progress. The worst-case pattern would be run, run, halt, run, run, halt, and so on. In this case, we would advance only one address per run, run, halt cycle. However, we would still make progress and cover all the values. The actual behavior of the CORDIC will have many more halts between a single run, and with this pattern we don't repeat any values.\nSome of the scaling is really simple; for example, the first microphone is at (–1, 0), so the x value is just the negated phase difference, and the y component is always 0. However, some require multiplying by sqrt(3)/2. This is done using fixed-point multiplication and a bit shift.\nWith all the scaled phase values calculated, they are summed and then divided by 8, which is the closest power of 2 greater than 6 (the number of microphones). The division is used to keep the values in a 16-bit range:\n\nWe now just need to feed the output of the CORDIC back into the RAM. This is basically the same as the last part of the FFT state:\n\nAGGREGATE State\nIn this stage, we will run through the calculated directions and sum their corresponding magnitudes into 16 directional bins.\nEven though we have 256 frequencies to work with, we will be summing only the ones between 9 and 199. The lowest frequencies aren't too useful, and the highest ones get out of hearing range. These values are set by CROP_MIN and CROP_MAX.\nThe bin selection is performed with a series of if statements that check whether the angle lies in a particular bin's range. Only the 8 MSBs are used to save on the size of the comparisons. It doesn't make a difference if the bin boundaries aren't perfectly precise. These comparisons are all signed, so the constants are wrapped in $signed. The signal angle is declared as signed, so the $signed function isn't required:\n\nFinally, with the different bins full, we can output the values. We first check for overflow and saturate the bin if it did.\nUpon completion, we return to idle and wait for the command to start the process all over again:\n\nThis project is a fairly complicated example, but hopefully it gives you an idea of some of the interesting things you can do with an FPGA.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/","title":"Sound Locating"},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"body":"This is now part of the Alchitry version.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/","title":"Synchronous Logic"},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"body":"This tutorial will walk you through creating your first project and making the onboard LED light up when you press the reset button.\nCreating a New Project\nLaunch Alchitry Labs. After click through the welcome screen, you should see the following.\n\nClick on File-&gt;New Project. In the dialog that pops up enter a Project Name of LEDtoButton. You can leave the default workspace if you want or browse for a different one. This is where all your projects will be stored\nUse the drop-down menu to choose the board you are using.\nLeave the language set to Lucid and From Example set to Base Project. This will copy a bare-bones project as the starting point.\nIt should now look something like this. Note that your workspace will be different.\n\nClick Create to create your project.\nBack in the main window, expand the tree on the left to find the top file inside of Source. This has the name of _board__top.luc. Double click on it to open it in the editor.\n\nThe top file contains all the external inputs and outputs of your design. Your future projects can be built out of many modules, but they all must be sub-modules to this top module. This will be covered more in a later tutorial. For now, we will make all our edits to this file.\nConveniently, the default file has all the basic inputs and outputs that are hardwired to the FPGA already declared. This way you can just use them without having to look up what pins they connect to.\nNote that if you using the Mojo the top files looks a little difference. You may have noticed the yellow underline under all of the inputs. This is because we aren't using them currently and the IDE is just giving us a warning. The Mojo has an AVR microcontroller on the board that the FPGA can talk to. There are connections defined in the top module that are used for this.\nIf you hover your cursor over a warning or error, text will show up to let you know what is going on. Also when you attempt to build your project (click the hammer icon) all the warnings and errors will be printed in the console.\nThe Contents of a Module\nBefore we continue on, let's cover the basics of what makes up a module and what a module even is. A module is way to organize your project into smaller pieces broken apart by function. It is very similar to the concept of functions when programming where you break down your program into smaller more manageable pieces. Modules are also nice because they can be reused in multiple parts of your design.\nModule Declaration\nThe first part of any module is the module declaration. This is lines 1 through 14, reproduced below.\n\nIt always starts off with the module keyword followed by the name of the module. In this case it is au_top. It is convention to name your module the same thing as the file name.\nAfter the module name comes an optional parameter declaration, this isn't used in our module and it will be covered in a later tutorial.\nAfter that is the port declaration. This is where you specify all the inputs, outputs, and inouts of your module. An inout is a bi-directional port and will also covered in a later tutorial.\nMost of the ports in this module are single bit signals. However, the outputs led and spi_channel, on the Mojo, are a multi-bit signals. led consists of 8 bits and spi_channel is 4 bits. This is declared by the [8] and [4] after the signal's names, respectively.\nThe reason led is 8 bits wide, is because the board has 8 LEDs on it! Each bit of the signal connects to one of the LEDs on the board.\nWe only care about two of these ports for our project, led and rst_n. As you may have guessed, rst_n connects to the reset button. The _n part of it's name is because the signal is active low (as stated in the comment). This means that the value is typically 1 (high), but when the button is pressed (active) it is 0 (low).\nThe Always Block\nThere is some stuff before the always block, but we will get back to that later (it will make more sense then). So for now, just ignore it.\nAlways blocks are where all the magic happens. It is where you can perform computation and read/write signals. The always block gets its name because it is always happening. When the tools see an always block, they need to generate a digital circuit that will replicate the behavior that the block describes. Let's take a look at the always block in our code.\n\nNotice I said the tools need to replicate the block's behavior and not the block. That is because inside an always block, statements that appear lower in the block have priority over earlier statements. This is similar to programming, and this abstraction makes it so much easier to program complex logic. However, it is important to understand you are not programming and this is just an abstraction. To make this clear take a look at this example.\n\nWhat would you expect this always block to do? If you have a programming background, you may be tempted to think that the LEDs would continuously turn on and off. You're not in Kansas anymore Dorthy, this isn't programming and that's not what happens. Remember, there is no processor to run code (that is unless you explicitly make one, like a boss). When the tools see this block, they completely ignore the first line. This is because the second line has higher priory. If you were to synthesize this design, the tools would hard-wire the led signal to 8hFF (all 1s).\nBack to our design. Were we are assigning four signals a value (six on the Mojo). Note that every output of a module must have a value assigned to it at all times. Since we aren't using these outputs, they are assigned with some reasonable defaults. Let's take a quick detour and look at how values are represented in Lucid.\nRepresenting Values\nA value is made of one or more bits. The number of bits a value has is known as its width. There are a few ways to specify a value, some use an implied width while others allow you to explicitly set a width. If you are unfamiliar with binary or hexadecimal please read the Encodings Tutorial before continuing.\nThe first way to represent a value is to just type a decimal number. For example, 9.\nSometimes it’s easier to specify a number with a different radix than 10 (the implied default). Lucid supports three different radix, 10 (decimal), 16 (hexadecimal), and 2 (binary). To specify the radix, prepend d, h, or b to specify decimal, hexadecimal, or binary respectively. For example, hFF has the decimal value 255 and b100 has the decimal value 4. If you don’t append a radix indicator, decimal is assumed.\nIt is important to remember that all number will be represented as bits in your circuit. When you specify a number this way, the width of the number will be the minimum number of bits required to represent that value for decimal. For binary, it is simply the number of digits and for hexadecimal it is four times the number of digits. For example, the value 7 will be three bits wide (111), 1010 will be four bits wide, and hACB will be 12 bits wide.\nSometimes you need more control over the exact width of a number. In those cases you can specify the number of bits by prepending the number of bits and radix to the value. For example, 4d2 will be the value 2 but using 4 bits instead of the minimum 2 (binary value 0010 instead of 10). You must specify the radix when specifying the width to separate the width from the value.\nIf you specify a width smaller than the minimum number of bits required, the number will drop the most significant bits. When this happens you will get a warning.\nZ and X\nWhen you specify a decimal number, all the bits in your value will be either 0 or 1. However, each bit can actually be one of four values, 0, 1, x, or z. The values of 0 and 1 are fairly self explanatory, it just means the bit is high (1) or low (0). The value of x means don't care. It means you want to assign a value, but you really don't care if it is 1 or 0. This is useful for the synthesizer because your circuit may be simpler in one of the cases and it gives the tools the freedom to choose. During simulation, x also means unknown. Z means that the bit is high-impedance or tri-stated. This means that it is effectively disconnected. Note that FPGAs can't realize high-impedance signals internally, so the only time you should use z is for outputs of the top module.\nBack to our always block, the first two lines connect the input rst_n to the input of the reset_cond module. Modules can be nested which makes it possible to reuse them and helps make your project manageable. This is all covered later in more detail so don't get hung up over this yet. The only important thing to know about these two lines, is that the rst_n signal is active low (0 when the button is pressed, 1 otherwise) while the rst signal is active high.\nThe next line assigns the led output to all zeros. This turns off all the LEDs.\nOn the Alchitry boards, the last line connects the serial input pin to the serial output pin effectively echoing anything the FPGA receives over the serial port. We could have also tied this pin to 1 to disable it.\nOn the Mojo, the last three lines assign the outputs to z. This is because they aren't being used and we shouldn't drive these as they connect directly to the microcontroller on the Mojo (to use these you have to wait for the microcontroller to signal that it is ready first, this is also covered later).\nLooking at this always block, we can see there are no redundant assignments (like in our led on/off example). That means these signals will literally be connected to these values.\nConnecting the Button\nWe are going to modify the module to connect the reset button to the first LED so that when you push the button the LED turns on.\nTo do this we need to modify line 21, where led is assigned.\n\nThe output led is an 8 bit array. That means when you assign it a value you need to provide an 8 bit array. However, the signal rst is a single bit wide. To compensate for this we use the concatenation operator.\nTo concatenate multiple arrays into one, you can use the concatenation operator, c{ x, y, z }. Here the arrays (or single bit values) x, y, and z will be concatenated to form a larger array.\nIn our code we are concatenating the constant 7h0 with rst. The constant here is seven zeros. The 7 represents the size, h represents the number base (in this case hexadecimal) and 0 represents the value. Since we just need a bunch of zeros, the number base doesn’t really matter and we could have used 7b0, or 7d0, for binary or decimal respectively.\nNote that values are zero padded if the specified width is larger than the size required to store the value. For example, 4b11 would the same as 4b0011.\nIf you don’t care about how many bits a values takes up, you don’t have to specify it. The minimum number of bits that will still fit the value will be used. For example, b1101 is exactly the same as 4b1101. If you are using decimal, you can even drop the d so 4d12 is the same as d12 which is the same as just 12. However, when you are concatenating values, you should always specify a width to make it obvious how big the array will be.\nBuilding Your Project\nGo ahead and click the little hammer icon in the toolbar to build your project. You may need to first specify where you installed the builder.\nFor the Au, use Settings-&gt;Vivado Location... and point it to the Xilinx/Vivado/YEAR.MONTH folder.\nFor the Cu, use Settings-&gt;iCEcube2 Location... and point it to the lscc/iCEcube2 folder. You will also need to use Settings-&gt;iCEcube2 License Location... to point it to the license file you downloaded when you installed iCEcube2.\nFor the Mojo, use Settings-&gt;ISE Location... and point it to the Xilinx/14.7 folder.\nOnce set you should be able to build your project.\nAs the project builds you should see a bunch of text spit out. Just wait for it to finish building. It should look like this.\n\nThe important line here is where it says Finished building project. This means that the IDE was able to find a .bin file after. If you ever get a red message telling you the bin file couldn't be found you should scroll up through the build messages for the error that caused it to fail.\nLoading Your Project\nWith your project built, plug your board into your computer if you haven’t already.\nIf you are using the Mojo, go to Settings-&gt;Serial Port... and select the serial port the Mojo is connected to.\nThe Alchitry boards are detected automatically.\nIt is time to load your project onto the board. You have two options. The first is the hollow arrow, this will write your configuration directly to the FPGA's RAM. The second is the solid arrow, this will write your configuration to the FLASH memory on the board (as well as the FPGA). If you program to the FPGA's RAM, your configuration will be lost when the board loses power. However, if you program to the FLASH, your configuration will be automatically loaded when the board is powered up.\nThe Alchitry Cu doesn't support loading directly to the FPGA.\nIf you program to RAM and then power cycle the board, the last configuration written to FLASH will automatically be loaded. This is helpful when you want to temporarily try out some configuration.\nIf you want to stop the FPGA from being configured at power up, you can click the eraser icon. This will wipe the FLASH memory and clear the FPGA's current configuration.\nGo ahead and click the arrow to program the FPGA.\n\nNow look at your board. You should see the DONE LED on. This means that the configuration was loaded successfully to the FPGA.\n\nNow push the reset button.\n\nNotice the LED turned on!\nSome Notes on Hardware\nWhen you press the button, how long does it take for the LED to turn on? If this was a processor instead of an FPGA, the processor would be in a loop reading the button state and turning the LED on or off based on that state. The amount of time between pressing it and when the LED turns on would vary depending on what code the processor was executing and how long it is until it gets back to reading the button and turning the LED on. As you add more code to your loop, this time and variation gets bigger.\nHowever, an FPGA is different. With this design (note I said design and not code), the button input is directly connected to the LED output. You can imagine a physical wire bridging the input to the output inside the FPGA. In reality, it's not a wire but a set of switches (multiplexers) that are set to route the signal directly to the output. Well, this is only partially true since the reset_conditioner is there which does some stuff to clean up the reset signal.\nSince the signal doesn’t have to wait for a processor to read it, it will travel as fast as possible through the silicon to light the LED. This is almost instant (again, forget about the reset_conditioner)! The best part is that if you wire the button the LED then go on to create some crazy design with the rest of the FPGA, the speed of this will not slow down. This is because the circuits will operate independently as they both simply exist. It is this parallelism where FPGAs get their real power.\nDuplication\nWhat if we want all the LEDs to turn on and off with the press of the button instead of just one?\nWell we could do it using concatenation just like before by replacing line 20 with the following.\n\nHowever, there is a better way! This is where the array duplication syntax comes in handy. The syntax is M x{ A }. Here M is the number of times to duplicate A. That means we can make line 20 look like this.\n\nMuch cleaner! This does exactly the same thing as before, but requires a lot less typing.\nArray Indexing\nThere is an alternative way to write the code where we only want one LED to light. This is by assigning the parts of the led array separately.\n\nOn line 20, the bit selector [7:1] is used to select the bits 7 through 1 of the led array. These seven bits are set to 0.\nOn line 21, [0] is used to select the single bit, 0, and set it to rst.\nThere are two ways to select a group of bits. The first one (and most common) is the one used above where you specify the start and stop bits (inclusive) explicitly. The other way is to specify a start bit and the total number of bits to include above or below the start bit.\nLine 20 could be rewritten as any of the following.\n\nThe benefit of using the start-width syntax is the width is guaranteed to be constant. This means you can use a signal to specify the start index. This will be covered in a later tutorial.\nAlways Blocks\nDue to the nature of always blocks, you could also write the LED assignment as follows.\n\nBecause the second statement has priority over the first, led[0] will actually NEVER have the value 0! It will be permanently connected to rst. Note that the second line only assigns the first bit of led. That means that the other 7 bits will still receive their value from the first statement.\nThis is one of the weird things of working with hardware. The code you write is not run on a processor like it is when you program. Instead, the code you write is interpreted by the tools to figure out what behavior you want. The tools then create a circuit that will match that behavior.\nAlways blocks are an easy way to describe complex behavior, but the way you describe the behavior and it's actual implementation can vary.\nCongratulations! You've finished your first tutorial on Lucid. When you're ready for more click here for the Synchronous Logic Tutorial.\n","id":"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/","title":"Your First FPGA Project"},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"body":"In this tutorial we will create a project that will send \"Hello World!\" over the USB (serial) port when the letter \"h\" is received. This will help teach you how to use finite state machines (FSM).\nSetup\nAs with all the tutorials, we first need to create a new project based on the Base Project. I called mine \"Hello World\" but you are free to choose whatever name you want.\nWith the new empty project, we now need to add the uart_tx and uart_rx components. This will be used to talk to the FTDI chip and send data over the USB port.\nYou should know how to add a component to your project from the last tutorial. If you need a refresher, click here.\nThe components we need to add are the UART TX and UART RX components and they can be found under Protocols.\nUART Tx\nLet's first take a look at what the module looks like.\n\nWe will only be looking at the interfaces to the modules since we don't need to know how it all works to use it properly (the magic of components).\nThis module is responsible for transmitting data. When we have a byte to send, we first need to check that busy is 0. When this signal is 1, any data we provide will be ignored. Assuming busy is 0, we then provide the data to send on data and signal that the data is valid by setting new_data to 1. This will cause the module to transmit the byte one bit at a time over tx.\nThe input block is used when you have some way of knowing that the device receiving the data upstream (the FTDI chip in this case) is busy. When block is 1, the module won't transmit data. Since we don't have a way to tell when the FTDI can't hold more data and it isn't a concern when the data is being read by an application on the PC side, we can set this permanently to 0.\nThis module has two parameters you need to set in order to get it to work properly. The first one CLK_FREQ is simply the frequency of the clock you are providing it. If you are using the default clock on the Au or Cu, this will be 100000000, or 100MHz.\nThe second parameter, BAUD is used to set the rate of bits per second to send. Alchitry Labs' serial monitor expects to use 1M baud so we will set this to 1000000 later.\nWhen a parameter is declared for a module, you only need to specify a name. However, you can also specify a default value and some value constraints.\nThe default value is set by using the equals sign.\nConstrains on the parameter's value can be set with a boolean statement after a colon. This expression will be evaluated when the module is instantiated and an error will be thrown when it fails (has a value of 0). It is recommend to add these constraints if you make any assumptions about the parameter values.\nFor both CLK_FREQ and BAUD it makes sense that they are not negative. For the module to work, the clock frequency needs to be at least twice the baud rate. Note that the closer you get to this limit, the more careful you need to be with choosing your baud rate. If the clock frequency isn't divisible by the baud rate then it will approximate the baud rate with the closest higher value.\nUART Rx\n\nThis module is responsible for receiving data on the rx input and sending it out as bytes on data. The value of data is valid only when new_data is 1.\nThe parameters for this module are more or less the same as before with the small exception that BAUD is constrained to a quarter of CLK_FREQ instead of half. This is due to the internal working of the module. Once it detects new incoming data, it waits half a cycle so that it will be sampling the data in the middle of the bit instead of the edge for reliability.\nUsing the Modules\nWe now can add uart_tx and uart_rx to our top level module.\n\nAll of the external signals are already defined for us in the Base Project. We simply connect them up.\nWe can actually make the instantiation of these two modules a bit cleaner. Both uart_tx and uart_rx have the same parameters and we want their values to be the same. This means we can group them in to a connection block just like we do for clk and rst.\n\nWe could have also combined these with the .rst(rst) assignment, but we will be adding another module to that block later so it is nice to have them separate.\nCurrently we are ignoring any data from the receiver and never sending data on the transmitter.\nAll inputs to modules need to be assigned a value. However, since we are setting tx.new_data to 0, we really don't care what value gets assigned to tx.data since it will never be used. In cases like this, the value of 'x' is helpful. There isn't really a value associated with 'x'. Instead, this tells the synthesizer that we don't care what value it uses. This gives it freedom to optimize our design instead of being forced to use an arbitrary useless value like 0.\nWe will now create two new modules that will actually deal with all these signals to send \"Hello World!\" when an \"h\" is received.\nROMs\nBefore we get too deep into generating and handling these signals, we need to create a ROM (Read Only Memory).\nOur ROM will hold the message we want to send, in our case \"Hello World!\".\nCreate a new module named hello_world_rom and add the following to it.\n\nWe have a single input, address, and a single output, letter. We want to output the first letter, \"H\", when address is 0 and the second letter, \"e\", when address is 1. This continues for each letter in our message.\nThis is actually pretty simple to do. First we need an array of the data we want to send. This is done in the following line.\n\nHere we are using a string to represent our data. Strings of more than one letter are 2D. The first dimension has an index for each letter and the second dimension is 8 bits wide.\nNote that the text is reversed. This is because we want, as the comment says, for \"H\" to be the first letter. Also note that \"\\n\" and \"\\r\" are actually single characters each. That means when we reversed the text we didn't write \"n\\r\" which would be wrong. These characters will make sure the text is on a new line each time it is sent. \"\\n\" goes to the next line and \"\\r\" returns the cursor to the beginning of the new line.\nNext, we simply need to set letter to the correct value in TEXT based on the given address. We do that on line 9.\n\nSince the text is reversed, we can simply output the corresponding letter.\nThis wraps up the ROM!\nThe Greeter\nThis is where we will talk to the UART modules to actually send and receive data.\nCreate a new module named greeter and fill it with the following.\n\nThe inputs and outputs should look a little familiar. They will connect to the uart_tx and uart_rx modules in our top level.\nWe are using the constant NUM_LETTERS to specify how big the ROM is. In our case, we have 14 letters to send (this includes the new line characters).\nFSMs\nOn line 15 we instantiate an FSM.\n\nfsm is similar to dff in that they both have .clk, .rst, and .d inputs and a .q output. They behave much the same way, with one important exception. FSMs are used to store a state, not a value.\nIn this example, our FSM can have one of two states, IDLE or GREET. In a more complicated example we could add more states to our FSM simply by adding them to the list.\nTo access a state, we can use state.IDLE or state.GREET. This is done in the case statement (covered below) as well as when we assign a new state to state.\nFunctions\n\nHere we are declaring a counter that will be use to keep track of what letter we are on. That means we need the counter to be able to count from 0 to NUM_LETTERS - 1. How do we know how many bits we will need when NUM_LETTERS is a constant? We could simply compute this by hand and type in the value. However, this is fragile since it would be easy to change NUM_LETTERS and forget to change the counter size. This is where the function $clog2() comes in handy. This function will compute the ceiling log base 2 of the value passed to it. This happens to be the number of bits you need to store the values from 0 to one minus the argument. How convenient! Just what we needed.\nIt is important to note that this function can only be used with constants or constant expressions. This is because the tools will compute the value during synthesis. Your circuit isn't doing anything fancy here. Computing this function in hardware would be far too complicated for a single line to properly handle.\nSaying Hello\nWe instantiate a copy of our hello_world_rom and call it rom so we know what data to send.\nSince we are only going to be sending the letters from the ROM, we can wire them up directly to tx_data.\n\nWe also can set the ROM's address to simply be the output of our counter since that's what the counter is for!\nCase Statements\nCase statements are an easy way to do a bunch of different things depending on the value of something. You could always use a bunch of if statements but this can be way more compact and easier to read.\nThe general syntax for a case statement is below.\n\nBasically, you pass in some expression and then have a bunch of blocks of statements that are considered based on the value of that expression. It sounds way more complicated than it is. Let's look at our example.\n\nWhen state.q is state.IDLE, we only look at the lines 30-32. However, when state.q is state.GREET we only look at lines 35-40.\nPutting it all Together\nSo how does it all work? Since IDLE was the first state we listed, it is, by default, the default state. You can specify an alternate default state by using the parameter #INIT(STATE_NAME).\nBecause we start in the idle state, the counter is set to 0 and we do nothing until we see \"h\". To wait for \"h\" we wait for new_rx to be high and rx_data to be \"h\".\nOnce we receive an \"h\", we change states to state.GREET\nHere we wait for tx_busy to be low to signal we can send data. We then increment the counter for next time and signal we have a new letter to send by setting new_tx high. Remember we already set tx_data as the output of our ROM.\nOnce we are out of letters, we return to the idle state to wait for another \"h\".\nAdding the Greeter to the Top Module\nFinally we need to add the greeter module to our top module.\nFirst, let's add an instance of it.\n\nNext, we need to connect it up.\n\nThat's it! Go ahead, build your project and load it on your board. You can then fire up a serial monitor (Tools-&gt;Serial Port Monitor) and send \"h\" to your board to be nicely greeted!\n","id":"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/","title":"ROMs and FSMs"},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"body":"\n    \n\nSynchronous logic is a fundamental building block for just about any digital design. It allows you to create much more complex systems that accomplish something over a series of steps. It also gives you the ability to save states or other information. In this tutorial you will be introduced to the D flip flop and how you can use these to make an LED blink.\nThe Problem\nIn our last tutorial we simply wired a LED to a button. Whenever you pressed the button the LED would turn on. Our design had no concept of time. The goal for this project is to blink an LED. That means we have to create a circuit that can turn itself on and off automatically after a regular interval of time has passed. For this we need the flip flop.\nClocks\nBefore I can explain what exactly a flip flop does you need to understand what a clock is.\nA clock is just a signal that toggles between 0 and 1 over and over again. It looks something like this.\n\nThe important thing is the rate at which it toggles. The clock on the Au and Cu is a 100MHz clock (the Mojo has a 50MHz clock). That means that it toggles 100 million times per second!\nThe clock has two edges, the rising edge and the falling edge. I drew the rising edges with little arrows. The rising edge is usually the important one.\nD Flip-Flops\nThis is one of the most important circuit elements you will be using. Lucky for you, it is also fairly straightforward how they work. Take a look at the symbol for the flip flop below.\n\nThis image shows all the signals that a flip flop could have, but in practice, the only required signals are D, Q, and clk. For now, forget about rst and en.\nSo what exactly does this thing do? All it does is copy the signal at D to Q whenever there is a rising edge on the clk input. That means Q will keep it's value between rising edges of the clock. Since the flip flop remembers what the input was at D, it is actually one of the most basic memory elements.\nLoops\nLets take a look at the following example.\n\nWhat will this circuit do? If the input to the gate is 1, then it's output is 0. However, the output is the input so the output must be 1, but then the input is 1 so the output must be 0? If we assume that the signal can only be 0 or 1 it seems like it would toggle between 0 and 1 infinitely fast. In practice, remember that signals are actually represented by voltages, it may oscillate or it may settle to somewhere in the middle. This is, of course, something we don't want. Designing combinational circuits with feedback can be very tricky to make sure something like this doesn't happen and that the circuit will work how you expect it to. That is why we don't! Instead, we use a circuit like this one.\n\nWhat will this circuit do? Well, for now lets just assume that Q is 0. That means that D is 1 (because it went through the not gate). On the next rising edge of the clock Q will copy what D is, so Q becomes 1. Once Q becomes 1, D becomes 0. You can follow the pattern to realize that every time there is a rising edge on the clock the output of the flip flop toggles.\nWhat about the initial condition though? If we just built this circuit how do we know if Q is 0 or 1? The truth is that we don't and in some cases it may be 1 while others it may be 0. That is where the rst signal comes in. This signal is used to reset the flip flop to a known state. In FPGAs this signal is generally very flexible and allows you to reset the flip flop to a 1 or 0 when the signal is high or low (your choice, not both). In Lucid, dffs use active high resets. That means when the rst signal is 1, the flip flop is held in reset.\nThere are cases where you don't care what the initial value of the flip flop is, in those cases you don't need to, and shouldn't, use a reset.\nSince the only signal left is en, I'll cover it now just for completeness. There are times when you want the flip flop to ignore the rising edges on the clock and to preserve the contents of Q. That is when you use the enable signal. When the en signal is 1, the flip flop operates normally. When it is 0 the contents of Q won't change on the rising edges of the clock. If you see a flip flop without an en signal it is just assumed that the flip flop is always enabled.\nIn Lucid, dffs don't have an explicit en signal, but rather will retain their contents if you don't write something new to it.\nCreating the Module\nOpen Alchitry Labs and create a new project. I'm going to call mine BlinkerDemo.\nWith the new project open, click the New File icon (the left most icon in the toolbar) and create a Lucid source file called blinker.luc.\n\nClick Create File to create the file.\nThe file should now be under Source in the project tree and it should automatically open.\n\nWriting the Blinker\nEdit the module so that it looks like the following.\n\nLet's go over what changes were made. First, I simply renamed out to blink to better reflect what our module does.\nLine 7 has the declaration of the flip-flop. Lucid has a type dff for creating flip-flops. The flip-flop I created is called counter and it's 25 bits wide.\nI then connected the clk signal of our module to the clk input of the flip-flop. I did the same with the rst signal. The syntax for connecting these signals is .module_input(signal) where module_input is the name of the input on the module and signal is the signal to connect to it. In this case the module input and signal names are the same.\nIn the always block, line 10 simply connects our output, blink, to the most significant bit of counter.q. When you are working with flip-flops, FSMs, or modules, you use the dot syntax to specify which signal you want. In this case, we need to read the q output of the dff so we use counter.q.\nThe next line connects the input, d, of the dff to its output, q, plus one. This means that every time clk goes high, counter.q will increase by 1.\nWhen declaring a dff or fsm, you must connect its clk input and optionally connect rst. These can't be connected later in an always block.\nReset\nNotice we connect the rst signal to the counter. What does this do? Whenever the rst signal goes high, the value of counter.q becomes 0. This is also the value that the counter is initialized to when the FPGA first starts.\nIf we wanted the counter to initialize and reset to a different value, we can specify the value using the dff parameter #INIT.\n\nThe counter will now start with a value of 100 and reset to 100. Zero is the default value if none is specified.\nNotice that parameters are specified with #NAME instead of .name. Parameters are always all capitalized.\nIf you don't need to reset a dff for some reason, you can simply not connect anything to the rst input and it won't have a reset. This is recommended if you don't need a reset since it doesn't force the tools to route the reset signal to the flip-flop.\nThe dff and fsm (covered later) types are special in that the rst input is optional. All other inputs and all inputs to modules are required.\nThe Counter\nHere is what the counter circuit looks like. Keep in mind that there is actually 25 flip-flops (but only one +1 circuit) and the connections are actually 25 wires, or bits, wide. When many flip-flops are used to store a single multi-bit value they are commonly drawn as a single flip-flop.\n\nLet's look at what this module will actually do. Right after the rst signal goes low, counter.q will be 0. That means that counter.d will be 1, since our combinational block assigns it counter.q plus 1.\nAt the next positive edge of clk, counter.q will be assigned the value of counter.d, or 1. Once counter.q is 1, counter.d must be 2. You should be able to see what will continue to happen. Each clock cycle counter.q will increase by 1. But what happens when counter.q is 25b1111111111111111111111111 (the max value)?\nSince we are adding a 1 bit number to a 25 bit number, the result can be up to 26 bits, but since we are storing it into a 25 bit dff we lose the last bit. That means that when counter.q is the max value, counter.d is 0 and the process starts all over again.\nOur counter will continuously count from 0 to 33554431 (2^25 - 1).\nHow do we make an LED blink from this counter? It's simple once you realize that for half the time the most significant bit is 1 and the other half of the time it's 0. This is because if counter.q is less than 16777216 (2^24), then the 24th bit must be 0 and when it is equal or greater, the MSB must be 1. That means we can just connect the LED to the most significant bit of our counter. If you need to convince yourself this is true try writing out the binary values from 0-7 and look at how the MSB (most significant bit) changes.\nHow fast will the LED blink though? We know that the clock frequency is 100MHz, or 100,000,000 clock cycles per second on the Au and Cu. Since our counter takes 2^25 cycles to overflow we can calculate the blinker time, 2^25 / 100,000,000 or about 0.34 seconds (0.67 seconds on the Mojo). The LED will turn on and off every 0.34 seconds. If you wanted to make that time longer, you can just make the counter 26 bits long and the time will double to 0.67 seconds. If you wanted to make it blink faster you can make the counter shorter.\nModule connections\nIn Lucid, there are three ways to specify an input into a module, dff, or fsm (from now on I'll just call them all modules). The first way is how we did it in this example.\n\nHere we specify the connections in a set of parentheses directly after the name. These connections are only applied to this single module. However, we can use the next method to make the same connections to many modules.\n\nIn this example, we connect the clk and rst inputs of all the modules contained in the curly braces. In this case, they contain three dffs. This is convenient since most modules will require a clock and reset signal.\nYou can also nest this method.\n\nHere only counter1 and counter2 are connected to rst.\nYou can also mix this method with the first.\n\nHere only counter1 is connected to rst.\nFinally, the last way to specify an input is simply by not connecting it when declaring the module but rather inside an always block later. This is what we did with counter.d. Note that dffs and fsms require you to specify clk and rst when declaring them and they do not allow you to specify the d input then.\nThere is a difference when connecting an input at declaration time or in an always block. The difference only is noticeable for arrays. If you have an array of a module and you specify an input at declaration time, that input will be copied to each element in the array individually.\nIf you specify an input in an always block, you can specify the input to each element separately. In this example, the clk signal is one bit, but it is getting copied to 25 one bit flip-flops. However, the d input, which is also one bit, is packed into a 25 bit array to use in the always block. That way we can use the d input as if it is really one big flip-flop (which don’t actually exist).\nInstantiating a module\nNow that we have a blinker module we need to add it to our top level module.\nOpen up the top file and make the edits so it looks the same as below.\n\nAu\n \n \nCu\n \n\n \nMojo\n \n\n \n\nIn the nested .clk(clk) and .rst(rst) blocks, I instantiated the blinker module and named it myBlinker. Notice I'm using the batch way of connecting the clk and rst inputs this time. This is because you will likely want to add more modules to your top level module so it can nice to set it up beforehand.\nIn the always block, we connect the blink output of myBlinker to the eight LEDs using the duplication syntax covered in the previous tutorial.\nYou should now be able to build and load the project. All 8 LEDs should blink about two times per second.\nThe Reset Conditioner\nNow that we have actually used the reset signal for what it was intended for, we can talk about the reset_conditioner module. The signal rst_n comes from outside the FPGA. Signals from outside the FPGA are UNCLEAN! What I mean by this is that we don't know how external signals (especially from a button) will change in relation to the clock we are using. If the reset signal goes low really close to the rising edge of the clock, due to internal delays in the FPGA, some flip-flops may come out of reset before the rising edge while others could after. This means some flip-flops may stay reset for a cycle longer than others (NOT GOOD). Even worse, when signals change too close to a rising edge of a clock you run into metastability issues. This is covered later, but it basically means you aren't guaranteed the output of the flip-flop will be 1 or 0. It could be somewhere in between (0.5?) or even oscillate between values (BAD). This is where the reset conditioner comes in. It is a fairly simple circuit that synchronizes the reset signal to the FPGA's clock. This ensures that your entire design will come out of reset at once. If you want to read more than you'll ever want to know about resets, check out this paper from Xilinx.\n","id":"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/","title":"Synchronous Logic"},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"body":"This tutorial will walk you through creating your first project and making the onboard LED light up when you press the\nreset button.\n\nBefore you start you need to have your environment setup.\nHead over to the setup tutorial if you haven’t already.\nCreating a New Project\nLaunch Alchitry Labs. After click through the welcome screen, you should see the following.\n\nClick on File-&gt;New Project. In the dialog that pops up enter a Project Name of LEDtoButton. You can leave\nthe default workspace if you want or browse for a different one. This is where all your projects will be stored\nUse the drop-down menu to choose the board you are using.\nLeave the language set to Lucid and From Example set to Base Project. This will copy a bare-bones project as the\nstarting point.\nIt should now look something like this. Note that your workspace will be different.\n\nClick Create to create your project.\nBack in the main window, expand the tree on the left to find the top file inside of Source. This has the name of *\nboard_top.luc*. Double click on it to open it in the editor.\n\nThe top file contains all the external inputs and outputs of your design. Your future projects can be built out of many\nmodules, but they all must be sub-modules to this top module. This will be covered more in a later tutorial. For now, we\nwill make all our edits to this file.\nConveniently, the default file has all the basic inputs and outputs that are hardwired to the FPGA already declared.\nThis way you can just use them without having to look up what pins they connect to.\nNote that if you using the Mojo the top files looks a little difference. You may have noticed the yellow underline under\nall of the inputs. This is because we aren't using them currently and the IDE is just giving us a warning. The Mojo has\nan AVR microcontroller on the board that the FPGA can talk to. There are connections defined in the top module that are\nused for this.\nIf you hover your cursor over a warning or error, text will show up to let you know what is going on. Also when you\nattempt to build your project (click the hammer icon) all the warnings and errors will be printed in the console.\nThe Contents of a Module\nBefore we continue on, let's cover the basics of what makes up a module and what a module even is. A module is way to\norganize your project into smaller pieces broken apart by function. It is very similar to the concept of functions when\nprogramming where you break down your program into smaller more manageable pieces. Modules are also nice because they\ncan be reused in multiple parts of your design.\nModule Declaration\nThe first part of any module is the module declaration. This is lines 1 through 14, reproduced below.\n\nIt always starts off with the module keyword followed by the name of the module. In this case it is au_top. It is\nconvention to name your module the same thing as the file name.\nAfter the module name comes an optional parameter declaration, this isn't used in our module and it will be covered\nin a later tutorial.\nAfter that is the port declaration. This is where you specify all the inputs, outputs, and inouts of\nyour module. An inout is a bi-directional port and will also covered in a later tutorial.\nMost of the ports in this module are single bit signals. However, the outputs led and spi_channel, on the Mojo, are\na multi-bit signals. led consists of 8 bits and spi_channel is 4 bits. This is declared by the [8] and [4] after\nthe signal's names, respectively.\nThe reason led is 8 bits wide, is because the board has 8 LEDs on it! Each bit of the signal connects to one of the\nLEDs on the board.\nWe only care about two of these ports for our project, led and rst_n. As you may have guessed, rst_n connects to\nthe reset button. The _n part of it's name is because the signal is active low (as stated in the comment). This means\nthat the value is typically 1 (high), but when the button is pressed (active) it is 0 (low).\nThe Always Block\nThere is some stuff before the always block, but we will get back to that later (it will make more sense then). So for\nnow, just ignore it.\nAlways blocks are where all the magic happens. It is where you can perform computation and read/write signals. The\nalways block gets its name because it is always happening. When the tools see an always block, they need to generate a\ndigital circuit that will replicate the behavior that the block describes. Let's take a look at the always block in\nour code.\n\nNotice I said the tools need to replicate the block's behavior and not the block. That is because inside an always\nblock, statements that appear lower in the block have priority over earlier statements. This is similar to\nprogramming, and this abstraction makes it so much easier to program complex logic. However, it is important to\nunderstand you are not programming and this is just an abstraction. To make this clear take a look at this example.\n\nWhat would you expect this always block to do? If you have a programming background, you may be tempted to think that\nthe LEDs would continuously turn on and off. You're not in Kansas anymore Dorthy, this isn't programming and that's not\nwhat happens. Remember, there is no processor to run code (that is unless you explicitly make one, like a boss). When\nthe tools see this block, they completely ignore the first line. This is because the second line has higher priory. If\nyou were to synthesize this design, the tools would hard-wire the led signal to 8hFF (all 1s).\nBack to our design. Were we are assigning four signals a value (six on the Mojo). Note that every output of a module *\nmust* have a value assigned to it at all times. Since we aren't using these outputs, they are assigned with some\nreasonable defaults. Let's take a quick detour and look at how values are represented in Lucid.\nRepresenting Values\nA value is made of one or more bits. The number of bits a value has is known as its width. There are a few ways to\nspecify a value, some use an implied width while others allow you to explicitly set a width. If you are unfamiliar with\nbinary or hexadecimal please read the Encodings Tutorial before continuing.\nThe first way to represent a value is to just type a decimal number. For example, 9.\nSometimes it’s easier to specify a number with a different radix than 10 (the implied default). Lucid supports three\ndifferent radix, 10 (decimal), 16 (hexadecimal), and 2 (binary). To specify the radix, prepend d, h, or b to specify\ndecimal, hexadecimal, or binary respectively. For example, hFF has the decimal value 255 and b100 has the decimal value\n4. If you don’t append a radix indicator, decimal is assumed.\nIt is important to remember that all number will be represented as bits in your circuit. When you specify a number this\nway, the width of the number will be the minimum number of bits required to represent that value for decimal. For\nbinary, it is simply the number of digits and for hexadecimal it is four times the number of digits. For example, the\nvalue 7 will be three bits wide (111), 1010 will be four bits wide, and hACB will be 12 bits wide.\nSometimes you need more control over the exact width of a number. In those cases you can specify the number of bits by\nprepending the number of bits and radix to the value. For example, 4d2 will be the value 2 but using 4 bits instead of\nthe minimum 2 (binary value 0010 instead of 10). You must specify the radix when specifying the width to separate the\nwidth from the value.\nIf you specify a width smaller than the minimum number of bits required, the number will drop the most significant bits.\nWhen this happens you will get a warning.\nZ and X\nWhen you specify a decimal number, all the bits in your value will be either 0 or 1. However, each bit can actually be\none of four values, 0, 1, x, or z. The values of 0 and 1 are fairly self explanatory, it just means the bit is high (1)\nor low (0). The value of x means don't care. It means you want to assign a value, but you really don't care if it is\n1 or 0. This is useful for the synthesizer because your circuit may be simpler in one of the cases and it gives the\ntools the freedom to choose. During simulation, x also means unknown. Z means that the bit is high-impedance or\ntri-stated. This means that it is effectively disconnected. Note that FPGAs can't realize high-impedance signals\ninternally, so the only time you should use z is for outputs of the top module.\nBack to our always block, the first two lines connect the input rst_n to the input of the reset_cond module. Modules\ncan be nested which makes it possible to reuse them and helps make your project manageable. This is all covered later in\nmore detail so don't get hung up over this yet. The only important thing to know about these two lines, is that the\nrst_n signal is active low (0 when the button is pressed, 1 otherwise) while the rst signal is active high.\nThe next line assigns the led output to all zeros. This turns off all the LEDs.\nOn the Alchitry boards, the last line connects the serial input pin to the serial output pin effectively echoing\nanything the FPGA receives over the serial port. We could have also tied this pin to 1 to disable it.\nOn the Mojo, the last three lines assign the outputs to z. This is because they aren't being used and we shouldn't drive\nthese as they connect directly to the microcontroller on the Mojo (to use these you have to wait for the microcontroller\nto signal that it is ready first, this is also covered later).\nLooking at this always block, we can see there are no redundant assignments (like in our led on/off example). That means\nthese signals will literally be connected to these values.\nConnecting the Button\nWe are going to modify the module to connect the reset button to the first LED so that when you push the button the LED\nturns on.\nTo do this we need to modify line 21, where led is assigned.\n\nThe output led is an 8 bit array. That means when you assign it a value you need to provide an 8 bit array. However,\nthe signal rst is a single bit wide. To compensate for this we use the concatenation operator.\nTo concatenate multiple arrays into one, you can use the concatenation operator, c{ x, y, z }. Here the arrays (or\nsingle bit values) x, y, and z will be concatenated to form a larger array.\nIn our code we are concatenating the constant 7h0 with rst. The constant here is seven zeros. The 7 represents the\nsize, h represents the number base (in this case hexadecimal) and 0 represents the value. Since we just need a bunch of\nzeros, the number base doesn’t really matter and we could have used 7b0, or 7d0, for binary or decimal respectively.\nNote that values are zero padded if the specified width is larger than the size required to store the value. For\nexample, 4b11 would the same as 4b0011.\nIf you don’t care about how many bits a values takes up, you don’t have to specify it. The minimum number of bits that\nwill still fit the value will be used. For example, b1101 is exactly the same as 4b1101. If you are using decimal,\nyou can even drop the d so 4d12 is the same as d12 which is the same as just 12. However, when you are\nconcatenating values, you should always specify a width to make it obvious how big the array will be.\nBuilding Your Project\nGo ahead and click the little hammer icon in the toolbar to build your project. You may need to first specify where you\ninstalled the builder.\nFor the Au, use Settings-&gt;Vivado Location... and point it to the Xilinx/Vivado/YEAR.MONTH folder.\nFor the Cu, use Settings-&gt;iCEcube2 Location... and point it to the lscc/iCEcube2 folder. You will also need to use\nSettings-&gt;iCEcube2 License Location... to point it to the license file you downloaded when you installed iCEcube2.\nFor the Mojo, use Settings-&gt;ISE Location... and point it to the Xilinx/14.7 folder.\nOnce set you should be able to build your project.\nAs the project builds you should see a bunch of text spit out. Just wait for it to finish building. It should look like\nthis.\n\nThe important line here is where it says Finished building project. This means that the IDE was able to find a .bin\nfile after. If you ever get a red message telling you the bin file couldn't be found you should scroll up through the\nbuild messages for the error that caused it to fail.\nLoading Your Project\nWith your project built, plug your board into your computer if you haven’t already.\nIf you are using the Mojo, go to Settings-&gt;Serial Port... and select the serial port the Mojo is connected to.\nThe Alchitry boards are detected automatically.\nIt is time to load your project onto the board. You have two options. The first is the hollow arrow, this will write\nyour configuration directly to the FPGA's RAM. The second is the solid arrow, this will write your configuration to the\nFLASH memory on the board (as well as the FPGA). If you program to the FPGA's RAM, your configuration will be lost when\nthe board loses power. However, if you program to the FLASH, your configuration will be automatically loaded when the\nboard is powered up.\nThe Alchitry Cu doesn't support loading directly to the FPGA.\nIf you program to RAM and then power cycle the board, the last configuration written to FLASH will automatically be\nloaded. This is helpful when you want to temporarily try out some configuration.\nIf you want to stop the FPGA from being configured at power up, you can click the eraser icon. This will wipe the FLASH\nmemory and clear the FPGA's current configuration.\nGo ahead and click the arrow to program the FPGA.\n\nNow look at your board. You should see the DONE LED on. This means that the configuration was loaded successfully to\nthe FPGA.\n\nNow push the reset button.\n\nNotice the LED turned on!\nSome Notes on Hardware\nWhen you press the button, how long does it take for the LED to turn on? If this was a processor instead of an FPGA, the\nprocessor would be in a loop reading the button state and turning the LED on or off based on that state. The amount of\ntime between pressing it and when the LED turns on would vary depending on what code the processor was executing and how\nlong it is until it gets back to reading the button and turning the LED on. As you add more code to your loop, this time\nand variation gets bigger.\nHowever, an FPGA is different. With this design (note I said design and not code), the button input is directly\nconnected to the LED output. You can imagine a physical wire bridging the input to the output inside the FPGA. In\nreality, it's not a wire but a set of switches (multiplexers) that are set to route the signal directly to the output.\nWell, this is only partially true since the reset_conditioner is there which does some stuff to clean up the reset\nsignal.\nSince the signal doesn’t have to wait for a processor to read it, it will travel as fast as possible through the silicon\nto light the LED. This is almost instant (again, forget about the reset_conditioner)! The best part is that if you\nwire the button the LED then go on to create some crazy design with the rest of the FPGA, the speed of this will not\nslow down. This is because the circuits will operate independently as they both simply exist. It is this parallelism\nwhere FPGAs get their real power.\nDuplication\nWhat if we want all the LEDs to turn on and off with the press of the button instead of just one?\nWell we could do it using concatenation just like before by replacing line 20 with the following.\n\nHowever, there is a better way! This is where the array duplication syntax comes in handy. The syntax is M x{ A }.\nHere M is the number of times to duplicate A. That means we can make line 20 look like this.\n\nMuch cleaner! This does exactly the same thing as before, but requires a lot less typing.\nArray Indexing\nThere is an alternative way to write the code where we only want one LED to light. This is by assigning the parts of the\nled array separately.\n\nOn line 20, the bit selector [7:1] is used to select the bits 7 through 1 of the led array. These seven bits are set\nto 0.\nOn line 21, [0] is used to select the single bit, 0, and set it to rst.\nThere are two ways to select a group of bits. The first one (and most common) is the one used above where you specify\nthe start and stop bits (inclusive) explicitly. The other way is to specify a start bit and the total number of bits to\ninclude above or below the start bit.\nLine 20 could be rewritten as any of the following.\n\nThe benefit of using the start-width syntax is the width is guaranteed to be constant. This means you can use a signal\nto specify the start index. This will be covered in a later tutorial.\nAlways Blocks\nDue to the nature of always blocks, you could also write the LED assignment as follows.\n\nBecause the second statement has priority over the first, led[0] will actually NEVER have the value 0! It will be\npermanently connected to rst. Note that the second line only assigns the first bit of led. That means that the other\n7 bits will still receive their value from the first statement.\nThis is one of the weird things of working with hardware. The code you write is not run on a processor like it is when\nyou program. Instead, the code you write is interpreted by the tools to figure out what behavior you want. The tools\nthen create a circuit that will match that behavior.\nAlways blocks are an easy way to describe complex behavior, but the way you describe the behavior and it's actual\nimplementation can vary.\nCongratulations! You've finished your first tutorial on Lucid.\n","id":"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/","title":"Your First FPGA Project"},"https://alchitry.com/tutorials/mojo/":{"body":"","id":"https://alchitry.com/tutorials/mojo/","title":"Mojo"},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"body":"All new Mojo's are shipping with a new bootloader that is Arduino compatible. That means that if you want to modify the code that ships on the Mojo, you can from the comfort of the Arduino IDE.\nIf your Mojo shipped to you in a small custom printed box (shipping since Jan 2014), it is already Arduino compatible. However, if you ordered a Mojo V3 before or have a Mojo V2, you can visit the Flashing the Bootloader page after installing the Arduino IDE for instructions on upgrading.\nPlease note that if you have a Mojo V2, you need to use the Arduino IDE version 1.6.5.\nNote, you do not need to use the Arduino IDE or code at all to use the Mojo. This is only for people who want to program BOTH the FPGA and the microcontroller. If you only want to program the FPGA jump into the FPGA tutorials.\nArduino IDE 1.6.5\nArduino has recently released version 1.6.5 of their IDE which makes third part extensions much easier. If you are using version 1.6.5, download the Arduino Mojo Plugin.\nExtract the zip into your sketchbook (typically C:\\Users\\YOURNAME\\Arduino for Windows or /home/YOURNAME/Arduino for Linux).\nUnder Arduino/hardware/embeddedmicro/avr/ you should see a handful of folders and the boards.txt and platform.txt files.\nYou can now fire up the IDE and jump down to the Getting Started section of this tutorial.\nArduino IDE 1.0.5\nInstalling the Arduino IDE\nThe first step of this process is to to just download and install the Arduino IDE!\nHead over to the Arduino website and download version 1.0.5 of the IDE.\nIf you are running Ubuntu you can install the IDE directly from the Ubuntu Software Center, or by entering the following command in the terminal.\n\nAdding the Mojo\nOnce the IDE is installed, you will need to edit some files to make it work with the Mojo.\nDownload all the files you will need here and extract the zip somewhere you can find it.\nYou now need to find where the files for the Arduino IDE live.\nIf you are using Windows and you installed it via their installer, the files most likely live at C:\\Program Files (x86)\\Arduino.\nIf you are using Ubuntu and you installed it via the Software Center or the terminal, the files most likely live at /usr/share/arduino. You will need to edit some files here so you will need to open a file browser with root privileges. Press alt+F2 and type in gksu nautilus. Hit enter and type in your password. Be careful because in this file browser you will be able to delete system files!\nOnce you find the Arduino files, open the hardware folder, then open the arduino folder.\nYou should now see the boards.txt file. Use the boards.txt file from the zip you downloaded earlier to replace the Arduino one.\nThe new file contains the declaration of the Mojo telling the Arduino IDE how to handle it.\nNow simply copy all the files in the arduinoMod.zip to the hardware/arduino folder. You should merge the various directories replacing only the files that are included in the modified files.\nGetting Started\nTo get started you need to download our base sketch that does the loading. To do this checkout our GitHub page or download the zip directly from here.\nCreate a folder name mojo_loader in your sketchbook and extract the files into that folder. Arduino requires that the folder name match the main .ino file (in this case mojo_loader.ino). \nMake sure that the Mojo is selected by going to Tools/Boards and selecting Mojo V3. Also make sure you select the correct serial port in Tools/Serial Port before trying to program the Mojo.\nIn the main mojo_loader file there are only three functions you should have to change for most projects. They are initPostLoad(), disablePostLoad(), and userLoop().\ninitPostLoad() is called before userLoop() and should be used to do any setup your code needs.\ndisablePostLoad() is called before the Mojo enters loading mode and is used to undo anything you did in initPostLoad(). If you fail to properly undo your setup, the loading code may not function properly.\nuserLoop() is where the bulk of your code should live. This acts much the same way as the basic loop() function provided by Arduino, but is only called when the FPGA has already been loaded. You should try to keep the loop duration fairly short so that the Mojo Loader will be able to get the Mojo into loading mode in a reasonable amount of time.\nNotes About Our Code\nIf you look through our code you may notice we don't use some the Arduino libraries for things. In some cases it didn't make sense to use the libraries because we could do things more efficiently by accessing the registers directly. \nThe most noticeable example of this is we don't use digitalWrite(). Instead, we have use SET() which is a macro defined in hardware.h. digitalWrite() is actually fairly slow due to the fact that it disables and re-enables interrupts every time it is called. This was done so that if you are calling it from inside interrupts, it will work as expected. However, we never do that so the overhead is for nothing. SET() is as basic as you can get for setting pins, but it works basically the same way that digitalWrite() does.\nWe also decided not to use the libraries for Serial1 and the ADC. This is because we did some fancy stuff with interrupts and ring buffers to allow the FPGA to have fast access to the USB port and the ADC. \nIf you don't want to use these optimizations, feel free to remove this code and replace it with the Arduino libraries.\n","id":"https://alchitry.com/tutorials/mojo/arduino-setup/","title":"Setting up the Arduino IDE"},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"body":"This tutorial will walk you through how to upgrade your Mojo's bootloader to the new Arduino compatible bootloader. To do this you will need an ISP programmer. We recommend the AVRISP mkII, but any ISP programmer should work. You can even use an Arduino to program the Mojo if you have one.\nPlease note that some Mojo V2s have an ATmega32U4 microprocessor instead of the ATmega16U4. If your Mojo V2 has the ATmega32U4 processor, follow these instructions as if you have a Mojo V3. You should also select Mojo V3 as the board when using the Arduino IDE.\nBefore you can program the bootloader you must first install the Arduino IDE as outlined in the Setting up the Arduino IDE tutorial.\nConnecting Your Programmer\nAfter the Arduino IDE is properly setup, you need to connect your programmer to the Mojo.\nThe ISP pins on the Mojo are broken out on 6 pads on the back of the board. Take a look at the following image to see how to connect your programmer.\n\nWe recommend soldering wires to these pads to temporarily connect your programmer. After the bootloader is programmed you can remove the wires.\nBurning the Bootloader\nWith the programmer connected to your Mojo, fire up the Arduino IDE.\nSelect your programmer from Tools/Programmer.\nMake sure the board is set to your board type, Mojo V3 or Mojo V2, in Tools/Board. \nFinally, click Tools/Burn Bootloader to burn the bootloader.\nAfter the bootloader is burned, you will need to install the drivers for the board if you haven't already. These are installed during the install of the Mojo IDE.\nYou then need to flash the FPGA loader program.\nYou can do this in the Mojo IDE by clicking Tools-&gt;Flash Firmware... or by using the Arduino IDE as outlined below.\nDownload the sketch through our GitHub page or by downloading the zip directly from here.\nOpen the sketch in the Arduino IDE and load the code onto the Mojo by clicking the right arrow on the top bar. Make sure you have the correct serial port selected in Tools/Serial Port first.\nYou are then all set! You can either use the board as is, or make some edits to the code!\n","id":"https://alchitry.com/tutorials/mojo/mojo-bootloader/","title":"Flashing the Bootloader"},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"body":"Mojos shipped in 2014 or later have the Arduino compatible bootloader. If your Mojo does not have the Arduino compatible bootloader, we recommend upgrading it. Please visit this page for more instructions.\nOn the Mojo there is a microcontroller that provides most of the core functionality. As we improve the firmware for the microcontroller by fixing bugs and adding new features, you can update the Mojo by following this tutorial. The microcontroller has a USB bootloader so it is easy to update yourself.\nMojo IDE\nIf you are using the Alchitry Labs, simply click Tools-&gt;Flash Firmware... to flash the latest firmware.\nManual Update\nFirst you will need to download the latest firmware. The latest firmware was posted on March 2, 2016.\n\nMojo V3 Firmware (ATmega32U4)\nMojo V2 Firmware (ATmega16U4)\n\nThe latest update includes some patches to the serial interface to the FPGA which requires you to use the updated Mojo Base Project. These changes ensure no bytes are dropped.\nArduino Compatible Mojo Instructions\nThe easiest way to update the firmware when an Arduino compatible Mojo is to simply setup the Arduino IDE and grab the latest code from the GIT repository. Instructions for doing this can be found on the Arduino setup page.\nHowever, if you want to just flash the hex without installing the Arduino IDE and applying the modifications, you can use avrdude to program it.\nUbuntu\nIt's really easy to update using Linux. Simply install avrdude by typing the following.\n\nThen navigate to the folder with the hex file and run avrdude. Before you run avrdude, make sure you get the Mojo in bootloader mode by temporarily shorting the pins shown at the bottom of the page.\n\nMake sure to change /dev/ttyACM0 to the correct port for the Mojo!\nThe hex should now be loaded on the Mojo!\nWindows\nHead over to SourceForge and download WinAVR.\nAfter it's installed click Start-&gt;Run and type cmd to open a command prompt.\nNavigate to where the hex file is and enter the following. Before you run avrdude, make sure you get the Mojo in bootloader mode by temporarily shorting the pins shown at the bottom of the page.\n\nMake sure to change COM4 to the port the Mojo is connected to. Note that this port may change after you put the Mojo is bootloader mode. It will only stay in bootloader mode for about 15-20 seconds and it will show up in the Device Manger as Mojo V3 bootloader. If you miss the bootloader window, simply short the pins again to re-enter it.\nThe hex should noe be loaded on the Mojo!\nLegacy Mojo Instructions\nUbuntu\nIt is pretty easy to update the Mojo in Ubuntu using dfu-programmer.\nFirst you need to install dfu-programmer. Open a terminal and enter\n\nYou also need to download the following file and place it in /etc/udev/rules.d. You will need superuser privileges to do this.\nMojo USB Rules\nOnce you add the rules file, you will need to unplug and re-plug the Mojo to have it take effect. \nJump down to Entering Bootloader Mode for instructions on how to get the Mojo into bootloader mode.\nYou can now update the Mojo with the following commands.\n\nNote that if you have a Mojo V2 the board probably has an ATmega16U4 microcontroller and not an ATmega32U4. In that case, replace atmega32u4 with atmega16u4 in the above commands.\nThe firmware is now updated.\nWindows\nTo update the Mojo in Windows you will need to download FLIP.\nFLIP Download Page\nThere are two flavors of FLIP, one with a Java Runtime included and one without. Either will work as long as you have Java installed on your computer. If you are unsure if you have Java or not, download the one with the Runtime included.\nOnce you've installed FLIP, jump down to Entering Bootloader Mode for instructions on how to get the Mojo into bootloader mode.\nWindows may or may not find the driver for your Mojo. If it doesn't, open the Device Manager. It should look similar to below.\n\nRight click on the ATm32U4DFU or ATm16U4DFU, depending on your Mojo, and click Update Driver Software... \nThen choose Browse my computer for driver software and fill in the path to where you installed FLIP. Select the sub-folder usb.\n\nClick Next and install the driver.\nOnce the driver is installed, launch FLIP.\nClick on the chip icon in the upper left corner and choose the microcontroller your Mojo has. If you have a Mojo V2 chances are you have an ATmega16U4, although some have ATmega32U4's. If you have a Mojo V3 you have an ATmega32U4.\nClick on the icon of the USB cable and choose USB then Open.\nNext, click on the red book that has the red arrow pointing into it. When you hover over it with your mouse it should say Load HEX File. Select the Mojo-Loader-1.2.hex file you downloaded.\n\nFinally click on Run. Once that finishes click Start Application. The firmware is now updated!\nEntering Bootloader Mode\nTo program the microcontroller you need to get it into bootloader mode.\nFirst plug the Mojo into your computer. With the Mojo still powered on, flip it over so you see the six little pads above the last O in Mojo. You need to momentarily connect the two leftmost pads. A jumper wire works well for this. Connecting these pads resets the microcontroller and on restart it will enter the bootloader.\nThe image below shows the pins to connect.\n\nOnce you tap those together it should be in bootloader mode. Jump back to your operating system's section.\n","id":"https://alchitry.com/tutorials/mojo/update-the-mojo/","title":"Updating the Mojo"},"https://alchitry.com/tutorials/projects/":{"body":"","id":"https://alchitry.com/tutorials/projects/","title":"Projects"},"https://alchitry.com/tutorials/projects/clock-clock/":{"body":"Check out the full project on SparkFun’s website.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","id":"https://alchitry.com/tutorials/projects/clock-clock/","title":"Clock Clock"},"https://alchitry.com/tutorials/projects/gpu/":{"body":"\nThis is by far the most complicated project/tutorial to date. \nOn this first page I’ll be giving a rough overview of the main pieces, and in later pages I’ll be diving deep into how each one works.\nThis project is now built into Alchitry Labs.\nIt is the Hd GPU template project available for the Au V2, or Pt V2.\nIt outputs the video data through the Hd at 720p60.\nBasic Architecture\nBefore getting into any FPGA specific details, we need to go over what our goal is and what has to happen to get there.\nThe goal of this GPU is to take a 3D model and render it onto a 2D frame. \nWhen you put it like that, it doesn’t sound so bad. \nThere are a few minor other details to consider first, though…\nGraphics in general rely heavily on linear algebra. \nIf you aren’t familiar with vectors and matrices, now would be a good time to freshen up. \nThere are tons of tutorials out there about it. \nFor most of this tutorial, you really only need to know how to multiply a vector by a matrix.\nOur GPU will accept a few parameters.\nFirst, we need something to draw. \nOur GPU, like every good GPU, will draw triangles. \nWe will specify the triangles with two ROMs. \nThe first ROM contains all the vertices (and colors of those vertices). \nThe second ROM contains the faces. \nThat is, the list of three vertices that make up a triangle.\nWhile manually coming up with and typing out hundreds of vertices and faces sounds fun, we will use Blender\nto model something, and some Java to convert it into a ROM.\nSecond, we need a model transformation matrix. \nThis matrix is responsible for moving around objects. \nBy multiplying our model’s 3D points by this matrix, we can rotate, translate, and scale the model however we want. \nMost renders will have two of these. \nOne for the model and one for the camera (viewpoint into the scene). \nTo keep things a bit simpler, our pipeline will only have one. \nOur camera will be stationary, but you could make it seem like it is moving by transforming the entire scene.\nBy using a matrix to specify the transformations, our GPU only needs to perform basic matrix multiplication instead of trig to rotate points! \nThe trig functions still need to be calculated but only once (per object) to produce the matrix.\nWe also need some kind of lighting. \nWe could have no lighting and just color every triangle its specified color, but this significantly reduces the \nperceived details of the model. \nThere are huge numbers of ways to calculate lighting in a scene with the holy grail being ray tracing. \nThat is where you simulate the actual rays of light and calculate how they bounce and interact with the objects in the scene. \nThis is what you can get with a modern GPU and is not what we will be doing.\nInstead, we will be taking a much simpler approach. \nOur GPU will accept a single light vector. \nThat is, the direction light is coming from. \nWe will then calculate the angle between each triangle and the light vector and use that to calculate the color. \nThis method has no concept of shadows, which are substantially more complicated. \nIt still produces a nice effect where we can make it look like things are illuminated from above.\nFinally, we need a projection matrix for converting 3D points to 2D points. \nThis matrix is set up in such a way that when a 3D point is multiplied by it, we will get the 2D coordinate of it.\nWe will be using a fixed frustum style projection. \nThis projection works in such a way that further objects appear smaller. \nAt the core of it, you divide the X and Y coordinates by their Z coordinate. \nLarger Z (further away) means the X and Y get pulled more into the center of the frame.\nThe Pipeline\nStage 1 - Generate the Model Matrix\nI wouldn’t necessarily consider this part of the GPU’s job as this matrix would generally be provided to the GPU. \nHowever, our pipeline is self-contained and this matrix is the first thing needed for producing a frame.\nAs mentioned above, this matrix is responsible for all the translations, rotations, and scaling, we want to apply to our model.\nThe matrix_generator module is responsible for creating the matrix.\n\nFor the demo, the matrix will rotate the model along a given axis. \nThe default is Y. \nTo perform any rotations, we need to calculate the sin and cos values for the angle we want to rotate.\nWe can calculate these on the FPGA by using the CORDIC core from Xilinx. \nCORDIC is a clever algorithm that can be used to calculate a few things, including sin and cos, efficiently in hardware. \nCheck out the Wikipedia page for the nitty-gritty. \nAll we care about here is Xilinx provides a module that uses this algorithm, and we can use it to get sin and cos values for an input angle.\nWe set up the CORDIC core to accept a radian angle input in 3.7 fixed point format. \nThis means the input value is 10 bits wide, but the lower 7 bits are fractional. \nFor example, 10b0010000000 is equal to 1 and 10b0001000000 is equal to 0.5.\nWe want to input values from -Pi to Pi. \nTo get the value of Pi in 3.7 fixed point, we can multiply it by 2^7. \nPi * 2^7 ≈ 402.\nThe output of the CORDIC is in 2.8 fixed point format as the values are bound to +/-1. \nTo keep things simple, our matrix will also be in 2.8 fixed point with a minor exception.\nYou may have noticed the matrix is 3x4 and not 3x3. \nEach row has an extra dimension. \nThis dimension is used for translating. \nTechnically, a linear transformation can only rotate and scale the input vector. \nHowever, by working in four dimensions instead of three, we can effectively translate in the third dimension. \nIf we force the fourth (aka W) value of each input vector to always be 1, we effectively just add the W value of the matrix to it.\nThis is what happens on the last line of the module where the Z row’s W column is set to 400. \nThis pushes the object 400 units away. \nThe W values are 10.0 fixed point, meaning they are standard numbers without a fractional component.\nStage 2 - Triangle Assembly\nNow that we have a matrix to apply to our model, we need to start generating triangles. \nThe ROMs that our model is stored in consist of vertices and faces. \nEach face is three numbers that point to a vertex in the vertex ROM. \nThat means we first need to fetch the face entry and then use its contents to fetch each vertex to build the entire triangle.\nThe vertex data itself is in 16.16 fixed point. \nThis is the format used through most of the pipeline.\nThis is all done in the model_provider module.\n\nThis module is an FSM that waits for a draw command, fetches a face, fetches each vertex, and then waits for the pipeline to not be stalled.\nThis is as good a time as any to talk about stalling and back pressure.\nThis GPU is architected as a pipeline. \nThat means that there are many stages that work separately and concurrently from one another with each feeding into the next. \nThis architecture allows as much work to be done on each clock cycle as possible, but it has one big caveat. \nEach stage in the pipeline doesn’t take the same amount of time to complete.\nFor example, it is way faster to fetch a triangle from the ROMs than it is to rasterize it pixel by pixel.\nTo compensate for this, we need our pipeline to support back pressure. \nThis means that later stages can stall previous stages until they are ready for more data. \nThis back pressure needs to flow back up through the entire pipeline to prevent lost data.\nSo when the stall signal is 1, we must wait to output the face and move onto the next one.\nIt’s worth noting that each vertex has its own color. \nCurrently, only the first color is used for the entire triangle, but without too much extra work, each vertex color could be blended across the triangle.\nThese two stages are packed into the model_drawer module. \nThis module is kind of like the client of our GPU. \nIt makes the requests of what to draw.\n\nStage 3 - Transformation\nThe next stage in the pipeline is the model transformation. \nThis stage takes the triangle and multiplies each coordinate by the model matrix.\nThis is done in the model_transform module.\n\nWhen a triangle is fed into the module, each vertex is multiplied by the model matrix. \nThis is done in three steps, assign the pt dff the vertex values, calculate the intermediate products of the multiplication, \nand finally sum them into the next vertex in opt.\nNote that the W coordinate of the matrix is added directly with the products since the W coordinate of each vertex is implicitly 1 and can skip being multiplied by 1.\nIt is also shifted 16 bits to the left to convert the 10.0 fixed point format to 10.16 which can be added to the other 16.16 values.\nThe first three cycles of the FSM feed the values into the pipe, and the next three catch the results as they come out. \nOnce all three vertices have been transformed, it attempts to output the new triangle.\nNote that color data is passed in and out of this module, but nothing is done to it. \nThis is done just to ensure that the color data associated with this triangle stays with this triangle.\nStage 4 - Shader\nThe shader is responsible for calculating the color of each vertex.\nIn our case, this means calculating the cosine of the angle between a vector perpendicular to the triangle and the light source.\nThen using this value to apply a shadow to the triangle.\nThis is done in the shader module.\n\nThe module starts by calculating the cross-product of two edges of the triangle.\nThis results in a vector that is perpendicular (aka normal) to the triangle. \nDot products are then calculated between the normal vector and itself and the normal vector and light vector.\nA dot product calculates the cosine between two vectors multiplied by their magnitudes.\nThe dot product of the normal vector and itself is the magnitude of the normal vector squared.\nWe can take the square-root of this using another CORDIC module.\nIf we then divide the dot product of the normal and light vectors by the magnitude of the normal vector, we get just\nthe cosine of the angle between the normal and the light vector.\nThis is because the light vector magnitude is defined to be 1, so we don't need to divide it out.\nThe cosine value is then clipped to be between 0.5 and 1.\nBy setting a minimum we make sure that even triangles facing away from the light source still have some color to them.\nWe multiply the vertices' colors by this fraction and output them as the new colors.\nStage 5 - Projector\nThe projector stage is responsible for taking the 3D vertices and projecting them onto the 2D screenspace.\nThis is done in the projector module.\n\nThis module takes some shortcuts by making assumptions about the projection matrix.\nIt assumes that only values (0,0), (1,1), (2,2), and (2,3) hold meaningful data, (3,3) is 1, and everything else is 0.\nMost values being 0 means we can save a lot of multiplications.\nThe projection matrix defined in geometry_definitions is for a frustum projection with z-clipping at 100-1000.\n\nAfter the vertex is multiplied by this matrix, we need to normalize it so that the W component is 1.\nThis is how we end up scaling X and Y based on the Z value.\nThe matrix is set up so that the W value is the original Z value.\nThe X, Y, and Z states of the FSM use the divider to divide each value by W.\nThe same divider is used to save resources as this isn't typically the bottleneck for rendering.\nFinally, the module calculates the determinant for the triangle.\nThis doesn't really logically fit in the projection module, but it needs a divider to do the calculation.\nBy putting it here, we can reuse the same divider again.\nWe will get to what this value is and how it is used in the rasterizer.\nStage 6 - Bounding Box\nThe bounding box stage is relatively simple compared to what we've seen so far.\nIt takes in the triangle data and outputs the minimum bounding box that the rasterizer will need to scan over.\nIt takes into account the display resolution, so time isn't wasted looking at pixels off-screen.\n\nStage 7 - Rasterizer\nThe rasterizer is the heart of the whole pipeline.\nThis stage is responsible for figuring out what pixels belong to the triangle.\nIt takes in the triangle data (vertices, colors, determinant, and bounding box) and outputs the barycentric \nweights for every display address that is covered by the triangle.\nThis is done in the rasterizer module.\n\nThe core of the module lies in calculating the barycentric weights for each pixel.\nThis actually happens in a separate module, the barycentric_calc module.\n\nOK, so what are barycentric weights or coordinates?\nWithout diving into the math, they're a way to represent the location of any point relative to the vertices of the triangle.\nEach point has three weights.\nThey correspond to the signed area of the triangle formed from that point and a pair of points on the triangle divided by the \narea of the main triangle.\nIf all three weights are positive, then the point lies inside the triangle.\nIf any of them are negative, then the point lies outside the triangle and can be ignored.\nThis is only one way to check if a point lines within a triangle, but it has some nice properties.\nBy definition, the three weights sum to 1.\nThey also have the nice property of allowing for linear interpolation between the three triangle points.\nThis is critical in the next stage, the Z-buffer, as we need the Z coordinate for each pixel.\nWe can use the three barycentric weights to interpolate the triangle's vertices' Z coordinates to get the pixel's coordinates.\nIt can also be used for more advanced GPU features that aren't implemented here, like smooth shading.\nTo do smooth shading, each vertex has its own normal vector, and the three vectors are interpolated across the triangle.\nStage 8 - Z-Buffer\nIf we were just drawing one triangle, then we could skip this stage.\nHowever, we need to account for when triangles overlap.\nWe can do this by keeping track of how far away each pixel is on screen.\nIf the pixel we are about to draw is closer than the one on screen, we draw our new pixel.\nIf not, we throw away our pixel.\nThis is done in the z_buffer module.\n\nThis module starts by calculating this pixel's Z value using the barycentric weights from the rasterizer and the \ntriangle's Z values.\nThis is done using a weighted sum.\nOnce we have the Z value, we need to read the Z value from the Z-buffer.\nThe Z-buffer is stored in the DDR memory and has an entry for every pixel.\nWhen a new frame is being prepared to be rendered, the buffer is filled with maximum distance at every pixel so any pixel will override it.\nIf a pixel is in front of the current z-buffer value, we output that pixel and its associated colors and barycentric weights.\nWe also need to write this pixel's Z value to the buffer so future pixels don't cover it unless they're in front.\nRight now, the barycentric weights and two of the three vertex colors are ignored.\nHowever, another module that interpolates the three colors with the weights could be added to allow blended colors on a single triangle.\nThe barycentric weights along with texture coordinates could be used to texture map the triangle.\nIf this was implemented, we would keep track of texture coordinates instead of color for each vertex.\nAt this stage, we would then interpolate the texture coordinates and use that to look up the color in the texture at that location.\nAs you can see, the barycentric weights provide a powerful tool beyond just calculating if a pixel is inside or outside the triangle.\nStage 9 - Write Buffer\nThe last stage is writing the pixel to the framebuffer.\nThis isn't strictly part of the graphics pipeline, but since we are storing the framebuffer in the DDR memory we need to\nspend a little effort in using it efficiently.\nThe DDR controller batches reads and writes in 128-bit chunks. \nOur values are only 16 bits wide, so we can batch eight of them to each memory access.\nThis is what the write_buffer does for us.\n\nThis module allows individual 16-bit values to be written arbitrarily to memory locations and only writes them out\nwhen the next value doesn't reside in the same chunk.\nIt also keeps track of which pieces of the chunk have been written to so it can mask out the unwritten sections.\nThis prevents the need for it to read the current value when doing a partial write.\nSince the stage before this is the rasterizer that checks each pixel in order, most of the writes will be sequential.\nThat means we will take advantage of batching writes under most conditions.\nOnce a full frame has been rendered, it is flipped and streamed over the HDMI port of the Hd.\nThe old dirty frame is cleaned up and the process starts again.\n","id":"https://alchitry.com/tutorials/projects/gpu/","title":"GPU"},"https://alchitry.com/tutorials/projects/hexapod/":{"body":"\nThis hexapod is fully controlled by a single Mojo leveraging the power that an FPGA provides. It consists of an aluminum frame (purchased from MicroMagic Systems which no longer seems to exist), 20 servo motors (12x HS-645MG, 7x HS-225MG, 1x HS-322HD), a Mojo V3 with an SDRAM Shield, Servo Shield, and a custom camera shield. The camera used is an OV2640. \nExample Designs\nArduino Project - The following FPGA projects assume that this project is loaded onto the ATmega32U4. The microcontroller is responsible for calculating the angles of the legs for the FPGA.\nImage Capture - This design will take a snapshot from the camera and store it in SDRAM. The image can then be read out to your computer through the ATmega32U4. I used a simple Java program to do this. The Eclipse project is below.\nImage Capture Java Program - This is the Eclipse project for a simple Java program that will interface with the Mojo to capture and show an image. The image can then be saved as a PNG.\nBlob Tracking - This design uses the camera to detect red blobs. The color of the blob can be set in the color_threshold.v file. For more information see below.\nMore Images\n\n\n\n\nBlob Tracking\n\n    \n\nYou can download the complete FPGA project and Arduino project below.\n\nFPGA Project\nArduino Project\n\nOverview\nThe flow of this design is as follows.\n\nThe camera is configured to output 1600x1200 images at its full 15 FPS.\nThe camera starts streaming frames to the FPGA\nEach pixel is converted from RGB to HSV (Hue Saturation Value)\n\nThe HSV value is compared to some preset values to determine if the pixel is a red pixel\nRed pixels are converted into a 1 while non-red are converted into a 0\n\n\nIn each row, groups of red pixels are joined together to form runs\n\nA run consists of the starting and ending indices of the group\n\n\nEach run is compared to the previous row's runs\n\nIf the runs overlap then the new run takes on the label of the overlapping run\nThe associated object properties are updated including bounding box, center of mass, and mass (number of pixels)\n\n\nIf the new run has already been labeled, but overlaps with another run of a different label, the two objects are joined\n\nThe second object becomes a pointer to the first and their properties are merged\nAny updates to the now invalid object are redirected\n\n\nIf an object has not been updated after an entire row, it is considered to be finished\n\nFinished objects are written to SDRAM if their mass is greater than a preset size\n\n\nOnce a frame has finished processing, a pin connecting to the microcontroller is pulled high\n\nThe microcontroller reads the objects from the SDRAM through the FPGA using SPI and picks the largest one\nIt calculates new angles for all the servos so that the robot will look towards the object\nThe new servo values are sent back to the FPGA to update the PWM signals\n\n\n\nInterfacing with the camera\nThe camera used in this project is the OV2640. This is a decent camera for the price, but that's assuming you can get it configured properly.\nThe datasheet for this camera leaves a lot to be desired. The actual recommended configuration is completely missing. However, after visiting the second page of a Google search, I was able to find a C header that defined various configurations for the camera used in the Linux kernel. I took the header and modified it a bit to make a C program that would print out text that could be used in a Verilog ROM. You can download the source for that program here.\nIn that program you can set the resolution and format you want, but unfortunately, even at lower resolutions you still only get 15 FPS since that driver simply sets the camera up to scale the images instead of changing the mode.\nTake a look at the ov2640_reg.v file to see the register configuration. The first value in each entry is the address while the second value is the actual value. Don't ask me what these values do because I have no idea. Most of them are marked Reserved in the datasheets I've seen, but this configuration works.\nNote that if you change the ROM make sure to update the REG_COUNT localparam in ov2640.v to reflect the number of entries.\nTake a look now at the ov2640.v file. This is the actual interface to the camera. There are two important possibly unusual pieces of code here.\n\nThis is used to drive the clock signal xclk out to the camera. In the FPGA clock signals can't be routed like data signals so you have to use an ODDR (Output Double Data Rate) block. Typically these blocks are used to output data on the rising and falling edges of a clock (hence double data rate). However, here we fix the data as 1 and 0 so that it toggles with the clock. This same trick was used with the SDRAM controller.\nThe clock xclk is generated in mojo_top.v by the module sdram_clk_gen. This module was generated using CoreGen  and it takes the 50MHz clock from the on board crystal and generates a 100MHz clock and a 20MHz clock. The 100MHz clock is used as the general system clock as well as the clock for the SDRAM (hence the name of the module). The 20MHz clock is only used to feed the camera and is actually not used for anything else.\nThe second piece of possibly new code is used because the camera outputs data with its own internal clock. The camera takes that 20MHz clock and boosts it to around 30MHz and uses that to output data. That means the FPGA can't simply clock data in using its internal clock because of possible meta-stability problems.\n\nTo prevent any clocking problems, a dual clock FIFO (First In First Out) buffer is used. This module was also generated using CoreGen.\nA FIFO buffer as two ports, an input and and output. Data goes into the FIFO through the din input and is added to the buffer every time wr_clk rises. The empty signal goes low where there is data in the buffer. To data can then come out of dout in the order that it was written to din but this time the data is clocked with rd_clk instead of wr_clk. This makes FIFOs an excellent tool for crossing clock domains.\nIt's important to note that you need to read the data from the FIFO at least as fast as you write it (on average) so that the buffer does not overflow. In this case the read clock is 100MHz while the write clock is only 30MHz so that isn't a problem.\nThe rest of this module is pretty straight forward. It simply takes the signals from the camera and outputs signals for the end of each frame and line as well as each new pixel.\nColor conversion\nThe data output from the camera is in RGB565 (5 bits Red, 6 bits Green, 5 bits Blue) format. However, we want to cover this to HSV since that will make it easier to tell what color the pixel is. This is done in the rgb_to_hsv.v file. This module is based on this module from MIT. The divider modules are generated again by CoreGen.\nThe dividers have a latency of 18 clock cycles so the total module has a latency of 19 clock cycles! However, it is fully pipelined so that it can accept a new value every clock cycle. In this case we don't really care about latency too much since it just delays the data by minuscule amount with no chance of dropping any data.\nThe color_threshold.v file holds the code that converts the HSV value to a 0 or 1 depending on its color. Line 52 is where you would change the values if you wanted to track a different color.\n\nThe pipeline module you see being used all over the place is simply a parameterizable module that consists of a bunch of flip-flops chained together. It will simply delay the data by LENGTH number of clock cycles. This is useful when you have some data you want to keep paired up with other data that is being processed.\nFinding runs\nThe run_finder module in run_finder.v is responsible for taking the binary pixels from color_threshold and grouping them into runs. This is a fairly straightforward task with a few edge cases. If a run is still going when the end of a row happens, the run must be finished and output.\nThe runs from run_finder may not be able to be processed immediately by the blob detector so they are buffered by a FIFO in run_fifo_manager.v. The format of the runs is slightly changed so that they are easier to handle in blob detector. Each entry in the FIFO is either a new run, the end of a line, or end of the frame.\nSince it is possible that an end of line/frame happens at the same time as a new pixel, the module is setup to write new pixels first, then end of lines, and finally end of frames.\nBlob detection\nThis is where the real magic happens. The file blob_detector.v is where a stream of runs are converted into objects.\nThe blob detection algorithm is based on this article with a few modifications. This paper is worth reading if you are interested in how this actually works. It's important to have a firm understanding of what is happening before diving into the code.\nThe basics of what happens is that each new run is compared to a list of runs from the previous row. Each previous run has a label that points into a RAM that temporarily stores the objects being processed. If a new unlabeled run overlaps with a run in the previous row, that run gets the label of the previous run and the object is updated in the RAM to include the new run. If the run is already labeled but overlaps with a run of a different label, the two objects are joined together in the object RAM and the second object is set to point at the first object. That way if any runs overlap with rows that belong to the now invalid object, they can be redirected to the valid merged object. If a run does not overlap with any other runs, it is assumed to be a new object and space is allocated in the object RAM.\nTo keep track of used and unused objects in the object RAM, two linked lists are maintained. Initially, each entry in the RAM is setup as an unused object and is set to point to the next object. When a new object is created it takes the first element in the list and adds it to the used object list. These linked lists are maintained so that it is easy to keep track of where an unused object is as well as iterate over all the used objects.\nAfter a row is finished, each object in the used object list is marked as not-updated. After the next row, each object is checked to see if it was marked updated. If it was, it is simply marked not-updated again. However, if the object was not updated, that means that that object will never be updated again and should be removed from the RAM to make space for more objects.\nWhen this happens, the unused and used object lists are updated. If the removed object is larger than the MIN_SIZE parameter, then it is written to SDRAM.\nOnce an end of frame is detected, all the valid objects still in the object RAM are flushed out and written to SDRAM if they are large enough. Finally the number of total objects output is written to the SDRAM and the module signals it has finished.\nArduino code\nThe microcontroller simply waits for the FPGA to signal that new data exists by pulling one of the shared pins high. There are four pins that can be used for anything. These are called the flag pins in this design. Only the first of the four is used.\nOnce the microcontroller knows that data is ready, it uses the SPI interface that connects it to the FPGA to read that data that is in the SDRAM. The actually details of how this happens will be covered in another tutorial. However, you can take a look at the fpga_interface file for the functions used. It basically works by memory mapping some functions in the FPGA and allowing them to be read and written over SPI. One of these functions is reading and writing to the SDRAM. The microcontroller tell the FPGA the address it wants to read and the result shows up in four other registers (since it has a 32 bit interface that equals 4 bytes) that can then be read.\nFirst the number of objects is read. Then for each object it's size/mass is read and if the mass is larger than the previously seen largest object, the rest of the object properties are read.\nFinally once all the objects have been read, only the largest objects data is actually kept. This is used to calculate a new position for the servos.\nIn between samples from the FPGA, the servos are moved smoothly to the last known target. This allows the robot to move smoother than would normally allow, given 15 frames per second from the camera.\nThe values calculated for the servos are written to the FPGA over SPI using the same memory mapped design. The module reg_ctrl.v shows the actual memory mapping used.\n","id":"https://alchitry.com/tutorials/projects/hexapod/","title":"Hexapod"},"https://alchitry.com/tutorials/register-interface/":{"body":"This tutorial will introduce you to the Register Interface component and how you can use it to easily implement\ncomplex interfaces in your designs.\nIntroduction\nSometimes dealing with an interface, like the serial interface, directly can become\nquite complicated depending on what you are trying to implement.\nThe Register Interface component provides an abstraction on top of a basic interface (usually the USB&lt;-&gt;Serial port,\nbut it doesn't have to be).\nThe abstraction it provides is a register based one.\nThe FPGA acts as a peripheral and responds to read and write requests targeted at specific addresses.\nYou've likely seen a register interface many times if you've worked with anything over I2C or SPI.\nDatasheets will list the registers you can read and write and what the bits in each one does.\nIn the most basic case, the thing you are reading and writing is actually a register.\nHowever, it doesn't have to be.\nInstead, you can respond to the reads/writes however you see fit.\nFor example, you might choose to respond to a read at address 8 with data from a FIFO.\nEach time address 8 is read, you remove a value from the FIFO and return it.\nThis is a common case when you are implementing something that collects data and needs to stream it out to the host.\nEnough theoretical, let's jump into the actual interface.\nThe Register Interface Component\nIn Alchitry Labs, open the Component Library and add the Register Interface (under Interfaces) to your project.\nYou will also likely want to add the UART Rx and UART Tx components if you plan to use the interface with the \nbuilt-in USB port.\nHere's the full module.\n\nI'm not going to dive into too much detail on how it all works but mostly go over what it does and how to use it.\nIt is essentially just a large FSM (see the FSM tutorial for background).\nCheck out The API section for info on the actual protocol.\nFor now, we will dive into using it.\nControlling the LEDs\nTo get your feet wet, we will use the interface to control the LEDs on the board.\nFirst, we need to instantiate the modules in the alchitry_top module.\n\nHere I used connection blocks for the parameters CLK_FREQ and BAUD to easily set them for all the modules that need them.\nThis is optional, but I like to do it this way to guarantee they are all the same.\nI also added the dff led_reg that we will use to save the value written to the LEDs.\nIn the always block, we can connect up the modules.\n\nWe now need to deal with incoming requests.\nThis is done through the reg_out and reg_in ports of the register_interface module.\nThese ports use structs to bundle a bunch of signals together.\nThe struct for each one is defined in the global block in the same file.\nThese are available anywhere in your design by using the designations Register.request and Register.response.\nWe can connect up these signals to respond to read/write requests to address 0 with the value of the LEDs.\n\nNotice on line 45 I used the struct literal syntax to assign a constant value\nto every element in the struct.\nYou can now build your project and load it onto your board.\nIn Alchitry Labs, you can now open the Register Interface tool to read/write registers.\nClick the Tools icon (looks like a terminal) and select Register Interface.\nA new tab will open.\n\nClick the chain icon to connect.\nMake sure the baud rate matches what you set in your code.\nIn the above example I used 1M baud which is what Alchitry Labs defaults to.\nYou can enter a value, like 3, into the Value box and click Write to write it to address 0.\nIf you then click Read it'll read it back.\n\nYou should see your board's first two LEDs turn on.\nTry writing a few other values just to make sure it's working as expected.\nDon't forget to disconnect from the board when you are done.\nYou won't be able to program it while connected.\nIf you try to read from an address other than 0, you'll get an error along the lines of \n\"Read failed: Read 0 but expected 4 bytes!\"\nThis happens because we only set the drdy flag to 1 when address 0 was read and ignored every other request.\nThe tool only waits a short time after sending a read request for a result.\nTo expand the address you respond to, you would typically use a case statement instead of the if.\n\nEach address targets a 32bit value.\nIn the LED example, we are throwing away the top 24 bits, but you could use them for something else.\nHere's the full alchitry_top module.\n\nThe API\nThis built in register interface tool is helpful, but manually entering everything isn't always practical. \nHere we will go over how the protocol works for issuing read and write requests so that you can use this in your own \napplications.\nEvery request starts with 5 bytes being sent. \nThe first byte is the command byte and the next four are the address (32 bits = 4 bytes) sent with the least significant \nbyte first.\nIn many cases you will want to read or write to many consecutive addresses, or perhaps the same address many times. \nIt would be inefficient to have to issue the entire command each time so the command byte contains info for consecutive \nor multiple read/write requests in one.\nThe MSB (bit 7) of the command byte specifies if the command is a read (0) or write (1). \nThe next bit (bit 6), specifies if consecutive addresses should be read/written (1) or if the same address should be \nread/written multiple times (0). \nThe 6 LSBs (bits 5-0) represent how many read/write requests should be generated. Note that the number of requests will \nalways be 1 more than the value of these bits. \nThat means if you want to read or write a single address, they should be set to 0. \nSetting them to 1 will generate two read or write requests.\nIf you send a write request, after sending the command byte and address, you continue sending the data to be written. \nData is always sent as four bytes per write request and the least significant byte should be sent first.\nFor reads, after sending the command byte and address, you simply wait for the data to be returned. \nData is returned in least significant byte order. \nNote that you may not always receive all the data you ask for if there is an issue with the FPGA design \n(i.e. the requested data is never presented, like in our LED example).\nLet's take a look at an example.\nIf you want to write to addresses 5, 6, and 7, you could issue the following request. \n0xC2 (1100 0010), 0x05, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00. \nThis would write 1 to address 5, 2 to address 6, and 3 to address 7. \nIf you changed the command byte to 0x82 (1000 0010) you would write 1 to address 5, 2 to address 5, and then 3 to \naddress 5 (in that order).\nIssuing a read follows the exact same format except the data bytes are received instead of sent.\nA single command can generate up to 64 read/write requests. \nIf you need to read/write more, you need to issue separate commands.\nAfter a short period, the interface times out and resets to the IDLE state.\nThis ensures that a bad command doesn't permanently mess up the stream.\n","id":"https://alchitry.com/tutorials/register-interface/","title":"Register Interface"},"https://alchitry.com/tutorials/roms-and-fsms/":{"body":"In this tutorial we will create a project that will send \"Hello World!\" over the USB (serial) port when the letter \"h\" is received. \nThis will help teach you how to use finite state machines (FSM).\nSetup\nWe first need to create a new project based on the Base Project. \nI called mine Hello World, but you are free to choose whatever name you want.\nWith the new empty project, we now need to add the uart_tx and uart_rx components. \nThese will be used to talk to the FTDI chip and send data over the USB port.\nYou should know how to add a component to your project from the last tutorial. \nIf you need a refresher, click here.\nThe components we need to add are the UART Tx and UART Rx components, and they can be found under Interfaces.\n\nUART Tx\nLet's first take a look at what the module looks like.\n\nWe will only be looking at the interfaces to the modules since we don't need to know how it all works to use it properly (the magic of components).\nThis module is responsible for transmitting data. \nWhen we have a byte to send, we first need to check that busy is 0. \nWhen this signal is 1, any data we provide will be ignored. \nAssuming busy is 0, we then provide the data to send on data and signal that the data is valid by setting new_data to 1. \nThis will cause the module to transmit the byte one bit at a time over tx.\nThe input block is used when you have some way of knowing that the device receiving the data upstream (the FTDI chip in this case) is busy. \nWhen block is 1, the module won't transmit data. \nSince we don't have a way to tell when the FTDI can't hold more data, and it isn't a concern when the data is being read by an application on the PC side, we can set this permanently to 0.\nThis module has two parameters you need to set in order to get it to work properly. \nThe first one CLK_FREQ is simply the frequency of the clock you are providing it. \nIf you are using the clock on the Alchitry board, this will be 100_000_000, or 100MHz.\nThe second parameter, BAUD is used to set the rate of bits per second to send.\nWhen a parameter is declared for a module, you only need to specify a name. \nHowever, you can also specify a default value and some value constraints.\nThe default value is set by using the equals sign.\nYou can also specify a test value instead of a default value by using ~ instead of =.\nA test value is used when checking the module for errors but will still force a value to be provided when the module is instantiated.\nTypically, parameters are just numbers, but they can be more complex values like arrays.\nIf you want to accept a multidimensional array, you need to specify the dimensions with the default or test value.\nParameters without a default or test value are assumed to be a simple number.\nSee the reference guide for more info.\nConstrains on the parameter's value can be set with a boolean statement after a colon. \nThis expression will be evaluated when the module is instantiated and an error will be thrown when it fails (has a value of 0). \nIt is recommended to add these constraints if you make any assumptions about the parameter values.\nFor both CLK_FREQ and BAUD it makes sense that they are not negative. \nFor the module to work, the clock frequency needs to be at least twice the baud rate. \nNote that the closer you get to this limit, the more careful you need to be with choosing your baud rate. \nIf the clock frequency isn't divisible by the baud rate then it will approximate the baud rate with the closest higher value.\nUART Rx\n\nThis module is responsible for receiving data on the rx input and sending it out as bytes on data. \nThe value of data is valid only when new_data is 1.\nThe parameters for this module are more or less the same as before with the small exception that BAUD is constrained to a quarter of CLK_FREQ instead of half. \nThis is due to the internal working of the module. \nOnce it detects new incoming data, it waits half a cycle so that it will be sampling the data in the middle of the bit instead of the edge for reliability.\nUsing the Modules\nWe now can add uart_tx and uart_rx to our top level module.\n\nAll the external signals are already defined for us in the Base Project. \nWe simply connect them up.\nWe can actually make the instantiation of these two modules a bit cleaner. \nBoth uart_tx and uart_rx have the same parameters, and we want their values to be the same. \nThis means we can group them in to a connection block just like we do for clk and rst.\n\nWe could have also combined these with the .rst(rst) assignment, but we will be adding another module to that block later so it is nice to have them separate.\nCurrently, we are ignoring any data from the receiver and never sending data on the transmitter.\nAll inputs to modules need to be assigned a value. \nHowever, since we are setting tx.new_data to 0, we really don't care what value gets assigned to tx.data since it will never be used. \nIn cases like this, the value of bx is helpful. \nThere isn't really a value associated with bx. \nInstead, this tells the synthesizer that we don't care what value it uses. \nThis gives it freedom to optimize our design instead of being forced to use an arbitrary useless value like 0.\nWe will now create two new modules that will actually deal with all these signals to send \"Hello World!\" when an \"h\" is received.\nROMs\nBefore we get too deep into generating and handling these signals, we need to create a ROM (Read Only Memory).\nOur ROM will hold the message we want to send, in our case \"Hello World!\".\nCreate a new module named hello_world_rom and add the following to it.\n\nWe have a single input, address, and a single output, letter. \nWe want to output the first letter, \"H\", when address is 0 and the second letter, \"e\", when address is 1. \nThis continues for each letter in our message.\nThis is actually pretty simple to do. \nFirst we need an array of the data we want to send. \nThis is done in the following line.\n\nHere we are using a string to represent our data. \nStrings of more than one letter are 2D arrays. \nThe first dimension has an index for each letter and the second dimension is 8 bits wide.\nNote that the text is reversed. \nThis is because we want, as the comment says, for \"H\" to be the first letter. \nAlso note that \"\\n\" and \"\\r\" are actually single characters each. \nThat means when we reversed the text we didn't write \"n\\r\\\" which would be wrong. \nThese characters will make sure the text is on a new line each time it is sent. \n\"\\n\" goes to the next line and \"\\r\" returns the cursor to the beginning of the new line.\nNext, we simply need to set letter to the correct value in TEXT based on the given address. \nWe do that on line 9.\n\nSince the text is reversed, we can simply output the corresponding letter.\nThis wraps up the ROM!\nThe Greeter\nThis is where we will talk to the UART modules to actually send and receive data.\nCreate a new module named greeter and fill it with the following.\n\nThe inputs and outputs should look a little familiar. They will connect to the uart_tx and uart_rx modules in our top level.\nWe are using the constant NUM_LETTERS to specify how big the ROM is. \nIn our case, we have 14 letters to send (this includes the new line characters).\nEnums and FSMs\nOn line 12 we define an enum.\n\nAn enum is just a way to conveniently declare a group of constants that you don't particularly care about their values.\nYou just need them to be different from each other.\nWe will be using this enum in conjunction with dff state to create an FSM (Finite State Machine).\nNote that the width of state is defined as $width(States).\nThis ensures that state is wide enough to hold any value in States.\nIn this example, our FSM can have one of two states, IDLE or GREET. \nIn a more complicated example we could add more states to our FSM simply by adding them to the list.\nTo access a state, we can use States.IDLE or States.GREET. \nThis is done in the case statement (covered below) as well as when we assign a new state to state.\nFunctions\n\nHere we are declaring a counter that will be used to keep track of what letter we are on. \nThat means we need the counter to be able to count from 0 to NUM_LETTERS - 1. \nHow do we know how many bits we will need when NUM_LETTERS is a constant? \nWe could simply compute this by hand and type in the value. \nHowever, this is fragile since it would be easy to change NUM_LETTERS and forget to change the counter size. \nThis is where the function $clog2() comes in handy. \nThis function will compute the ceiling log base 2 of the value passed to it. \nThis happens to be the number of bits you need to store the values from 0 to one minus the argument. \nHow convenient! \nJust what we needed.\nYou can check out the reference guide for more functions.\nIt is important to note that this function can only be used with constants or constant expressions. \nThis is because the tools will compute the value during synthesis. \nYour circuit isn't doing anything fancy here. \nComputing this function in hardware would be far too complicated for a single line to properly handle.\nSaying Hello\nWe instantiate a copy of our hello_world_rom and call it rom so we know what data to send.\nSince we are only going to be sending the letters from the ROM, we can wire them up directly to tx_data.\n\nWe also can set the ROM's address to simply be the output of our counter since that's what the counter is for!\nCase Statements\ncase statements are an easy way to do a bunch of different things depending on the value of something. \nYou could always use a bunch of if statements but this can be way more compact and easier to read.\nThe general syntax for a case statement is below.\n\nYou pass in some expression and then have a bunch of blocks of statements that are considered based on the value of that expression. \nIt sounds way more complicated than it is. Let's look at our example.\n\nWhen state.q is States.IDLE, we only look at the lines 31-33. However, when state.q is States.GREET we only look at lines 36-41.\nPutting it all Together\nSo how does it all work? \nSince IDLE was the first state we listed, it is, by default, the default state. \nYou can specify an alternate default state by using the parameter #INIT(STATE_NAME) on the dff.\nBecause we start in the idle state, the counter is set to 0, and we do nothing until we see \"h\". \nTo wait for \"h\" we wait for new_rx to be high and rx_data to be \"h\".\nOnce we receive an \"h\", we change states to States.GREET.\nHere we wait for tx_busy to be low to signal we can send data. \nWe then increment the counter for next time and signal we have a new letter to send by setting new_tx high. \nRemember we already set tx_data as the output of our ROM.\nOnce we are out of letters, we return to the idle state to wait for another \"h\".\nAdding the Greeter to the Top Module\nFinally, we need to add the greeter module to our top module.\nFirst, let's add an instance of it.\n\nNext, we need to connect it up.\n\nThat's it! \nGo ahead, build your project and load it on your board. \nYou can then fire up a serial terminal and send \"h\" to your board to be nicely greeted!\n","id":"https://alchitry.com/tutorials/roms-and-fsms/","title":"ROMs and FSMs"},"https://alchitry.com/tutorials/serial-interface/":{"body":"In this tutorial we will use the USB port and create a project that will echo back all the data sent to the Alchitry board.\nThis will teach you how to use the Component Library in your projects.\nGetting Started\nLike before, we will start by creating a new project. \nI'm calling mine Serial Port Echo. \nIt is from the Base Project template.\nGreat! \nNow we have a bare-bones project.\nThe USB port is accessible to the FPGA through the FTDI USB&lt;-&gt;serial bridge. \nSerial is often called UART (Universal Asynchronous Receiver Transmitter) and this is the name of the components we will need.\nComponents\nComponents are pre-written modules that you will likely need to use in many of your projects. \nFor this tutorial, we need to add two components to our project. \nOne to receive data and one to send data.\nLaunch the Component Library by clicking the three blocks icon in the toolbar.\nIf you have a Cu, this will open the library directly.\nIf you have an Au, this will open a dropdown. Click Component Library to open the library.\nUnder Interfaces, you will find the components UART Tx and UART Rx. Click the checkboxes next to each one.\n\nYou can click each component for a short description of what it does. \nFeel free to explore the other categories to see what's available. \nThe list of components grows over time with new releases of Alchitry Labs.\nClick Add to add the components to your project.\n\nComponents are indicated by the three box icon next to their name.\nYou can open any of the components you want to take a look at how they work.\nHowever, for this tutorial we will be using them as a black box.\nInstantiating the Component\nNow that the components we need are in our project, we need to use them.\nWe are going make some changes in the top file.\n\nThis will create instances of uart_rx and uart_tx named rx and tx respectively.\nWe need to specify two parameters for each one. \nThe BAUD parameter is the number of bits per second it should send. \nThe important thing is that you match this rate to the one you set on your computer. \nThe serial port monitor in Alchitry Labs uses 1M baud by default so that is what we specify here.\nThe USB&lt;-&gt;serial interface supports up to 12M baud.\nUnderscores can be inserted anywhere in numbers for readability.\nThe other parameter, CLK_FREQ, is the frequency of the clock. \nThis is used to calculate how many clock cycles are required per bit.\nIf you only do this, you will actually get some errors. \nThese errors are because some of the inputs to the modules were never assigned.\nWe are going to hook the modules up to each other so that when data is received, it is promptly sent back.\nChange the always block to look the following.\n\nOn lines 28 and 29, we connect the external input and output to our two modules. \nOn lines 31 and 32, we connect the rx module's outputs to the tx module's inputs. \nOn line 33, we set the block input of tx to 0. \nWhen this value is 1, the uart_tx component won't send any data out. \nThis is useful if you have some way to tell that the receiver is busy. \nWith the USB&lt;-&gt;serial converter, we just assume the data is being read from the computer in a timely manner to keep the FTDI's buffer from overflowing. \nThis is a reasonable assumption as long as there is some program actually reading the data.\nSending and Receiving Data\nWhen new data arrives, the signal rx.new_data goes high. \nThis tells you that the data on rx.data is valid. \nNormally you would want to wait for rx.new_data to go high and then do something with the data.\nWriting data to the serial port follows the same idea. \nWe set tx.data to the byte to send, and we set tx.new_data high. \nHowever, there is one more signal to look out for. \nThat is tx.busy. \nIf this signal is high, the transmitter is busy for some reason, either it is currently sending a byte or block is high. \nEither way, if you try to send data when this is high, it will be ignored.\nFor this simple example, we are going to ignore tx.busy. \nThis should not be a problem since we never block and the bytes coming in arrive at the same rate we can send them out.\nThe next tutorial will handle this more gracefully by actually respecting this flag. \nYou should now be able to build your project and load it on the board. \nClick the terminal icon in the toolbar and select Serial Terminal from the dropdown.\nThe Device dropdown shows all the detected boards.\nMake sure your board is plugged in and selected.\nThe default baud rate is 1M baud.\nThe same as we set earlier so no need to change this.\nClicking the chain icon will connect to the board.\nYou should then be able to type data into the monitor. \nWhatever you type should be shown.\n\nClick the break-chain icon when you are done to disconnect.\nCapturing Data\nBefore we wrap up, let's do a little more with the incoming data. \nWe are going to save the last byte received and display it on the LEDs.\nTo do this, we need an 8 bit dff. \nThe following line goes inside the .clk(clk) block but outside the .rst(rst) block. \nIt could go inside the .rst(rst) block, but it really doesn't need a reset.\n\nWe can then write to the dff when we have new data. \nThese lines go at the end of the always block. \nYou can also remove the previous assignment of 0 to led.\n\nOn the last line, we connect the LEDs to the output of the dff.\nIf you don't assign a dff a value, then it will retain the last value it had.\nSince we are only assigning it a value when rx.new_data is high, it will hold the last byte until the next one comes in.\nNow, if you build and load your project, when you fire up a serial terminal you should not only see the text you send back in the monitor, but the LEDs on the board should also change depending on the character you last sent.\nThe full module looks like this.\n\n","id":"https://alchitry.com/tutorials/serial-interface/","title":"Serial Interface"},"https://alchitry.com/tutorials/setup/":{"body":"Depending on your board you will need to install different software to work with it. Find the section below and follow the guides for setting up your board.\nEvery Board\nNo matter what board you have, you will need to install Alchitry Labs. Alchitry Labs is an IDE required to write Lucid code. It has a ton of useful features that are covered on its page.\nIt is now bundled with the Alchitry Loader. If you don’t want to use the Alchitry Labs IDE, you still need the Alchitry Loader to get the .bin files onto your board.\nAu and Au+\nBoth the Au and Au+ require Vivado to build projects. This is software supplied by Xilinx. The install is fairly straightforward but does require you to make an account.\nCu\nUsing the Cu has never been easier. Alchitry Labs 2 now ships with the  open source tools required to build projects for the Cu meaning you don't need to setup anything else.\nThe best part is that these even run on Macs (none of the proprietary tools do).\nYou can still choose to use Lattice's propriety toolchain, iCEcube2, which is more work but can often offer more optimized designs.\nMojo\nThe Mojo is no longer actively supported and requires Alchitry Labs V1 and the abandoned ISE tool from Xilinx. \nInstalling this on Windows 10 or newer can be a bit finicky. We have a detailed guide to help but with ISE being no longer maintained it is recommended to upgrade to an Au which uses supported tools.\n","id":"https://alchitry.com/tutorials/setup/","title":"Setup"},"https://alchitry.com/tutorials/setup/icecube2/":{"body":"The first step to setting up your environment is to install iCEcube2. iCEcube2 is a program provided by Lattice (the manufacture of the FPGA on the Cu) that is used to build your projects. It holds all the secret sauce that converts your text into an FPGA configuration file (bin file).\nHead over to Lattice's website and download the latest version of iCEcube2 here.\nThe download links are at the bottom of the page.\nYou will need to create an account to download the software and acquire a license file for it.\nGetting a License\nBefore launching the installer, you should get a license file.\nLattice used to offer free licenses to anyone but now offers free licenses only to \"hobbyists, enthusiasts, community educators &amp; start-up companies.\"\nGo to the Licensing section of this page for information on how to get a license.\nYou may need your MAC address for the license.\nOn Windows, open the command prompt and type in the following.\n\nIt is labeled as Physical Address.\nOn Ubuntu 18.10, you can find your MAC in Settings-&gt;Network-&gt;Wired (or Wireless)-&gt;Gear Icon. It's labeled as Hardware Address under the Details tab. \nAlternatively, you can find it with the following command.\n\nThe MAC address format on Linux is colon separated but Lattice wants dashes so swap them after you copy paste it.\nThey will email you a license file for that MAC address.\nYou will need to download this file and put it somewhere safe. iCEcube2 will require that it stays where you put it.\nLaunching the Installer\nWindows\nYou should be able to extract file you downloaded and simply double click to run it.\nLinux\nIf you are using Ubuntu you will need to install a bunch of 32bit packages to be able to run the software. You can run the following command to do this.\n\nOn Ubuntu 18.10, the version of libpng that is available is libpng16 but iCEcube2 looks for libpng12. You can download the .deb package here.\nMost Linux systems don't use the old eth0 naming convention for your network interface anymore. However, the licensing system of iCEcube2 does.\nYou can make Ubuntu name your network interface eth0 by creating a udev rule.\nRun the following command to open a text editor.\n\nThe paste the following line in. You will need to change the fake MAC address aa:bb:cc:dd:ee:ff to your actual MAC address you found earlier. Save the file and close the editor.\n\nYou will need to reboot for this to take effect.\nOn Linux you don't need root permissions if you are installing it somewhere you already have write permissions. I usually install mine to /opt/lattice/icecube2 which I have setup to be owned by me. By default, it tries to install it to your home directory.\nYou should now be able to run the installer.\nIf you run into syntax issues when building this is typically because the scrips in the iceCube2 install are set to use /bin/sh which points to Dash by default on Ubuntu. You can set this to Bash using the following command and selecting No.\n\nInstalling\nThe installer itself is pretty straight forward. \n\nJust run through pointing it to where you want it installed and your license file you downloaded.\n","id":"https://alchitry.com/tutorials/setup/icecube2/","title":"iCEcube2 Setup"},"https://alchitry.com/tutorials/setup/ise/":{"body":"ISE is a program created by Xilinx to support their FPGAs. It includes a bunch of other tools that will be useful for creating your projects. ISE is required to do any work because it is what actually synthesizes your designs into bit files that can be loaded onto the Mojo.\nThe process is fairly long, but it shouldn't be too tricky if you follow these instructions. These instructions were written for ISE 14.7 and tested on Ubuntu 12.04, Ubuntu 12.10, Linux Mint, Windows 7, Windows 8, and Windows 10.\nA quick note for Windows 10. Xilinx doesn't officially support Windows 10 but with a simple work around it should run just fine. They recently released a \"Windows 10\" version that is really just the Linux version bundled with a virtual machine to run on Windows. This version won't work with the Mojo IDE. I highly recommend using the older version which is now labeled as \"Windows 7\" even on Windows 10. There is a simple workaround explained in the \"Windows 10 64bit\" section below that makes this version work.\nFirst click here to go to the Xilinx downloads page. Under \"Version\" select 14.7. Do not select \"14.7 (Windows 10)\" even if you are using Windows 10. Scroll down a bit until you see ISE Design Suite. Under that header you should see full installers for Windows and Linux. Choose the one for the system you are installing ISE on.\nYou will then be prompted to login. If you don't have an account, create one. Once you have logged in the download should start.\nIf you have Java installed, you may be prompted to use their \"Download Manager\", if not it will just start like any other download. The method you use does not make a difference; however, if you have problems with the download manager you can disable Java in your browser and try again to prevent it from using it.\nThe file is big, about 6.5GB, so make sure you have plenty of space! (Also, the installation requires a further 16GB of space.)\nOnce the file is downloaded you need to decompress it. The file is a tar file so if you are on Windows you will need to install something like 7-Zip. Some tar extractors fail to properly extact this archive. 7-Zip is known to work so if you have trouble with the installer, try extracting it with 7-Zip.\nFor Windows, just open the folder and double click on xsetup to start the installation.\nFor Linux, you will need to open up a terminal and cd into the directory where you extracted the files. Then run the setup with sudo ./xsetup.\nOnce in the setup, accept all the license agreements. Once you are on the page that asks which edition to install, choose the ISE WebPACK option and click next.\n\nYou are then prompted to select what you would like to install. You only need to select the first option as shown. If you are running Windows 8 on a 64bit computer, you don't need to check anything as the built-in license manager doesn't work anyways. I've also been told that having Use multiple CPU cores for faster installation can cause it to lock up during install, but I personally haven't had that happen.\n\nOnce the install is done you should be prompted to get a license.\nChoose the Get Free ISE WebPack License option and click next.\nIf you are using Windows clicking Connect Now should open up a webpage for you. If you are on Linux you will probably be shown the same prompt, but if clicking Connect Now doesn't work you can go to http://www.xilinx.com/getlicense.\nFrom that page login and select ISE Design Suite: WebPACK License. Click on the button in the bottom left labeled Generate Node-Locked License.\nClick next twice and you should be emailed your license! Open up your email and download the .lic file.\nNow go back to the installation window. Under the Manage Xilinx Licenses tab click Copy License... and select your .lic file. If you are on Windows 8, clicking Copy License... will crash the license manager. See below how to get your license setup in Windows 8.\nOnce it finishes copying the license file you can close the window. ISE is now installed and ready to use!\nIf you are a Windows user you can stop here. However, if you are using Linux the following steps will make it easier to use ISE.\nWindows 8.1/10\nXilinx has released a guide for overcoming the common problems with Windows 8.1 and 10. Check out the guide here.\nWindows 10 64bit\nThe latest updates to Windows 10 seem to break PlanAhead. The second part of this post titled \"Fixing PlanAhead not opening from 64-bit Project Navigator\" seemed to fix the issue.\nWindows 8 64bit\nTo get your license installed in Windows 8 you need to create a folder in the root of your home drive (usually C). Name the folder \".xilinx.\" note both dots. Once you made the folder it should show up as \".xilinx\" (no trailing dot). For whatever reason, Windows requires you to have that trailing dot and it removes it automatically. Once you have that folder created just drop your Xilinx.lic file into it. ISE should now find the license file and open without complaints.\nThe 64bit version of ISE doesn't work correctly in Windows 8. Every time it tries to open a file dialog it crashes. To fix this you need to use the 32bit version.\nFirst navigate to C:\\Xilinx\\14.7\\ISE_DS\\ISE\\bin\nThe nt folders contain the executables. Right now any shortcuts you have and file associations point to the 64bit version. Move into the nt folder.\nCopy the file ise. Move back to the bin folder and into the nt64 folder. Rename the current ise file to ise64 and paste the 32bit version of the ise file. This will make sure you use the 32bit version.\nIf you would like a shortcut on your start screen, rename the file you just pasted into nt64 to ISE Design Suite. Then right click it and choose pin to start.\n\nOnce it is pinned you need to rename it back to ise. I found that trick of renaming, pinning, change name back to be useful to make the launcher on the start page.\nCreating a launcher in Linux\nOpen up a terminal and enter\n\nIn the text editor paste the following code.\n\nMake sure you replace XX with the type of computer you are using (32 for 32bit computers;  64 for 64bit computers).\nSave and close the file. Then back in the command line enter the following.\n\nThis will make the file you just created executable.\nThe following applies to Ubuntu. If you are using Linux Mint just right click on the Menu button and click Edit menu. From there you can create a launcher the same way as shown below.\nEnter the following in the terminal.\n\n\nFill out the form as shown. For the command select the run_ise.sh file you created in /opt/Xilinx/14.7/ISE_DS.\nAn icon can be found at /opt/Xilinx/14.7/ISE_DS/ISE/data/images/pn-ise.png\nClick OK to create the launcher.\nISE should now show up in Unity.\n","id":"https://alchitry.com/tutorials/setup/ise/","title":"ISE Setup"},"https://alchitry.com/tutorials/setup/vivado/":{"body":"The first step to setting up your environment is to install Vivado. Vivado is a program provided by Xilinx (the manufacture of the FPGA on the Au) that is used to build your projects. It holds all the secret sauce that converts your text into an FPGA configuration file (bin file).\nHead over to Xilinx's website and download the Vivado here. \nAvoid version 2020.3.\nI recommend downloading the Web Installer as it will save you time. \nAs of 2024.1, it they only offer the Web Installer.\nDuring installation, you get to select what gets installed saving space as well.\nYou will need to create an account with Xilinx to download the software. \nThis is required by the U.S. government since the software falls under some export regulations.\nYou will also need this account during installation for the web installer to be able to download the various components.\nLaunching the Installer\nIf you are running Windows, double-click the .exe file that you downloaded.\nIf you are on Linux, you may need to add execution privileges to the .bin file. \nYou can do that with the following command.\n\nYou will need to change the name of the .bin file to match the on you downloaded.\nYou can then run it. \nYou don't need root permissions if you are installing it somewhere you already have write permissions. \nI usually install mine to /opt/Xilinx which I have set up to be owned by me.\nInstalling\nThe installer itself is pretty straight forward. \nFirst, you will have to log in to your account.\n\nYou'll then have to accept some terms and conditions. \nThe page after that asks what product you would like to install.\nSelect Vivado.\n\nThe next page asks what edition to install.\nIf you don't want to pay for a license, select the Standard version.\nThe main difference between the two (other than cost) is the devices that are supported.\nThe free tier supports all the Alchitry boards.\n\nThe next page allows you to choose what you install.\nThe import option in our case is the Artix-7 FPGAs box under 7 Series under Devices.\nNothing else is strictly required.\n\nOn the next page, select where you want to install it.\n\nNow wack that Install button and let it do its thing.\nWhen you go to use Alchitry Labs, you'll need to point it to where Vivado is installed via the settings.\nIn my case, I pointed it to /opt/Xilinx/2025.1/Vivado.\n","id":"https://alchitry.com/tutorials/setup/vivado/","title":"Vivado Setup"},"https://alchitry.com/tutorials/synchronous-logic/":{"body":"In this tutorial you will be introduced to the D flip-flop and how you can use these to make an LED blink.\n\n    \n\nSynchronous logic is a fundamental building block for just about any digital design. \nIt allows you to create much more complex systems that accomplish something over a series of steps. \nIt also gives you the ability to save states and other information.\nThe Problem\nIn our last tutorial we simply wired an LED to a button. \nWhenever you pressed the button the LED would turn on. \nOur design had no concept of time. \nThe goal for this project is to blink an LED. \nThat means we have to create a circuit that can turn itself on and off automatically after a regular interval of time has passed. \nFor this we need the flip-flop.\nClocks\nBefore I can explain what exactly a flip-flop does, you need to understand what a clock is.\nA clock is just a signal that toggles between 0 and 1 over and over again.\nIt looks something like this.\n\nThe important thing is the rate at which it toggles. \nThe Alchitry boards have a 100MHz clock. \nThat means that it toggles 100 million times per second!\nThe clock has two edges, the rising edge and the falling edge. \nI drew the rising edges with little arrows.\nIt is when the clock transitions from 0 to 1.\nThe rising edge is usually the important one.\nD Flip-Flops\nThis is one of the most important circuit elements you will be using. \nLucky for you, it is also fairly straightforward how they work. \nTake a look at the symbol for the flip-flop below.\n\nThis image shows all the signals that a flip-flop could have, but in practice, the only required signals are D, Q, and clk.\nSo what exactly does this thing do? \nAll it does is copy the signal at D to Q whenever there is a rising edge on the clk input. \nThat means Q will keep its value between rising edges of the clock. \nSince the flip-flop remembers what the input was at D, it is actually one of the most basic memory elements.\nLoops\nLet's take a look at the following example.\n\nWhat will this circuit do? If the input to the gate is 1, then it's output is 0. However, the output is the input so the output must be 1, but then the input is 1 so the output must be 0? \nIf we assume that the signal can only be 0 or 1 it seems like it would toggle between 0 and 1 infinitely fast. \nIn practice, remember that signals are actually represented by voltages, it may oscillate, or it may settle to somewhere in the middle. \nThis is, of course, something we don't want. \nDesigning circuits with feedback can be very tricky to make sure something like this doesn't happen and that the circuit will work how you expect it to. \nThat is why we don't! \nInstead, we use a circuit like this one.\n\nWhat will this circuit do? \nWell, for now lets just assume that Q is 0. \nThat means that D is 1 (because it went through the not gate). \nOn the next rising edge of the clock Q will copy what D is, so Q becomes 1. \nOnce Q becomes 1, D becomes 0. \nYou can follow the pattern to realize that every time there is a rising edge on the clock the output of the flip-flop toggles.\nWhat about the initial condition though? \nIf we just built this circuit how do we know if Q is 0 or 1? \nThe truth is that we don't and in some cases it may be 1 while others it may be 0. \nThat is where the rst signal comes in. \nThis signal is used to reset the flip-flop to a known state. \nIn FPGAs this signal is generally very flexible and allows you to reset the flip-flop to a 1 or 0 when the signal is high or low (your choice, not both). \nIn Lucid, dff uses active high resets. That means when the rst signal is 1, the flip-flop is held in reset.\nThere are cases where you don't care what the initial value of the flip-flop is, in those cases you don't need to, and shouldn't, use a reset.\nSince the only signal left is en, I'll cover it now just for completeness. \nThere are times when you want the flip-flop to ignore the rising edges on the clock and to preserve the contents of Q. \nThat is when you use the enable signal. \nWhen the en signal is 1, the flip-flop operates normally. \nWhen it is 0 the contents of Q won't change on the rising edges of the clock. \nIf you see a flip-flop without an en signal it is just assumed that the flip-flop is always enabled.\nIn Lucid, dff doesn't have an explicit en signal. \nHowever, they will retain their value if you don't write something new to it.\nCreating the Module\nOpen Alchitry Labs and create a new project based on the Base Project. I'm going to call mine BlinkerDemo.\nWith the new project open, click the New File icon (the second left most icon in the toolbar) and choose New Lucid Module.\nIn the dialog that open, enter blinker as the module name and click Create.\n\nThe file should now be under Source Files in the project tree, and it should automatically open.\n\nWriting the Blinker\nEdit the module so that it looks like the following.\n\nLet's go over what changes were made.\nFirst, I simply renamed out to blink to better reflect what our module does.\nLine 7 has the declaration of the flip-flop. \nLucid has a type dff for creating flip-flops. \nThe flip-flop I created is called counter and it's 25 bits wide.\nI then connected the clk signal of our module to the clk input of the flip-flop. \nI did the same with the rst signal. \nThe syntax for connecting these signals is .port_name(signal) where port_name is the name of the port on the module and signal is the signal to connect to it. \nIn this case the module input and signal names are the same.\nIn the always block, line 10 simply connects our output, blink, to the most significant bit of counter.q. \nWhen you are working with flip-flops or module instances, you use the dot syntax to specify which signal you want. \nIn this case, we need to read the q output of the dff so we use counter.q.\nThe next line connects the input, d, of the dff to its output, q, plus one. This means that every time clk goes high, counter.q will increase by 1.\nWhen instantiating a dff, you must connect its clk input and optionally rst input. \nThese can't be connected later in an always block.\nReset\nNotice we connect the rst signal to the counter. \nWhat does this do? \nWhenever the rst signal goes high, the value of counter.q becomes 0. \nThis is also the value that the counter is initialized to when the FPGA first starts.\nIf we wanted the counter to initialize and reset to a different value, we can specify the value using the dff parameter #INIT.\n\nThe counter will now start with a value of 100 and reset to 100. \nZero is the default value if none is specified.\nNotice that parameters are specified with #NAME instead of .name. \nParameter names are always fully capitalized.\nIf you don't need to reset a dff for some reason, you can simply not connect anything to the rst input, and it won't have a reset. \nThis is recommended if you don't need a reset since it doesn't force the tools to route the reset signal to the flip-flop.\nThe dff type is special in that the rst input is optional. \nAll other inputs and all inputs to modules are required.\nThe Counter\nHere is what the counter circuit looks like. \nKeep in mind that there is actually 25 flip-flops (but only one +1 circuit) and the connections are actually 25 wires, or bits, wide. \nWhen many flip-flops are used to store a single multi-bit value they are commonly drawn as a single flip-flop.\n\nLet's look at what this module will actually do. \nRight after the rst signal goes low, counter.q will be 0. \nThat means that counter.d will be 1, since our combinational block assigns it counter.q plus 1.\nAt the next positive edge of clk, counter.q will be assigned the value of counter.d, or 1. Once counter.q is 1, counter.d must be 2. \nYou should be able to see what will continue to happen. \nEach clock cycle, counter.q will increase by 1. \nBut what happens when counter.q is 25b1111111111111111111111111 (the max value)?\nSince we are adding a 1 bit number to a 25 bit number, the result can be up to 26 bits, but since we are storing it into a 25 bit dff we lose the last bit. \nThat means that when counter.q is the max value, counter.d is 0 and the process starts all over again.\nOur counter will continuously count from 0 to 33554431 (2^25 - 1).\nHow do we make an LED blink from this counter? \nIt's simple once you realize that for half the time the most significant bit is 1 and the other half of the time it's 0. \nThis is because if counter.q is less than 16777216 (2^24), then the 24th bit must be 0 and when it is equal or greater, the MSB must be 1. \nThat means we can just connect the LED to the most significant bit of our counter. \nIf you need to convince yourself this is true try writing out the binary values from 0-7 and look at how the MSB (most significant bit) changes.\nHow fast will the LED blink though? \nWe know that the clock frequency is 100MHz, or 100,000,000 clock cycles per second. \nSince our counter takes 2^25 cycles to overflow we can calculate the blinker time, 2^25 / 100,000,000 or about 0.34 seconds. \nThe LED will turn on and off every 0.34 seconds. \nIf you wanted to make that time longer, you can just make the counter 26 bits long and the time will double to 0.67 seconds. \nIf you wanted to make it blink faster you can make the counter shorter.\nModule connections\nIn Lucid, there are three ways to specify an input to a module or dff. \nThe first way is how we did it in this example.\n\nHere we specify the connections in a set of parentheses directly after the name. \nThese connections are only applied to this single module. \nHowever, we can use the next method to make the same connections to many modules.\n\nIn this example, we connect the clk and rst inputs of all the modules contained in the curly braces. \nIn this case, they contain three dffs. \nThis is convenient since most modules will require a clock and reset signal.\nYou can also nest this method.\n\nHere only counter1 and counter2 are connected to rst.\nYou can also mix this method with the first.\n\nHere only counter1 is connected to rst.\nFinally, the last way to specify an input is simply by not connecting it when declaring the module but rather inside an always block later. \nThis is what we did with counter.d. \nNote that dff requires you to specify clk and rst when instantiating them, and they do not allow you to specify the d input then.\nWhen connecting an array of module instances, there is a difference when connecting an input directly or in a connection block. \nConnections to module arrays made directly connect to the array as a whole.\nConnections made with a connection block are connected to each individual instance.\nThis allows you to easily specify a clock to be distributed to all instances but still connect up unique values directly.\nSee the reference guide for more details.\nIf you specify an input in an always block, you can specify the input to each element separately. \nIn this example, the clk signal is one bit, but it is getting copied to 25 one bit flip-flops. \nHowever, the d input, which is also one bit, is packed into a 25 bit array to use in the always block. \nThat way we can use the d input as if it is really one big flip-flop (which don’t actually exist).\nInstantiating a module\nNow that we have a blinker module we need to add it to our top level module.\nOpen up the top file and make the edits so it looks the same as below.\n\nIn the nested .clk(clk) and .rst(rst) blocks, I instantiated the blinker module and named it my_blinker. \nNotice I'm using the batch way of connecting the clk and rst inputs this time. \nThis is because you will likely want to add more modules to your top level module so it can be nice to set it up beforehand.\nIn the always block, we connect the blink output of my_blinker to the eight LEDs using the duplication syntax covered in the previous tutorial.\nYou should now be able to build and load the project. All 8 LEDs should blink about two times per second.\nSimulation\nIf you try and simulate this code, it will likely seem like it isn't working.\nThis is because the simulation clock runs at 1KHz by default. \nWith a 25 bit counter, it will take 4.7 hours for the LED to turn on.\nIf we change the counter to 9 bits instead, it'll take only half a second to blink.\n\nWe can clean this up using the $is_sim() function.\nThis function evaluates to 1 if you are running an interactive simulation, and 0 otherwise.\nUsing this and the ternary operator we can update the code to work in both cases.\n\nThe ternary operator looks like condition ? when_true : when_false.\nWhen condition is true (meaning non-zero), the value of the operator is when_true.\nOtherwise, it is when_false.\nWidth Function\nWe can actually simplify this a bit more.\nIt is very common to want to index something based on the width of the signal.\nFor that, and other cases, we have the $width() function.\nThe $width() function takes any signal as an argument and returns its width. \nSee the reference page for more details.\nWe can rewrite the indexing of the MSB of counter.q from counter.q[$is_sim() ? 8 : 24] to counter.q[$width(counter.q) - 1].\nThis way no matter what size counter.q is, we will always be indexing the last bit.\nThe Reset Conditioner\nNow that we have actually used the reset signal for what it was intended for, we can talk about the reset_conditioner module. \nThe signal rst_n comes from outside the FPGA. \nSignals from outside the FPGA are UNCLEAN! \nWhat I mean by this is that we don't know how external signals (especially from a button) will change in relation to the clock we are using. \nIf the reset signal goes low really close to the rising edge of the clock, due to internal delays in the FPGA, some flip-flops may come out of reset before the rising edge while others could after. \nThis means some flip-flops may stay reset for a cycle longer than others (NOT GOOD). \nEven worse, when signals change too close to a rising edge of a clock you run into metastability issues. \nThis is covered later, but it basically means you aren't guaranteed the output of the flip-flop will be 1 or 0. \nIt could be somewhere in between (0.5?) or even oscillate between values (BAD). \nThis is where the reset conditioner comes in. \nIt is a fairly simple circuit that synchronizes the reset signal to the FPGA's clock. \nThis ensures that your entire design will come out of reset at once. \nIf you want to read more than you'll ever want to know about resets, check out this paper from Xilinx.\n","id":"https://alchitry.com/tutorials/synchronous-logic/","title":"Synchronous Logic"},"https://alchitry.com/tutorials/verilog/":{"body":"These tutorials focused on using Verilog without Alchitry Labs.\nYou can find the legacy Verilog Mojo Tutorials here.\n","id":"https://alchitry.com/tutorials/verilog/","title":"Verilog"},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"body":"This tutorial is to get you familiar with how to create a project and the very basics of Verilog.\nBefore starting this tutorial, make sure you have setup Vivado by following this tutorial. You'll need to install the Alchitry Loader as well.\nYou will need to download the base project available here, or check it out from GitHub.\nExtract that file to where you want to keep your projects. It is a good starting point for any project created for the Alchitry Au.\nThe file structure is as follows.\n\nAu-Base-Project\nau_base_project.ip_user_files - where IP cores will go that you generate\nau_base_project.hw - used by Vivado\nau_base_project.src - where you put all the files you write\nau_base_project.xpr - the Vivado project file\n\nOpen up Vivado and click Open Project under the Quick Start menu and find the au_base_project.xpr file you extracted.\n\nIt should now look something like this.\n\nFor your very first project, we are simply going to wire up the reset button to one of the LEDs on the board. We will make it so the LED will turn on when you push the button. \nGo ahead and double click on the left where it says au-top (au-top.v) under the Sources panel. The file should open on the right and you should see the following code.\n\nLet me explain what each part of the code does.\nPort declarations\n\nThis is the port declaration. This tells what signals are going in and out of the module. Remember we are designing circuits, not writing code, so it is good to think of each module as a block that has some inputs and generates some outputs. For now we only are interested in the rst_n input and the led outputs.\nIn Verilog there are two data types, wire and reg. The default in a port declaration is a wire. For now, we will only be working with wires and regs will be covered in the next tutorial. \nYou may have noticed this line.\n\nThis is not a single output but actually 8! You can create an array of wires (or regs)  by using those brackets. What [7:0] actually means is that led will be an array of eight wires that have an index from 7 down to 0, inclusive. \nIt is possible to do [8:1] or [0:7], but unless you have a very very good reason for doing that then you should stick to the convention. Mixing what you used as a base index and the order can create major headaches.\nDeclaring a wire\nThis brings us to the first line after the port declaration. \n\nIn this line we are declaring a new wire called rst.\nIn this case, we are declaring a one bit wire. However, you can declare an array of wires (sometimes also called an n-bit wire where n is the width of the array) with the following line.\n\nIn this case, we would now have a 10-bit wire called array.\nYou could also assign the wire a value when declaring it like the following.\n\nIt is a common convention to name signals that are active low (meaning a 0 is active) by appending _n to the end of their name. Following that convention, rst_n is active low, but we want an active high signal. To make rst an active high version of rst_n we can just invert rst_n. The ~ operator is the not operator. \nHowever, we don't really want to do this since we need to condition our reset signal. This is because the reset signal comes from an external source and isn't synchronized with our clock. Don't worry about this for now. It'll be covered later.\nInstantiating a Module\nTo take care of the reset conditioning, we have a module called the reset_conditioner that will do all the magic for us.\n\nThe first reset_conditioner is the name of the module we want to instantiate, the second reset_conditioner is the name of this particular instance. The name you give the instance isn't particularly important. Just name it something descriptive so the hierarchy of your project is easy to understand. Using the same name for the instance and the module type is common when you only have one instance of it.\nThe next part of the declaration wires up the inputs and outputs to signals in our design. The name following the period is the name of the module's port. The name in the parenthesis is the signal we are connecting it to.\nThe notable ones here are we are connecting !rst_n to in and out to rst. The ! in front of rst_n negates it just like the ~ from before. Both the ! and ~ operators are defined as not (meaning inverting). However, the ! is a logical not while the ~ is a bitwise not. For a single bit like rst_n they are interchangable. The difference will be covered more later.\nThe rst wire we declared earlier is connected to the module's output. We can then use rst in the rest of our design.\nAssigning a value\nThere are many times where you want to assign a value to a wire that is already declared somewhere else. In this case, you can use the assign keyword.\n\nNow is a good time to introduce constants in Verilog. A constant looks something like 8'hD5, 5'd61, or 4'b0101. In these three cases, you can tell how many bits wide each constant is by the first number. The first one is 8 bits, the second 5, and the third 4. This is important because you usually want the constant's width to match the signal you are assigning it to. \nThe second part of the constant is the base for the number. A h means the number is in hex, a d means it's decimal, and b means it's binary. The rest of the constant is the actual value.\nThere are actually two special values a bit can have, Z and X. Z means that the wire is high-impedance, or disconnected. X means that we don't care about the value, or the value is unknown (when you do simulations).\nIt's important to know that an FPGA can't realize internal high impedance signals. You should typically avoid using Z unless it directly connects to a top-level output (or inout) where the FPGA can set the pin to high impedance. If you use them internally, the tools will fake it with \"enable\" signals which will result in a sub-optimal design.\nIt is helpful to assign a value of X when you don't care since it will allow the tools to set whatever value it wants at that time. This gives them a bit more freedom to optimize. Note that a value of X can't actually exist in hardware. A bit will always be 0 or 1.\nNow, let's look a bit closer at the assign statement.\n\nOk, so what is going on here? We are using the ternary operator to select between two values to assign to led. The ternary operator is like an if statement and is realized in hardware with a multiplexer. If the value of the part before the ? is true (non-zero) then the value directly following it is used. If it is false (zero), then the value after the : is used. In this case, when rst is 1 (button pressed), the we use the value 8'hAA. When it is 0 (button released), we use 8'h55.\nThe last line in this module assigns usb_tx to be usb_rx. This simply loops any serial data we receive. Since we aren't using these it is a reasonable default,.\nCreating a bin file\nIt is now time to take our project and create a bin file that we can load onto the Au. To do this, find the Generate Bitstream entry under PROGRAM AND DEBUG on the way left of the window. Double click on it and the build cycle will start.\nIn the top right corner, you will see the stage that is being run. It will run through three main build stages, synthesis, implementation, and bitstream generation.\nSynthesis is where the tools look at your design and convert into a more abstract circuit representation.\nImplementation is taking that circuit and laying it out in the FPGA using the actual hardware resources available.\nBitstream generation is taking the implemented design and creating a file that can be used to configure the FPGA.\nOnce Vivado has finished building the project it should look like this.\n\nLoading the bin file\nOnce you open up the Alchitry Loader, select the .bin file created by Vivado. You can find it under au_base_project.runs/impl_1/au_top.bin.\nMake sure Alchitry Au is selected as the board.\nYou can check Program Flash if you want the configuration to be stored on the board for use after a power cycle. If you uncheck this, it will only be configured until it loses power.\n\nClick Program and your design will begin to transfer to the Au!\nOnce it has transferred, try pressing the reset button. When you push the button the LEDs will flip states (off-&gt;on, on-&gt;off).\nCongratulations, you've completed your first project!\n","id":"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/","title":"Creating a Vivado Project"},"https://alchitry.com/tutorials/verilog/mojo/":{"body":"These are the legacy Verilog tutorials for the Mojo.\nThese were written before the Mojo IDE (now Alchitry Labs) or Lucid were created and are based around using ISE.\n","id":"https://alchitry.com/tutorials/verilog/mojo/","title":"Mojo"},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"body":"The Mojo has eight analog inputs that you can use to read voltages from 0-3.3V. In this tutorial we will make the Mojo read the voltage on input A0 and adjust the brightness of the LEDs depending on the value.\nThis tutorial uses the PWM module from the pulse-width modulation tutorial, so make sure you understand how that works before getting started. Also like the other tutorials, you will need a fresh copy of the Mojo Base Project.\nAVR Interface\nJust like in the Hello World! tutorial we are going to use the AVR Interface module that is included in the base project. If you open up avr_interface.v you can check out its inputs and outputs. For reading the analog inputs, there are four relevant signals.\n\nYou only need to specify one parameter, channel. Channel is used to specify the analog input you want to sample. Valid values are 0,1,4,5,6,7,8,9. Those correspond to the Ax labels on the Mojo board, where x is the channel number. If you specify an invalid channel number the ADC will be disabled. This is useful when you don't need to use the ADC and would like to have lower latency and higher throughput on the serial port.\nFor this tutorial, we are going to just set channel to 0 as we will only be sampling the one channel.\nThe values on sample and sample_channel are only valid when new_sample is high. Each sample from the ADC is 10bits wide and is available at the sample output. When you receive a new sample you need to check sample_channel to find what channel the sample belongs to. When you change the channel, you can't assume the next sample will be from the new channel. This is because the ADC values are buffered in a FIFO before being sent to the FPGA. There may still be some old values that need to get sent out before the new samples come in. If you are just reading one channel, like we are in this case, you should be safe to ignore sample_channel, but it's good practice not to.\nSample Capture\nSince the samples come in sporadically, we need a module that will capture the valid values and feed them into a PWM module to light up the LEDs.\n\nThis module just waits for a new valid sample and updates the register sample_d/_q with the new value. That value is fed directly into the PWM module. The output of the PWM module is fed to the led output. The pwm signal is duplicated eight times so all the LEDs will light up together.\nTop Level\n\nHere is the top level module, mojo_top.v. The only modifications were made to instantiate the avr_interface module and our input_capture module.\nDon't forget to also add the PWM module from the PWM tutorial to your project.\nTry it out!\nYou should now be able to synthesize your project. Connect something like a potentiometer to A0 and watch the LEDs as you vary the voltage. When you apply 0V to A0 they should be off and when you apply 3.3V they should be fully on. Be careful not to connect your potentiometer to the RAW power supply as you can damage the AVR by feeding too high of a voltage to the analog pins.\n","id":"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/","title":"Analog Inputs"},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"body":"Asynchronous serial communication, often shortened to just serial, is one of the easiest ways to communicate between two different devices. In it's simplest form, it consists of just two connections. One line for sending data and the other for receiving data. \nThere are many variations on the classic serial bus, but this tutorial will cover just the basics. You should be able to communicate with most serial devices including a computer.\nBaud Rate\nAs the name implies, this protocol is asynchronous. All that means is that there is no shared clock. To get around not having a clock, both devices need to agree to the rate that data can be transmitted. The rate that data is sent is known as the baud rate. The unit for baud rate is bits/sec and this indirectly sets the width of each bit.\nIn theory, you can use any baud rate that you like. However, to make it easier to setup devices, there are a handful of standard baud rates. In most cases you will be using one of the following rates.\nBaud Rates (bits/sec)\n4800\n9600\n14400\n19200\n28800\n38400\n56000\n57600\n115200\n128000\n153600\n230400\n256000\n\nStart and Stop Bits\nAnother side effect of not having a clock is the need for start and stops bits. A serial port typically sends data out in packets of 8 bits, or a byte. Since it is asynchronous, you never know when the other device will send a byte!\nTo let the receiver know you are going to send a byte, a start bit is sent. This is simply a single bit with the value of 0. \nSimilarly, after the byte has been sent out, a stop bit is sent. Typically one stop bit is sent, but sometimes two are sent. Stop bits have the value of 1.\nTo better understand what goes on, take a look at this example transmission.\n\nThis is a transmission of the character 'a' which has an ASCII value of 97, or a binary value of 01100001.\nThe serial line idles high, meaning when nothing is being sent it is held at the value 1. This is why the start bit is 0, so the line transitions from high to low. This gives an indication that the line is active.\nYou may have noticed that order of the bits is reversed. That is because the LSB (least-significant bit) is typically transmitted first. \nThe Transmitter\nIf you download the Mojo Base Project, in the source directory you will find a file named serial_tx.v. This is the serial transmitter used by the Mojo to communicate with the AVR. \n\nThe parameter CLK_PER_BIT is used to set the baud rate. To calculate the correct value for CLK_PER_BIT use CLK_PER_BIT = Mojo Frequency / Baud Rate.\nIf you open up avr_interface.v you will notice that CLK_PER_BIT is set to automatically calculated for you. The baud rate is set to 500,000 bits/sec. The AVR expects this baud rate regardless of what you set the baud rate on your computer for the USB to serial device. You will notice that this is not a standard baud rate! This rate was used since it divides evenly allowing for a high baud rates with 0% error. \nIf you wanted a baud rate of 19200, you would use 50MHz / 19200 = 2604 for CLK_PER_BIT. Notice that 19200 doesn't divide evenly into 50MHz. It's usually ok to just round to the nearest value. You can check your error by calculating the real baud rate (50MHz / 2604 = 19201.228...) and using the percent error formula, difference / desired (1.228... / 19200 = 6.410^-5 or 6.410^-3%).\nThe parameter CTR_SIZE should be the minimum number of bits needed to hold the value CLK_PER_BIT. In other words ceiling(Log2(CLK_PER_BIT)). This is also calculated automatically for you using the built in function $clog2.\nThe input block is used by the AVR to tell the Mojo not to send any more data as it's buffer is full. If you don't need block you can set it to 0, or remove it from the module.\nThe way this module works is pretty simple. When it is told to send a byte of data it sends out the start bit. Each bit lasts for CLK_PER_BIT number of clock cycles. After the start bit, the data bits are sent out LSB first. The transmission is finally ended with a stop bit.\nThis is a more realistic example of using state machines than the state machine introduced in the metastability and debouncing tutorial.\nThe Receiver\nThe receiver code can be found in the serial_rx.v file in the Mojo Base Project.\n\nThe parameters for this module are the same as the ones from the TX module.\nThis module will sit in the IDLE state until it detects that the rx signal is low. That signals the beginning of the start bit. It then waits for half the number of clock cycles as CLK_PER_BIT. This is to make sure that the data bits are sampled near their centers, which is important for reliably receiving the data.\n","id":"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/","title":"Asynchronous Serial"},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"body":"The Mojo doesn't just have an FPGA, but it also has a microcontroller (AVR). While you normally won't program the microcontroller yourself, it offers some functionality to the FPGA. The two main functions the microcontroller performs are USB-&gt;serial conversion and an analog to digital conversion (ADC). This allows your design to send and receive data over the USB port and read the voltages on the analog input pins once the FPGA has been configured.\nCCLK\nWhen the FPGA is first configured, the AVR may not be ready for the FPGA to set some of it's pins as outputs. This is because the pins that are used to talk to the AVR are also used to configure the FPGA! It is important for the FPGA to wait until the CCLK signal is high for at least 512 cycles before taking control of it's outputs. The modules avr_interface.v and cclk_detector.v included in the base project do just that.\nUSB-&gt;Serial\nThere are three pins that are used to communicate over the USB port.\nSignal NameDirectionDescription\navr_txinputThis is the tx signal of the AVR. and the rx signal for the FPGA.\navr_rxoutputThis is the rx signal of the AVR and the tx signal for the FPGA.\navr_rx_busyinputThe AVR can't always send data over the serial port. When it is unable to accept any more data this signal will go high. This could be because the USB port is not connected to a computer, there is no application on the computer reading data from the serial port, or the buffer in the AVR is full.You must monitor this signal if you do not want to lose data.\n\nThe serial port operates at 500K baud. Due to the fact that the AVR needs to perform other tasks, you will not get the full throughput of 500K baud.\nADC\nThese are the signals used to read the analog pins.\nSignal NameDirectionDescription\nspi_misooutputData pin from the FPGA (slave) to the AVR (master)\nspi_mosiinputData pin from the AVR (master) to the FPGA (slave)\nspi_ssinputSlave select, active low\nspi_sckinputSPI data clock. Data clocked in on rising edges and setup on falling.\nspi_channel[3:0]outputADC channel select pins. These are used to determine which analog pin should be sampled.\n\nThe AVR is the master of the SPI bus and only sends data to the FPGA when there are new samples.\nThe spi_channel lines specify which channel should be sampled. Valid channels are 0, 1, 4, 5, 6, 7, 8, 9. Those correspond to A0, A1, A4-A9 on the Mojo board respectively. Selecting an invalid channel will disable the ADC.\nOnce the ADC is enabled by selecting a valid channel, it runs in free-running mode which means it will automatically sample that channel as fast as it can. The samples from the ADC are buffered and sent over the SPI bus when the AVR has time to do so. This means that the rate samples are sent over the SPI bus does not necessarily equal the rate or time they were sampled. However, it is safe to assume that the samples are evenly spaced in time.\nAnother side effect of the samples being buffered is that changing channels does not guarantee that the next sample sent over the SPI port will be from the new channel. To compensate for this each sample also includes the channel it was sampled from.\nEach sample is 10 bits wide. The 4 upper bits of the two bytes correspond to the channel the sample was taken from.\nEach SPI transfer sends over two bytes. The first byte is the 8 LSBs of the sample. The second byte contains the channel and the 2 MSBs of the sample.\nConfigure the ADC\nIt is possible to configure the ADC with your own settings.\nThe settings for the pre-scaler (sample rate), high-power mode, and AREF select are configurable. To access these settings you first need to enable the ADC by selecting a valid channel.\nOnce a valid channel is selected and samples are being sent of the SPI port, you can enter configuration mode by sending 0xAA as the reply for the first byte. The reply for the second byte of the transfer contains the configuration data.\n\nXXAREF Select [1:0]High Power ModePre-Scaler [2:0]\n\nInformation on what these mean can be found in the datasheet for the ATmega32U4 on pages 307-312.\nThe default values are, pre-scaler = 5 (divide by 32), high-power mode is enabled, AREF = AVcc.\nYou should not set the pre-scaler lower than 5. If you need higher accuracy you can set it higher.\nIncluded FPGA Modules\nThe Mojo base project includes the avr_interface.v module and all the supporting modules to interface with the AVR. It handles all the low level SPI and serial buses. It breaks out an interface which is much easier to use.\nFor the ADC, you can simply supply which channel you want to read in the channel input and when a new sample comes in new_sample goes high for one clock cycle. The sample is available on the signals sample and sample_channel for the corresponding channel.\nFor the serial port, you supply data to tx_data and pulse new_tx_data high for one clock cycle when you have data to send. You must first check that tx_busy is low. Data from the AVR is supplied through the rx_data signal and new_rx_data signals when the data is valid.\n","id":"https://alchitry.com/tutorials/verilog/mojo/avr-interface/","title":"AVR Interface"},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"body":"This tutorial is to get you familiar with how to create a project and the very basics of Verilog.\nBefore starting this tutorial, make sure you have installed Alchitry Labs and ISE.\nFirst you will need to download the base project available here, or check it out from GitHub.\nNote that this is the starter code for any project. It is not specific to this tutorial and without modifications does nothing. You must follow the tutorial and make the necessary modifications to the code to get it to work.\nExtract that file to where you want to keep your projects. It is a good starting point for any project created for the Mojo.\nThe file structure is as follows.\n\nMojo-Base\n\nipcore_dir - where IP cores will go that you generate\niseconfig - used by ISE\nsrc - where you put all the files you write\nsyn - the working directory for ISE\nMojo-Base.xise - the ISE project file\n\n\n\nOpen up ISE (ISE Design Tools-&gt;Project Navigator on Windows) and click File-&gt;Open Project and select Mojo-Base.xise\nIt should now look something like this.\n\nFor your very first project, we are simply going to wire up the reset button to one of the LEDs on the board. We will make it so the LED will turn on when you push the button. \nGo ahead and double click on the left side where it says mojo-top (mojo-top.v) under the hierarchy panel. The file should open and you should see the following code.\n\nLet me explain what each part of the code does.\nPort declarations\n\nThis is the port declaration. This tells what signals are going in and out of the module. Remember we are designing circuits, not writing code, so it is good to think of each module as a block that has some inputs and generates some outputs. For now we only are interested in the rst_n input and the led outputs.\nIn Verilog there are two data types, wire and reg. The default in a port declaration is a wire. For now, we will only be working with wires and regs will be covered in the next tutorial. \nYou may have noticed this line.\n\nThis is not a single output but actually 8! You can create an array of wires (or regs)  by using those brackets. What [7:0] actually means is that led will be an array of eight wires that have an index from 7 down to 0, inclusive. \nIt is possible to do [8:1] or [0:7], but unless you have a very very good reason for doing that then you should stick to the convention. Mixing what you used as a base index and the order can create major headaches.\nDeclaring a wire\nThis brings us to the first line after the port declaration. \n\nIn this line we are declaring a new wire called rst and assigning it a value.\nIt is a common convention to name signals that are active low (meaning a 0 is active) by appending _n to the end of their name. Following that convention, rst_n is active low, but we want an active high signal. To make rst an active high version of rst_n we can just invert rst_n. The ~ operator is the not operator. \nIn this case, we are declaring a one bit wire. However, you can declare an array of wires (sometimes also called an n-bit wire where n is the width of the array) with the following line.\n\nIn this case, we would now have a 10-bit wire called array. Notice here I did not assign it a value.\nAssigning a value\nThere are many times where you want to assign a value to a wire that is already declared somewhere else. In this case, you can use the assign keyword.\n\nNow is a good time to introduce constants in Verilog. A constant looks something like 8'hD5, 5'd61, or 4'b0101. In these three cases, you can tell how many bits wide each constant is by the first number. The first one is 8 bits, the second 5, and the third 4. This is important because you usually want the constant's width to match the signal you are assigning it to. \nThe second part of the constant is the base for the number. A h means the number is in hex, a d means it's decimal, and b means it's binary. The rest of the constant is the actual value.\nNow you may be looking at the assign statements and thinking \"what the &amp;$( kind of value is z?\" Well be confused no more, 0 and 1 are not the only values a wire can have! They can actually have one of four values, 0, 1, Z, and X. Z means that the wire is high-impedance, or disconnected. X means that we don't care about the value, or the value is unknown (when you do simulations).\nIn this case, since we are not using the spi signals we disconnect them because driving them incorrectly could damage the microcontroller. \nNow, let's look at the last line. This is the one we care about. Right now we are just assigning led to be all 0s. That means all the LEDs will always be off! What fun is that? Let's make a small modification to that line.\n\nOk, so what is going on here? The assign is now modified to assign only the first 7 bits of led to 0. You can use the bracket notation to select a sub-part of your arrays.\nThat leaves us free to assign the last bit to whatever we want! That's where the second line comes in. For this simple example, we are going to assign it to rst. That will connect the wire led[7] to rst.\nThat concludes the modifications we are going to make so go ahead and save the file!\nCreating a bin file\nIt is now time to take our project and create a bin file that we can load onto the Mojo. To do this, make sure that mojo_top (mojo_top.v) is selected under hierarchy. Underneath that you should see a panel labeled Processes: mojo_top. In that panel, double click on Generate Programming File. You should see a spinning thing start on Synthesize and move through the different stages.\n\nYou will get warnings with this design. They are shown by giving a little ! in a yellow triangle. This is normal and if you double click on Design Summary/Reports in the Processes panel you should then see a summary of the build. In the top right, you should see 26 Warnings. Click on that. If you scroll through the warnings you will notice that they are all caused by inputs and outputs in our design not being used. Since that was intentional we can ignore these.\nIf you didn't get any errors and the Generate Programming File stage completed it is time to fire up Mojo Loader to load the bin file!\nLoading the bin file\nOnce you open up Mojo Loader, select the serial port that the Mojo is connected to. For Windows this should be somethine like COM2. In Linux this will probably be /dev/ttyACM0, or something similar. It may take a few seconds to recognize the serial port so try opening the dropdown again if you don't see the port listed.\nThen click Open Bin File and navigate to the syn folder in the project folder. In there you should see a mojo_top.bin file to select.\n\nClick load and your design will begin to transfer to the Mojo!\nIf it doesn't work, make sure you have the correct port selected and the board is plugged in.\nOnce it has transferred, try pressing the reset button. When you push the button the LED closest to the button should light up.\nCongratulations, you've completed your first project!\n","id":"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/","title":"Creating an ISE Project"},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"body":"This tutorial is an advanced topic and is not recommend for beginners. If you want to write software in your design we recommend using the microcontroller on the Mojo before trying to embed a processor as the tools and setup can be very messy. Checkout this tutorial for more information.\nThis tutorial will outline how to add a MicroBlaze MCS to your project. The MicroBlazeMCS is a 32bit microprocessor core provided by Xilinx. It will allow you to write C/C++ code that will interact with the rest of your design. While this can be very helpful in many projects, setting it up can be a bit confusing. This tutorial will hopefully demystify the process.\nLike most tutorials here, the first step is downloading the Mojo Base Project.\nGenerating the core\nGo ahead and open up your fresh project in ISE.\nRight click on somewhere in the Hierarchy panel on the left and select New Source...\nSelect IP (CORE Generator &amp; Architecture Wizard) and set the File Name to microblaze_mcs and click Next.\nExpand Embedded Processing and Processor to find MicroBlaze MCS. Choose that and click Next.\nClick Finish.\nThe configuration wizard should now show up.\n\nIn the first tab, MCS, change the Input Clock Frequency to 50 since we will be running the core at 50MHz.\nTake note of the Instance Hierarchical Design Name, it is very important later on. For now we'll just leave it at the default mcs_0.\nSet Memory Size to 16KB. The absolute minimum required for this project is 8KB, but if you add any extra code, you will want a little more.\nThe Memory Size option is important because it dictates how much memory the processors has to store your code and variables. You will want to use a little memory as possible that will still fit your program since it uses valuable block RAM inside the FPGA.\nIf you look at the top of the window you will see tabs for all the different peripherals available to you.\nIn this tutorial, we will be using a timer to control how fast some LEDs blink. That means we will need a FIT (Fixed Interval Timer) and some GPO (General Purpose Outputs).\nIn the FIT tab, check the Use Timer box.\nWe want our timer to count the number of milliseconds that elapse which will allow us to create a flexible delay function. Since the Mojo uses a 50MHz clock, we want the Number of Clocks Between Strobes to be 50,000,000 / 1,000 = 50,000.\nWe will also want the timer to generate an interrupt, so check the Generate Interrupt box.\n\nHead over to the GPO tab since we need some outputs for the LEDs.\nIn the General Purpose Output 1 box check the box Use GPO.\nWe only have 8 LEDs, so change the Number of Bits to 8.\nThe Initial Value of GPO is fine as the default.\n\nThose are the only peripherals we need for this project, but feel free to check out the other ones as they may come in handy for your own projects. If you really want to get your feet wet, head over to Xilinx's documentation.\nClick Generate to generate the core!\nAdding the core to your project\nAfter the core is done generating (it can take a while), you should see microblaze_mcs as a file in your project.\nWe need to now instantiate this in our design. Open up mojo_top.v in your editor of choice.\nClick on the microblaze_mcs source file and expand CORE Generator in the Processes panel. Double click on View HDL Instantiation Template. This file contains an example instantiation of the core. You can refer to this file to make sure you get all the port names right.\n\nIt's usually a good idea to just copy/paste it into your design and make the edits you need.\nIn our case, we need to add it to mojo_top.v. The file should look as follows.\n\nNotice I made the instance name mcs_0. This MUST match the name you use when you generate the core. If you don't instantiate the core at the top of your design, you must include the path in the name in CORE Gen. For example, if you have your core in a module called magic_sauce then the path would be magic_sauce/mcs_0.\nIn our design, we don't care about any of the outputs except GPO1, which is hooked up to the LEDs.\nThe last step is to run the setup script that was generated. Open the Tcl Console by clicking View-&gt;Panels-&gt;Tcl Console. In the Tcl Console tab near the bottom of ISE, enter the following line and hit enter.\n\nIt should print the following.\n\nThis changes your project settings to accommodate the new core. Note that these changes don't seem to be persistent and you will likely need to run the script each time you open ISE.\nThere seems to be a bug in ISE which causes one of these settings to be wrong.\nRight click on Implement Design in the Processes panel with mojo_top selected in the Hierarchy panel. Choose Properties.\nUnder the Other Ngdbuild Command Line Options you should see -bm \"ipcore_dir/microblaze_mcs.bmm\". Replace that with -bm \"../ipcore_dir/microblaze_mcs.bmm\"\nSetting up XPS\nNow we need to actually setup XPS, the IDE Xilinx provides that will compile our code.\nWhen you installed ISE, you actually installed XPS too!\nIf you are using Ubuntu then you need to issue the following command because Ubuntu doesn't have a program called gmake, which is really just make.\n\nIf you are using Linux you can create a snazzy launcher by running the following.\n\nUnder Name enter XPS SDK.\nUnder Command enter /opt/Xilinx/14.6/ISE_DS/EDK/bin/lin64/xsdk, note that your version of ISE may vary.\nYou can find an icon at /opt/Xilinx/14.6/ISE_DS/EDK/eclipse/lin64/eclipse/plugins/com.xilinx.sdk.product_1.0.0/icons/xps_sdk_32.png\n\nOnce you have XPS open, there are a few hoops to jump through before the coding can begin.\nCreating the project\nClick File-&gt;New-&gt;Other...\nUnder Xilinx choose Hardware Platform Specification and click Next.\nEnter MojoDemo as the Project Name. Note that you can't have spaces in your project names.\nUnder Target Hardware Specification click Browse... and navigate to the ipcore_dir. Select microblaze_mcs_sdk.xml.\n\nClick Finish.\nNow you can create a project for your actual code. Click File-&gt;New-&gt;Other... and choose Application Project under Xilinx.\nUnder Project Name enter LED_Controller.\nMake sure that Hardware Platform is set to MojoDemo and the processor is microblaze_mcs.\nUnder Target Software make sure the OS Platform is set to standalone, Language is set to C, and Board Support Package is set to Create New -&gt; LED_Controller_bsp.\n\nClick Next.\nChoose Empty Application for a Template and click Finish.\nOpen the project folder on the left for your project, LED_Controller. Right click the src folder and choose New-&gt;Source File. Enter LEDBlinker.c as the file name and click Finish.\nOpen the new file and paste in the following code.\n\nThis code works by first initalizing the GPO module, fixed-interval timer, and interrupts. The fixed-interval timer is setup to fire an interrupt every millisecond which will call our interrupt handler, timerTick. Each time timerTick is called, it increments a global variable ct. The delay function uses ct to delay for specified number of milliseconds.\nIt is worth looking at the other templates when you create a project to get an idea of some other functions you can use.\nFind the hammer icon on the top tool bar to build the project and generate an .elf file. This is the file that tells ISE how to program the processor.\nAdding the .elf file to your project\nThere is one last command to run to finish the project setup.\nBack in ISE, go to the Tcl Console again and enter the following command.\n\nNote that you will have to replace /path/to/project with your actual path.\nIt should output something similar to the following.\n\nYou can now double click Generate Programming File to generate a .bin file that you can load onto your Mojo.\nIf all went well you should now see the LEDs counting the seconds.\nEditing the code\nIf you want to edit the code in XPS all you have to do after building the project is re-run the Generate Programming File stage in ISE to update the .bin file. You don't need to re-run Synthesize nor Implement Design.\n","id":"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/","title":"Embedded Processors"},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"body":"So far the tutorials have only used the signals defined already for you in the base project. This tutorial a very short example on how you can define your own inputs and outputs in your top level module and have them connect to the IO headers on the Mojo.\nRevisiting the button\nThe project for this tutorial will be very similar to the Creating a Project tutorial with one difference. Instead of using the reset button to control the LED, we are going to hook up an external button to control the LED.\nThis project assumes you've connected a button between P50 and V+ (3.3V) on the Mojo (P50 is labeled 50) and a 10K pulldown resistor from P50 and GND. This way P50 will be low when the button isn't pressed but high when it is.\nLike before we will start with the Mojo base project so make sure you've downloaded that if you haven't already.\nWe first need to open up mojo_top.v and make two minor changes.\nWe need to add our button to the module declaration.\n\nThis line should come at the end of the list (although order do not really matter). Make sure you put a comma at the end of the previous line as well.\nThe next change is to wire up our new input to the LED.\n\nAfter these two changes the file should look like this.\n\nOur module now has a new input named button which we wired up to the first LED. None of this should be surprising to you as it is almost exactly the same as the first time this was covered.\nThe UCF File\nThis is where all the good stuff happens.\nThere seems to be a very big piece of information missing from our above module. Sure we just declared a new input for our design and connected it up to the LED, but how do we know what IO pin that input connects to? This is where the User Constraints File (UCF) comes in. \nIn the src folder of the project you will find a file called mojo.ucf open that file now.\nTake a good look at what's inside. The first few lines are there to tell the tools that the Mojo will have a clock signal running at 50MHz. That is important for the way your design gets layed out in the FPGA because it will need to be able to run at at-least that speed. If for some reason the tools can't layout your design in such a way that it can run that fast it will notify you. This will be covered in much more depth later.\nThe rest of the file is simply there to define what pins our top module (mojo_top.v) connect to! We are going to have to add a new line for our button.\n\nThere are three parts to this line. The NET part tells the tools which signal you are assigning constraints to. The LOC part stands for location and defines the pin on the FPGA you want the signal to be connected to. Finally the IOSTANDARD specifies the standard to use. You should always use LVCMOS33 or LVTTL for the Mojo since the pins use 3.3V. For most practical purposes LVTTL and LVCMOS33 won't make a difference with your project. For more information see this document from Xilinx (Page 24).\nIf you look closely at the Mojo you will see a bunch of numbers next to the IO ports. These corrispond to the number you set LOC to. In this example I chose to connect the button the pin labled with 50 (top header, left side, bottom row) so the pin is P50. \nYou can also specify the pins an array should connect to by adding a line for each element and indexing that element with the &lt;&gt; notation. The signal led is an example of how this is done.\n\nOnce you've added that line to the end of the UCF file, save both files and you should be able to generate the bin file to load onto the Mojo. Go ahead and connect a button (make sure it has a pullup resistor) to pin 50 and test out your design. The LED should light up when the pin is high.\nThe same thing can be done for outputs, you just need to change the direction in the module declaration.\n","id":"https://alchitry.com/tutorials/verilog/mojo/external-io/","title":"External IO"},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"body":"Finite State Machines, or FSMs, are an incredibly powerful tool when designing digital circuits. This tutorial will teach what an FSM is through example. We will use a basic FSM to control a very simple robot.\n\nBefore we get into the nitty gritty of how to actually implement this, it's important to understand what an FSM actually is.\nWhat's an FSM?\nAn FSM, in its most general form, is a set of flipflops that hold only the current state, and a block of combinational logic that determines the the next state given the current state and some inputs. The output is determined by what the current state is. \nTake a look at the following diagram.\n\nThis is what an FSM looks like in hardware. The only storage it has is for the current state. Since the main block of logic is combinational, there can't be any flip-flops inside of it. Remember, combinational logic will produce the same outputs given the same set of inputs at any time. \nThis is all very abstract. Let's now look at how to actually design an FSM.\nThe States\nThe first thing to do when designing an FSM is to figure out what states you will need.\nSince we are going to use the FSM to control a robot, we need to think about the behavior we want.\nFirst, the robot has two contact switches mounted on the front of it as shown below.\n\nThese are wired up so that when they are not being pressed, the signal line is connected to ground, but when pressed, it get connected to +5V. Remember, the Mojo's IO pins are not 5V tolerant, however, because this robot is using the Servo Shield, this is exactly what we want.\nBy using these switches, the robot can realize when it runs into something. For some basic object avoidance, we will make the robot back up when it hits something then turn right if the left switch was pressed or turn left if the right switch was pressed. When the robot hasn't hit anything it will just drive forward.\nThis leads us to five states.\n\nFORWARD\nBACKUP_RIGHT\nTURN_RIGHT\n**BACKUP_LEFT\n**TURN_LEFT\n\nNotice that there are two versions of the BACKUP state, BACKUP_RIGHT and BACKUP_LEFT. This is because we need to encode in the states which one will turn right after it backs up and which will turn left. If we didn't have separate states, we would have to read the state of the switch after it backed up and at that point the switch would not be pressed anymore.\nTake a look at the basic flow of states to help clear this up.\n\nState Transitions\nWe now need to figure out under what conditions we would like the state to change.\nThe first one is easy, when the FSM is in the FORWARD state it should change to the BACKUP_RIGHT state when the left switch is pressed, or to the BACKUP_LEFT state when the right switch is pressed.\nThe next ones are a little different. We want them to just flow to the next state, but we can't just have them flow immediately to the next state otherwise the robot won't have any time to backup or turn! It will happen so fast that it will appear that nothing happened.\nTo keep the state the same for a longer amount of time, we need to introduce a counter.\nThe counter can't be part of the FSM because a counter requires some flip-flops to store the counter value! Instead, the counter is part of what is known as the data path. The FSM portion of circuit simply supplies signals to reset the counter and the data path provides signals like the counter has reached a certain value.\nThis naming convention is a bit arbitrary and you shouldn't worry about it too much when designing your own FSMs. If it seems to make your circuit a lot simpler if you break some rules, you probably should.\nTake a look now at the state diagram with the transitions labeled.\n\nImplementation\nThe easiest way to understand how to write an FSM is to just take a look at one.\n\nFirst let's look at the declaration of states.\n\nHere we declare the various states we will use in a human readable way. By using STATE_SIZE it makes it easy to add or remove states if we change the design later.\nAll the stuff with sl_d, sl_q, sr_d, and sr_q, are used to prevent meta-stability when reading the switches. Be sure to check out the metastability and debouncing tutorial if you need a refresher. \nTake note of the following two lines.\n\nThe first line says that the counter should continue counting unless something in our FSM says otherwise.\nThe second line says that the state should remain the same unless we specify a new state.\nThese types of defaults are very good practice because they will prevent the case where you forget to assign a value to the reg which results in latches and bad things.\nFinally, the first case statement is used for determining the next state.\n\nWhen the counter is found to be high enough, the state transitions from BACKUP_XXX to TURN_XXX. Once it gets high enough again, it transitions from TURN_XXX to FORWARD. The counter will overflow during the first transition because it reached the top, and when the FSM reaches the FORWARD state the counter is held at 0.\nThe second case statement is used to generate the outputs based on the current state.\n\nThese are fed to two servo modules (see the servos tutorial) for more info) and control the wheels of the robot.\nFinal Product\nNow check out the FSM in action!\n\n    \n\nYou can download the full project code here.\n","id":"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/","title":"Finite State Machines"},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"body":"Timing is a term used in digital circuits to refer to the time it takes a signal to propagate from one flip-flop, through some combinational logic, to the next flip-flop.\nTake a look at the following diagram.\n\nIt is very important to understand that combinational logic is not instantaneous. It takes time for the signal to propagate. The reason for this is that digital circuits actually look like a bunch of RC circuits. MOSFETs, a type of transistor, are the transistors of choice for digital circuits. The gate (switch part) of a MOSFET acts much like a capacitor and takes a small amount of time to charge and discharge (turn on and off the transistor). The more transistors you need to turn on and off, the longer it takes.\nFor the scope of this tutorial, it's not important to understand exactly why it takes a certain amount of time for a signal to propagate through combination logic, just that it does and the more logic you have the longer it will take.\nSince each flip-flop will copy the value of D to Q at the rising edge of each clock, that means that we have a single clock cycle for the output of the first flip-flop to propagate through our combinational logic and make it to the input of the second flip-flop.\n\nIf you recall from the metastability and debouncing tutorial, flip-flops require their inputs to be stable for a certain amount of time before and after the rising edge of the clock. These times are known as the setup and hold times respectively. These parameters constrain our circuit even more because now we have to ensure that the delay of our combinational logic is short enough that the signal will get there in a clock period minus the setup time. However, it can't be too fast that it violates the hold time!\nThe last flip-flop parameter we'll be concerned about here is the clock-to-Q propagation delay.\n\nIn past tutorials, we have assumed that the moment the rising edge of the clock happens, the value of D showed up at Q. However, like all things, there is a slight delay. The clock-to-Q propagation delay specifies the amount of time after the rising edge of the clock that Q outputs the new value. This delay cuts into the time we have for the combinational logic since the input to the combinational logic is delayed!\nTo summarize, the time it take for the signal to propagate through the combinational logic must be shorter than the clock period minus the clock-to-Q propagation delay minus the setup time. The combinational logic delay must also be greater than the hold time minus the clock-to-Q propagation delay.\nIf we let the combinational logic delay = CLD, clock period = CLK, setup time = ST, hold time = HT, clock-to-Q propagation delay = CQ, then the following formula shows our constraints.\nHT - CQ &lt; CLD &lt; CLK - CQ - ST\nContamination and Propagation Delays\nThere is another invalid assumption we need to correct. We assumed that the output of our combinational logic was constant until the correct value showed up. This is not true. While the correct value is propagating, the output of the combinational logic can change multiple times before settling on the correct value. There are two important parameters that capture this behavior. The first, contamination delay, is the amount of time the output of the combinational logic will stay constant after it's inputs are changed. After that delay the outputs are contaminated. The second, combinational logic propagation delay, is the time that it takes for the output to be valid after the input changes.\nThat means for the time between the contamination delay and propagation delay of our combinational logic, its output is unpredictable and possibly invalid.\nWe now have to make sure that the contamination delay does not violate the hold time, and that the combinational logic propogation delay does not violate the setup time.\nIf we let the combinational logic propagation delay = CLPD and the contamination delay = CD the the following new formulas capture our constraints.\nCD &gt; HT - CQ\nCLPD &lt; CLK - CQ - ST\nClock Skew\nThis is the last invalid assumption we need to correct. We assumed that the clock reached all the flip-flops in the circuit at the same exact time. Since the clock needs to travel through the chip, this can't possibly be the case. The difference in time it takes to reach two flip-flops is known as the clock skew.\nIn some cases clock skew can actually be helpful, but in many cases it takes away time from us.\nIf we let clock skew = CS then the following formulas are updated versions of the previous ones.\nCD &gt; HT - CQ +/- CS\nCLPD &lt; CLK - CQ - ST +/- CS\nNote that the clock skew can have either sign. This is since the clock could arrive earlier to the first flip-flop, or later. It really just depends on how the circuit is laid out on the chip. Notice that if the first flip-flop gets the clock earlier (positive clock skew in our convention), then the constraint on the contamination delay becomes stricter and the constraint on the combinational logic propagation delay becomes looser. If the clock arrives at the second flip-flop first, the opposite is true.\nIn general clock skew is bad. This is why FPGAs have special resources dedicated to routing clock signals. These are designed to deliver the clock to the entire FPGA (or sub-sections for local clocks) with minimal clock skew.\nThe full picture\nEnough of all these equations. Let's take a look at the following diagram which shows it all.\nIn past tutorials, we have assumed that the moment the rising edge of the clock happens, the value of D showed up at Q. However, like all things, there is a slight delay. The clock-to-Q propagation delay specifies the amount of time after the rising edge of the clock that Q outputs the new value. This delay cuts into the time we have for the combinational logic since the input to the combinational logic is delayed!\nTo summarize, the time it take for the signal to propagate through the combinational logic must be shorter than the clock period minus the clock-to-Q propagation delay minus the setup time. The combinational logic delay must also be greater than the hold time minus the clock-to-Q propagation delay.\nIf we let the combinational logic delay = CLD, clock period = CLK, setup time = ST, hold time = HT, clock-to-Q propagation delay = CQ, then the following formula shows our constraints.\nHT - CQ &lt; CLD &lt; CLK - CQ - ST\nContamination and Propagation Delays\nThere is another invalid assumption we need to correct. We assumed that the output of our combinational logic was constant until the correct value showed up. This is not true. While the correct value is propagating, the output of the combinational logic can change multiple times before settling on the correct value. There are two important parameters that capture this behavior. The first, contamination delay, is the amount of time the output of the combinational logic will stay constant after it's inputs are changed. After that delay the outputs are contaminated. The second, combinational logic propagation delay, is the time that it takes for the output to be valid after the input changes.\nThat means for the time between the contamination delay and propagation delay of our combinational logic, its output is unpredictable and possibly invalid.\nWe now have to make sure that the contamination delay does not violate the hold time, and that the combinational logic propogation delay does not violate the setup time.\nIf we let the combinational logic propagation delay = CLPD and the contamination delay = CD the the following new formulas capture our constraints.\nCD &gt; HT - CQ\nCLPD &lt; CLK - CQ - ST\nClock Skew\nThis is the last invalid assumption we need to correct. We assumed that the clock reached all the flip-flops in the circuit at the same exact time. Since the clock needs to travel through the chip, this can't possibly be the case. The difference in time it takes to reach two flip-flops is known as the clock skew.\nIn some cases clock skew can actually be helpful, but in many cases it takes away time from us.\nIf we let clock skew = CS then the following formulas are updated versions of the previous ones.\nCD &gt; HT - CQ +/- CS\nCLPD &lt; CLK - CQ - ST +/- CS\nNote that the clock skew can have either sign. This is since the clock could arrive earlier to the first flip-flop, or later. It really just depends on how the circuit is laid out on the chip. Notice that if the first flip-flop gets the clock earlier (positive clock skew in our convention), then the constraint on the contamination delay becomes stricter and the constraint on the combinational logic propagation delay becomes looser. If the clock arrives at the second flip-flop first, the opposite is true.\nIn general clock skew is bad. This is why FPGAs have special resources dedicated to routing clock signals. These are designed to deliver the clock to the entire FPGA (or sub-sections for local clocks) with minimal clock skew.\nThe full picture\nEnough of all these equations. Let's take a look at the following diagram which shows it all.\n\nFor this diagram, the combinational logic just inverts the signal. The signals with a suffix of 1 are the left flip-flop in the first diagram, while the ones with a suffix of 2 are the right flip-flop. The grey shaded part of the signal is to show how that pulse propagates through the circuit.\nIf you look at Q1 and Q2 then you will notice how Q2 is an inverted version of Q1 delayed by a clock cycle (since it goes through a flip-flop).\nAlso notice in this example, timing is met. The setup and hold times of the flip-flops are never violated.\nWhat you can control\nWhen you are using an FPGA, you have control over very few of the parameters previously mentioned. This is because they are largely determined by the physical properties of the FPGA circuitry, but also because synthesis tools do a lot of the work for you.\nThe two largest factors you have direct control over are the clock period and the combinational logic propagation delay. The delay can be shortened by removing some of the combinational logic between two flip-flops. How you remove this logic is up to you. Besides optimization of your design, you can pipeline your design. We'll cover that in a little bit. First, let's take a look at a case when timing is not being met.\nBroken timing\nDownload this project and open it in ISE.\nThe timing.v file is the one we are interested. Its contents are shown below.\n\nNotice line 16. This line contains a ton of multiplication. All of these multiplications will be instantiated as a bunch of combinational logic between the flip-flops used at the input and output of the module.\nAfter you open it, build the programming file. Once that done it should look like the following screen shot.\n\nNotice the spot that is highlighted. Even though the project built successfully, it failed to meet timing. That means that our design won't work properly at the clock we specified. There is simply too much combinational logic to put between two flip flops in this design.\nYou can click on (Timing Report) to get more details on where timing could not be meet.\n\nWhile there are many paths that failed to meet timing, it's usually most helpful to just look at the worst ones and see where the problem is. Conveniently, those show up at the top of the list.\nTake a look at the Source and Destination fields. Even though what they say is a bit cryptic, you can usually glean enough information to tell where the problem is. In our case you can tell that the source is in our slow_multiply module and has to do with the signal a_q. This is exactly what we expect with all those multiplies.\nOne important thing to notice in the report is where it specifies the minimum period. In our case it says the minimum period is 25.334ns. That means the fastest our clock can be is 39.47 MHz (1 / 25.334ns). If we didn't care about maintaining the 50MHz clock, we could scale it down to say a 35MHz clock and our circuit would perform as expected.\nAnother important thing to notice is that there are no timing errors for the hold paths. This is because ISE tries really hard to satisfy the hold time even if that means making some of the setup times be violated. The reason for this is as long as all the hold times are satisfied, you can always scale back your clock speed to get your circuit to work. If there were hold time violations, the circuit could never work regardless of the clock frequency.\nPipelining\nSo assuming we want to keep our 50MHz clock, how do we fix the timing issue? The simple answer is to use a technique called pipelining. All that pipelining is, is adding flip-flops in the middle of big combinational logic blocks. In this case, since the timing problem isn't too bad, we are going to just place a set of flip-flops before the final largest (and slowest) multiplication.\nOpen up timing.v and replace it with the following.\n\nNow, the fourth power of a and b are computed in one clock cycle and in the next clock cycle those results are then multiplied to create the final result.\nIf you save the file and rebuild the project, you will notice that timing is now satisfied.\n\nOne important note with pipelining is that we only increase the latency of our result. We are not decreasing the throughput. That means that we can feed in a new set of numbers to be multiplied every clock cycle, but that their results won't show up at c until two clock cycles later. If we just decreased the clock speed to meet timing, we would be increasing latency and decreasing throughput.\nConclusion\nIt is very important to be thinking of what clock speed you will want your design to run at when you are writing your code. You will get a feel for when something will take too long to complete in one clock cycle with experience. One of the reasons the Mojo has a 50MHz clock is because 50MHz is fairly slow. That means that unless you decided to do a ton of multiplication or some other complex logic, you probably won't run into timing issues. However, you can synthesize faster clocks inside the FPGA and if you start clocking the Mojo at, say 150MHz, timing can become a real concern.\n","id":"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/","title":"FPGA Timing"},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"body":"The serial interface has changed on April 10, 2015. If you are having trouble, make sure you have the latest firmware and Mojo Base Project!\nOne of the cool features of the Mojo is that there is a microcontroller on-board that is used to configure the FPGA. However, once the FPGA is configured, the microcontroller is free to help out the FPGA! There are two main functions you can use the microcontroller for without modifying the code yourself. The first is an analog to digital convert and the other, which we are covering here, is a USB to serial converter.\nThis allows you to use the USB port on the Mojo to send data to your computer. The protocol used to send data isn't too complicated at it's core, but luckily for you we already wrote that part of the design for you! \nIf you grab a copy of the Mojo Base Project, all the source for this is included. Make sure you download a fresh copy for this tutorial.\nAVR Interface\nThe main module you need to worry about is the avr_interface module. AVR is the type of microcontroller on the Mojo. This module is the only one you need to directly interface with. \nAs you've probably noticed in other tutorials, out mojo_top module had a lot of extra inputs and outputs that weren't being used. Those are all used to interface with the AVR and should be connected to the avr_interface module.\n\nHere is the port declaration of the module.  Many of the signals are named the same as the top level ports. The few exceptions are tx which connects to avr_rx, rx which connects to avr_tx, and tx_block which connects to avr_rx_busy. \nFor now forget about the channel and sample signals, they are used to interface with the ADC and will be covered in another tutorial.\nThe signals that are important right now are tx_data, new_tx_data, tx_busy, rx_data, new_rx_data.\ntx_data is the data (one byte) that you want to send over the virtual serial port. When you have a new byte you want to send, you need to check tx_busy to make sure the module is not busy in anyway. The busy flag can be set for a number of reasons which include, the module is currently sending a byte, cclk has not signaled the AVR is ready for data, or the AVR can't accept new data because it's buffer is full.\nIf the tx_busy flag is not set, you can set new_tx_data high for one clock cycle to indicate you want the byte present on tx_data to be sent. \nTo make this clearer, we will implement the classic Hello World! example.\nROMs\nSince we want to send the string Hello World! through the serial port we need to store it somewhere that is easy to access. This is where a ROM (Read Only Memory) comes in handy.\nHere is the ROM we will use. Create a new file named message_rom.v and add the following code.\n\nA ROM generally just consists of a few ports, in our case three. The way a ROM works is you specify an address, addr, and on the next clock cycle the corresponding data appears at it's output port, data.\n\nThis line is worth mentioning because it is the first time we needed a 2D array. For whatever reason, in Verilog when you want a multi-dimensional array, you specify the extra dimensions after the name of your array.\nA 3D array could look like this.\n\nOne thing to note, you aren't allowed to use multi-dimensional arrays in port declarations.\nTo address into our array of data we use the 4 bit wide value from addr, which can have a value from 0-15. However, our array only has indexes up to 13! To compensate for this we use the if statement to provide a default value for the out-of-bounds case.\nState Machines\nA state machine is a very useful technique when you are working with FPGAs. Most designs will have many state machines in them. You could even classify a processor as a state machine in the broad use of the term.\nSo what is a state machine? For the FPGA, it's basically a circuit that has various states and it will behave differently depending on the state it's in. Certain sets of input may cause the state to change.\nThe text-book example is a traffic light. The light has a few states, red, yellow, green, and it will transition between these states when certain events happen like a car waiting for a green, or a certain amount of time has elapsed.\nIn our example, our state machine is very simple and it has only two states, IDLE and PRINT_MESSAGE. As the names suggest, the IDLE state just waits for a signal to transition to the PRINT_MESSAGE state. The PRINT_MESSAGE state will print out our Hello World! message then return to the IDLE state.\n\nAdd a new file named message_printer.v and add this code.\nIt is good practice to use localparams to declare the states in your state machine. That makes it not only easier to read, but a lot easier to add or remove states.\nFor this example, I decided it would be a good idea to wait for an h before printing Hello World!. Once an h is detected, the state changes to PRINT_MESSAGE. It then uses addr_d/_q to increment through the ROM sending each character.\nOne important thing to notice is the first three lines in the combinational always block. It's important to always give regs a value. If it is possible to run through the always block without assigning a value to every reg you can end up with something known as a latch. Without going into detail, latches are bad! They can make things behave very unpredictably when actually loaded on the FPGA (although you may not notice it in simulation)! ISE will throw warnings when it detects a latch so you should always check for those.\nThe easy solution is to just assign every reg a default value in the beginning of your always block.\nCase Statements\nTo implement state machines, you usually use a case statement. If you've ever programmed in C/C++ or Java this should be pretty familiar (it's basically a switch statement).\nThe first line\n\nsets up the case statement and says we are going to be looking at the value of state_q.\nEach of the following blocks of code is only used in the case that state_q matches the value stated. So the first part is used when state_q is IDLE and the second is used when it is PRINT_MESSAGE. \nIt is important to always have a default entry in your case statement that will bring you back to a known state. You may be thinking that you don't need one since it should be impossible to have any other state than the two we defined. You may be surprised to find out that this is not the case. If the state is encoded with just 1 bit then it is true that it is impossible to be anything else because 1 bit only has 2 values. However, when your design gets synthesized the tools will generally optimize the encoding used by your states and it may make state_q actually 2 bits! You may be thinking that this shouldn't change anything because no where in your design do you specify a change to an unknown state. There is however, a small chance that the value a register holds gets flipped randomly putting you in an unknown state! This can be caused by a number of events including radiation. Providing a default case makes sure that if this happens your design will still have predictable behavior. \nThe Top Module\nHere is the code for mojo_top.v\n\nHere we just instantiate the two modules. Notice the assign statements that used to be at the top were removed since we are now using those ports.\nYou should now be able to synthesize your project and load it onto your Mojo. I tested this using minicom on Linux, but any serial terminal program should work. It doesn't matter the parameters you specify for the serial port as they are ignored. \nWhen you send h over the serial port the Mojo should respond with Hello World!.\n","id":"https://alchitry.com/tutorials/verilog/mojo/hello-world/","title":"Hello World!"},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"body":"This tutorial covers a common technique for interfacing a peripheral to a processor known as memory mapping. Memory mapping is were you break out a set of functions or settings and map them to a set of values that are selected by a given address. Typically the master is able to read and write these values however it chooses much like a block of RAM. However, these values aren't just blocks of memory, they effect some external device. Because this is used for interfacing it is sometimes called memory mapped IO.\nMemory mapped IO in processors\nThe most common place you see memory mapped IO is inside a processor. Actually, if you've ever programmed an Arduino or other microcontroller, chances are you have already been exposed to this technique.\nA great example is the PORT registers of an ATmega microcontroller (the ones used by Arduino). When you write code for these processors you can write something like the following.\n\nThis will set the 8 IO pins designated to PORTB to the value 0xAA. However, in your code PORTB is actually just a macro and is really a pointer to a special memory address. This address in memory doesn't simply map to RAM but also maps to an IO peripheral that takes the value and outputs it to the IO pins.\nWithout memory mapped IO, the microcontroller would have no way to input or output any data!\nThis example of an IO port is very simple, but the devices that are memory mapped can literally be anything. Pretty much all processors use this technique, including your computer. Everything in your computer is memory mapped to the CPU. When you install a driver on your computer, you are installing the piece of code responsible for reading and writing values to these special memory locations to make the device work.\nMemory mapping the FPGA\nThe microcontroller on the Mojo doesn't have an external RAM interface so we can't map the FPGA directly to its memory space. However, the FPGA is connected over an SPI bus and we can use that!\nBefore we dive into how we are going to do this, download the two demo projects for this tutorial.\n\n\nFPGA Project\n\n\nArduino Project\n\n\nThis tutorial is a little bit different from the rest of the tutorials in that these two projects are already ready to go. You don't have to make any modifications before building them. This is because this tutorial is not to show how cool it is to make some LEDs blink (it's super cool I know), but rather as a starting point for interfacing the FPGA and Arduino together. I recommend downloading these two projects every time you want to start a new project that interfaces the two devices and start modifying it.\nThe FPGA side of things\nIn the FPGA project, open up mojo_top.v and take a look at the basic setup. There are two modules instantiated, avr_interface and reg_ctrl.\navr_interface is responsible for all the communications with the Arduino (AVR, ATmega, and Arduino are basically the same in this context). This is a modified version of the module found in the base project. It has been modified to provide a basic register interface over SPI instead of allowing the FPGA to read the ADC ports. You should also note that the pins that used to be adc_channel are now avr_flags. These will be covered in detail more later.\nYou can open up avr_interface to checkout how the register interface is implemented. The basic protocol is as follows.\n\n\nThe transfer starts by the AVR pulling CS (Chip Select) low. The first byte sent specifies what type of transfer (read or write), if the address is auto-incremented, and the address. The following bytes are the values that are read or written to the corresponding addresses. If inc is 1, B1 is from addr, B2 is from addr + 1, and Bn is from addr + n - 1. If inc is 0, then the same address is read or written multiple times. If the transfer is for a single address, inc doesn't make a difference. A transfer is terminated by CS going high.\nFor example, to write 0xAA to address 0x00, we would send 0x80 (write address 0) followed by 0xAA. To write 0xAA to address 0 and 0xBB to address 1, we would send 0xC0 (write, auto-inc, address 0), 0xAA, 0xBB. It's the same pattern for reads except the values are read on MISO instead of written to MOSI.\nYou don't really have to really worry about this protocol since the example code covers both ends of the communication. You simply specify the address and values. However, it is useful to know so you can write your own mutli-byte transfer functions using auto-inc for efficiency.\nDefining the addresses\nAll the address definitions are in the the module reg_ctrl. Open up reg_ctrl.v and take a look.\nThe demo code only has one valid address, address 0. That address is used to read the write values to the LEDs.\n\nThis block of code is what actually makes address 0 correspond to the LEDs. There is a group of flip-flops led_d/q that are connected to the LEDs. When the address is 0 and it's a write, the value of this flip-flop is updated with the write_value. When the address is 0 and it's a read, the read_value_d/q flip-flops are set to the value of led_q. Those flip-flops provide the data for the next SPI transfer. Since the FPGA is clocked at 50MHz and the SPI bus is substantially slower at 4MHz, the FPGA has a few clock cycles to prepare the read data before it is needed. This can be helpful if your read can't be done instantly, unlike this case.\nThe Arduino side of things\nIn the Arduino project, the code for the demo is pretty short and simple.\nFirst take a look at the registers.h file. In this file I defined LED_REG to be the address of the LEDs, or 0x00. Using this file to define all the address in your design will make it much easier if you ever need to move things around.\nNow take a look at fpga_interface as shown below.\n\nThese two functions implement the basic protocol outlined earlier. They only allow for transfers of a single byte and don't use the auto-inc signal at all. If you need to read or write many addresses you should add your own functions in this file that can effienctly interface with your FPGA design.\nNow for the brains of the operation. Take a look at the main file, mojo_mem_map. Most of the code in this file is just used for loading the FPGA, however, the functions userLoop() and userInit() are your's to mess with. It's important to try and keep the userLoop() execution time low (no while(1) loops) so that the Mojo Loader can get the Mojo's attention before it times out. If it does timeout, a quick retry usually will be enough to get it to work.\n\nThis demo code simply reads the value of the LED address and adds one to it. That new value is written back to the LED address. This happens every 100ms thanks the millis() function. The delay() function isn't used because that would block execution and delay the Mojo from entering loading mode when requested. In this case a 100ms delay really wouldn't hurt anything, but this is shown as a best practice.\nIf you load the FPGA and the Arduino with the demo code, the LEDs should start counting up.\nAVR Flags\nThere are four signals named avr_flags that are just general purpose pins that connect the FPGA and AVR. These are great when the AVR is waiting for the FPGA to do something, or for the FPGA to get the AVR's attention. They are configured as inputs to the AVR (outputs of the FPGA) in the demo project.\nThey can be hooked up anywhere in your design to signal the status of some process.\nTo read the flags on the AVR you can use code like this.\n\nflags holds the value of all four flags so you can test for each one individually or some combination.\nConclusion\nSo what can you use this for? You can basically turn the FPGA into any peripheral you can imagine for your Arduino projects. For a more advanced example on how to use this in your own projects, check out the hexapod which uses this extensively. The FPGA in this project basically becomes a servo controller and a blob detection sensor. The Arduino code doesn't have to know anything about the camera, it just receives blobs that are detected in the images.\n","id":"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/","title":"Memory Mapping"},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"body":"In this tutorial we will cover some of the pit falls that can happen when having asynchronous inputs to the Mojo. The more general case is metastability, but we will also cover debouncing of buttons. These are both important if you want to reliably detect when a button is being pressed or interface with anything that is not synchronized to the Mojo's clock.\nMetastability\nTo understand metastability, you first need a little background on the timing requirements of the flip-flop. As we discussed before, a flip-flop will copy the value at the D side to the Q side at the positive edge of the clock and hold the value steady until the next positive edge. What we didn't  cover was what is known as the setup and hold timing constraints.\nThis tutorial will not go into too much detail on what causes these constraints and what their actual values are. All that is important right now, is to know that the setup constraint tells you how long before the positive edge of the clock the value on the D side must be stable. The hold time tells you how long after the positive edge of the clock the D side must continue to be stable. \nHere is a diagram illustrating this.\n\nThe areas that D needs to be constant are shaded in grey on the clock. As you can see the setup time specifies the time before the rising edge and the hold time is the time after the rising edge.\nThe D and the Q signals under the clock are an example of what could happen. The first two rising edges are valid since during the setup and hold time D is constant. For the last edge D changes when it shouldn't so the value of Q becomes unknown.\nQ may take a random value of 0 or 1, however, that is the best case. There is also a possibility that Q will get stuck somewhere between 0 and 1 (0.5?!?), or worse yet it may oscillate, flipping between 0 and 1 very rapidly. \nAs you may have guessed you don't want any of that to happen. Bad things will happen and your circuit will do unexpected things. \nThere are two solutions to this problem.\nFirst, you can just design your circuit so this never happens! This is exactly what the tools (ISE) does for you when you map your design. If it can't meet timing for some reason you'll get timing errors. If you are just running the Mojo at 50MHz, you probably won't encounter these unless you do multiple multiplications between flip flops or some other complicated computational logic. This will be covered more in later tutorials.\nAs you may have realized, sometimes you can't control when a signal will change. For this tutorial we are using a button. It's impossible for us to guarantee that the button won't be pressed and violate the setup and hold constraints. \nThe second solution is to then use not one but two flip-flops! \n\nThis will add a small amount of latency to your input signal, but it significantly reduces the chance that you will encounter metastability problems. This is the solution we will use to read the button reliably.\nIt is important to note that this does not solve the metastability problem and there is still a small chance you could have problems. However, using two flip-flops drastically reduces that chance. If you are really worried about a certain input, you can chain more flip-flops together for a smaller chance of stability issues. However, there are diminishing returns and two will be plenty for most cases.\nDebouncing\nWhen you press a button, there is a chance that the button will not simply go from open to closed. Since a button is a mechanical device the contacts can bounce. When a button bounces the value it produces looks something like this.\n\nFor a short period after the button is pressed the value you read from an IO pin may toggle between 0 and 1 a few times before settling on the actual value. This is where debouncing comes into play.\nTo debounce a button, you just need to require that for a button to register as being pressed, it must look like it's being pressed for a set amount of time. In this case, being pressed is when the value of the button is 1. If you read enough 1's in a row it is safe to assume that the button has stopped bouncing and you can register one button press.\nIf you fail to do this and you are using the button to increment a counter, then the counter may increase by more than 1 per button press since it will appear that each bounce was a separate press.\n\nHere is a simple module that takes a button press and passes it through two flip-flops to prevent stability issues. With the synchronized signal, a counter is incremented when the button is pressed and reset when it is 0. The counter will saturate at it's max value. Once it hit's the max value it is safe to say the the button has been pressed and the output is set to 1.\nBy using the button_conditioner module you can be sure that you will be able to reliably read button presses.\n","id":"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/","title":"Metastability and Debouncing"},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"body":"Pulse-Width Modulation, or PWM is a very common technique that varies the width of the pulses in a pulse-train. PWM has a few applications, the main ones are for controlling things like servos and speed controllers and limiting the effective power for things like motors and LEDs. This tutorial will cover how to use PWM to change the brightness of an LED. \nPulse-Trains\nA pulse-train is just the name given to a series of pulses that come after one another. A simple pulse train could look like this one.\n\nAs time goes by the signal alternates between high (1) and low (0). Each pulse comes one after another in a very ordered fashion. In this example the pulse is high for 1/3 of the time. That means that the signal has a duty cycle of 33%. If the signal had a duty cycle of 50% then the signal would be high and low for equal amounts of time.\nCreating a Pulse-Train\nIn the synchronous logic tutorial we created a circuit that could blinked an LED. What we really created was a circuit that created a pulse-train with a 50% duty cycle!  Because we used such a large counter the period (the time between the beginning of two pulses) was very long we could easily see the LED turn on and off.\nWhat would happen if instead of using a 25 bit counter we used an 8 bit counter? The LED would blink at 50MHz / 2^8 = 195,313 Hz or 195,313 times per second. There is no way our eyes are fast enough to see it blink that fast. Since we can't see it blink what would it look like? It would not look like a whole lot, it would just appear to always be on! However, the interesting part is that since it is only on for half of the time our eye averages the light and the LED appears to be dimmer than if it was on the entire time!\nI recommend you try modifying the code form that tutorial to have one LED blinking from an 8 bit counter and another LED always on so you can see the difference.\nHow does PWM play into all of this? As you may have guessed, by varying the duty cycle of the signal we can effectively control the brightness of the LED! With a 0% duty cycle the LED is off, with a 100% duty cycle the LED is full brightness, and by controlling the duty cycles we can reach any point in between.\nWhen we were blinking the LED we used a simplification because we always wanted a 50% duty cycle. Instead of saying the LED should be on when the counter is greater than half its max value, we simply used the most significant bit. However, in the case where we want to create a signal with an arbitrary duty cycle we need to be able to control the value we are comparing the counter to.\nHere is an example where we want to create the same 33% duty cycle signal shown before.\n\nThe graph on the bottom is the value of our counter over time. You can see the Compare value is set to 1/3 of the Max value. If we output a 1 whenever the value of the counter is less than Compare and a 0 otherwise you can see we create a pulse-train with a 33% duty cycle!\nNow if we want to change the duty cycle of our signal all we need to do is vary the value of Compare and everything will take care of itself. Here's another example, but now with a 66% duty cycle.\n\nYou can see that by simply raising the value of Compare to 2/3 of Max our duty cycle became 66%!\nTo implement this in Verilog is pretty simple and only requires a few modifications to the blinker code.\n\nLet's put this all together in a project. Make sure you've downloaded the Mojo Base Project to work from. Create a new source file called PWM.v and add the contents of the code above.\nParameters\nThis code has something new, the parameter. Parameters are constants that are used to configure the behavior of a module when your code is synthesized. These are useful for making generic modules that can be reused.\nParameters are declared before the IO ports by using the #( ... ) syntax. You can list as many parameters as you like by separating them with commas. If you assign a parameter a value, like we did in this example, then that is the default value and will be used if a value isn't specified when the module is instantiated. \nInstantiating the module\nJust like before, since we added a new module, we need to instantiate it in the mojo_top.v file. \nFor this example we are going to instantiate 8 PWM modules and give each one a different constant compare value. That way we should get each of the LEDs on the Mojo to be at a different brightness.\n\nFor this example we set CTR_LEN to be 3 because we only need 8 different brightness values. For whatever reason, when you instantiate the module the parameters come before the name of the instance. \nGo ahead and synthesize the code in ISE and load it onto your Mojo. You should see the top LED is max brightness and each one under it is slightly dimmer. \nFor Generate Loops\nSometimes when you want to instantiate a bunch of the same thing it is much easier to use a special type of for loop, called the for generate loop. If we rewrite our code above using a for generate loop it will look like this.\n\nThis is so much cleaner!\nIt is important to remember that all the numbers used for the for loop must be constants since the synthesizer needs to be able to figure out exactly how many times to duplicate the PWM module in hardware! In this case we get 8 copies of the same circuit in our design.\nThe tag pwm_gen_loop is the name of the for loop. When working with generate statements you need to give the loop a name. It uses that name and the value of i to assign a unique name to each of the instances of the PWM module. This is important when simulating.\nCreating Animations\nThis code is great and all, but the LEDs are just static. In this example we are going to make an LED fade in and out.\nFirst we need to figure out what do we have to do to make it fade in and out? We know that the value of compare sets the brightness of the LED so we just need to vary compare up and down. At first this seems like it could be done using a simple counter, but there's a problem with that. Once a counter gets to its max value it resets to 0 just like this.\n\nIn this picture the grayed out areas are where the MSB of the counter is 1. If instead of looking at the value of the whole counter, we look at the value without the MSB the counter will look like this.\n\nThe max value of the counter become half of what it used to be, but the frequency is doubled. However, we now have a way to make the counter behave like we want it to. If we simply invert the value of the counter when the MSB is 1, we end up with this.\n\nThat looks much better! If we feed that signal into the compare signal of the PWM module the LED will fade in and out just like we want.\nThis is great but how do we actually invert the value of the counter? One way to do it is to take Max/2 and subtract the counter value. However, there is a better way to do this. If we simply invert all the bits we get the same effect! For example if we are counting from 0-7 the first three numbers are 000, 001, and 010. If we invert the bits that becomes 111, 110, 101, or 7, 6, 5. Simply by inverting each bit we can change the counter from counting up to counting down.\nLet's add this counter to the project. Create a new file called counter.v and add the following to it.\n\nThis is just a basic counter with the inversion method to make the value count up then down. Note that we are using a large 25 bit counter, but we are only using the top few bits. This is because we need the counter to be slow enough for us to see the LED fade in and out!\nAlso note that the output value is declared as a reg. That allows us to assign a value to it directly in the always block.\nWe now need to wire this up to our PWM module in mojo_top.v.\n\nThis code is fairly straight forward, but it uses a new feature of Verilog. Take a look at the line below.\n\nThe {{}} syntax allows you to duplicate a signal a set number of times. In this case we are duplicating the one wire wide signal pwm into an eight wire wide signal with identical values. This is just to make all the LEDs do the same thing without having to assign each one pwm individually.\nYou can now synthesize your project and check it out on the Mojo. All the LEDs should fade in and out.\nPutting it all together\nThe code above is actually a bit inefficient. This is because we have but of redundancy. The counter in our PWM module will have the exact same value as the eight LSBs in our counter module! It turns out that ISE is actually smart enough to figure this out and it will optimize one of them away and just use one. If you look in the warning when you synthesize the project you will see something like the following for each of the eight signals.\n\nXst:2261 - The FF/Latchin Unitis equivalent to the following FF/Latch, which will be removed :\n\nAnother thing to consider is that if you want to have multiple PWM units you really don't need multiple counters because they will all be the same. \nThe Mojo ships with an example project that fades the LEDs in a fancy wave pattern. Here is the module responsible for that.\n\nThis module has a few fancy tricks, like the one with the inverted counter, to make it very compact. It also gets away with using only one counter to control all eight LEDs even though each has a different duty cycle!\nThis code uses a different type of for loop, but it accomplishes the same thing and should be fairly easy to understand. Just like with for generate loops the number of loop iterations needs to be constant. When designing hardware it is important to think of for loops as simply a compact way to write something.\nThe counter value is offset by a different amount for each LED which creates the wave effect. \nI'll leave it up to you to instantiate this module and connect its output to the LEDs in mojo_top.v. This is similar to the previous mojo_top.v file except instead of using the same signal (pwm) for all eight LEDs, you can directly connect the LED signal to the output of the module.\n","id":"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/","title":"Pulse Width Modulation"},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"body":"This tutorial will cover how DRAM (Dynamic Random Access Memory), or more specifically SDRAM (Synchronized DRAM), works and how you can use it in your FPGA projects.\nWhat is RAM?\nIt is first important to understand what RAM is in general before diving into a specific type. RAM is simply a large block of memory that you can access more or less at random very quickly. It provides temporary storage for your design for things like images, video, or sampled data. In some applications it can even be used to store the instructions and data for a processor.\nNotice the word temporary I used. This is because RAM is a volatile form of memory. That means without power, the contents of the memory will be lost.\nRAM is organized into banks, rows, and columns. I like to think of RAM as a set of notebooks where each notebook is a bank, each page is a row, and each line is a column. Each bank, or notebook, can be accessed independently of the other banks. Each bank is comprised of many rows and each row has many columns. To access a specific piece of data you must specify all three pieces of information, the bank, row, and column.\nThe actual protocol required to access data depends on the type of RAM being used. However, all RAM breaks our a very similar interface. You generally have an address input, which specifies the row and column, a bank select input, which specifies the bank, a data input/output, which is used for reading and writing data, and a few control signals.\nHow DRAM works\nSo now you know that any type of RAM is used to store large amount of data, how does it actually store this data?\nThe basic storage element behind DRAM is the capacitor. Just as a basic refresher, a capacitor is a device that is able to store a charge. You can think of them much like a balloon. Just as you can fill a balloon with some air, you can fill a capacitor with some charge.\nThe basic cell in DRAM looks like the following.\n\nThere is simply a capacitor that stores a charge, and a transistor that allows charge to either be put into the capacitor or taken out.\nThese cells are arranged into a large 2D array of rows and columns. These are the same rows and columns from before.\nWhen you write data to DRAM, charge is placed on capacitors that should have a value of 1, but no charge is placed on capacitors that have a value of 0.\nWhen you read data from DRAM, the charge on the capacitor is measured using a circuit called a sense amplifier. If the sense amplifier detected charge on the capacitor then it outputs a 1, otherwise it assumes the cell was a 0.\nThere are a two main problems to the fundamental design of DRAM. First, to read the charge from the capacitor, the charge must be drained. This causes all reads to be destructive. Once you read a piece of data from DRAM, the value is no longer being stored in the memory array. To deal with this, the data must be written back into the array when you are done with it. This is called precharging.\nTo make the interface to DRAM a bit more efficient, an entire row is read into a buffer in the DRAM. The process of reading a row into that buffer is referred to as opening or activating the row. Once a row is open, data can be read or written to any columns in that row without having to open it again.\nHowever, only one row per bank can be open at a time. To read from a different row in the same bank, you must first precharge the current row, then open the new row.\nThe second fundamental flaw of DRAM, and the reason it is called dynamic RAM, is that capacitors leak charge. That means that once a charge is stored on a capacitor, it will start losing that charge. This happens either through the transistor connected to it, or through the capacitor itself. What this means for your data is that, if neglected, the values stored will be lost.\nThe fix to this problem is to periodically refresh each row. A refresh consists of simply reading a row then writing it back into the array. This process ensures that the capacitors retain their charge.\nThe amount of time a row can go between refreshes depends on the DRAM. However, the SDRAM chip on the SDRAM Shield, must be refreshed every 64ms.\nGenerally, SDRAM will be able to perform the refresh operation for you. However, you still must tell it when to refresh.\nDRAM vs SDRAM\nThe difference between these two types of RAM is that SDRAM is synchronous and DRAM is not. All this means is that the SDRAM uses a clock while DRAM does not. The benefits to SDRAM are that inputs and outputs are synchronized to whatever it is connected to, in our case the FPGA, as well as some speed benefits due to pipelining.\nSDRAM is much more common than plain DRAM.\nIt is also worth noting that DDR (Double Data Rate) RAM, usually heard in the context of computers, is a form of SDRAM.\nDRAM vs SRAM\nThe difference between DRAM and SRAM is a bit more interesting. SRAM operates fundamentally differently than DRAM. It doesn't store data on capacitors, but instead uses two inverters back to back.\n\nThis solves the two problems discussed earlier about destructive reads and forgetting the value. However, this comes at a price, literally. SRAM is much more expensive than DRAM due to the fact that the technology is much less dense. Each cell in SRAM is much larger than each cell of DRAM, meaning you can't pack nearly as many into the same area.\nSRAM is, however, faster and uses less power than DRAM. Because of this, it is still used frequently in digital systems for things like caches. Modern CPUs have something like 8-16MB of very fast SRAM cache, but the computer can have 1000x that much (8+GB) DRAM.\nSDRAM Controllers\nDealing with downsides to SDRAM is too much effort to have to think about whenever you need to read or write a some data. Wouldn't it be nice if it was all abstracted away and you could just say \"what is the data in bank 0, column 4, row 12\" with the result returned momentarily? Luckily for you, you're not alone. This is where the SDRAM controller comes in.\nThe controller's job is to deal with all the ugly parts of SDRAM and to break out a simple interface. This interface generally consists of an address input, a data input, a data output, and some control signals to specify a read/write, to tell when data is ready, and if the RAM is busy. That's it. No banks, no rows, no precharge, no opening, no hassle.\nIf this sounds wonderful and you just want to forget about all the inner workings of SDRAM, go ahead and download the example project for the SDRAM shield which has the SDRAM controller (sdram.v) in it.\nThis is all fine and dandy, but if you are the kind of person who wants to know how this is all accomplished, read on.\nYou should download the example project and take a look at sdram.v since the file is a bit long to paste here in it's entirety. Instead, we will break it apart looking at each piece individually.\nFirst let's take a look at the interface.\n\nThe first set of signals connect right to the SDRAM. It's important that they do as I'll explain a bit later.\nThe interesting part here is the user interface signals. These are the ones you'll need to worry about when using this controller in your own projects.\nYou may notice that the data ports are 32bits wide, while, if you look at the SDRAM connections carefully, you may notice the SDRAM only has an 8bit wide bus (sdram_dq). This is because each read or write the user does actually performs four read or writes to the SDRAM. This is done for efficiency (especially for reads).\nThe way you use this module is by first checking busy is 0 then setting addr to be the address you want, data_in to be your data, rw to be 1 (write), and in_valid to be 1 for one clock cycle to write some data. The following cycle, busy will be 1 letting you know the controller is doing something. Once the controller is ready to take another command, busy will be 0 again. At that point you can then set addr to be your address, rw to be 0 (read), and in_valid to be 1. After a few cycles, out_valid will be 1. During that clock cycle, you can read data_out for the data at the address you specified. That's the entire protocol.\nIt's worth noting that the number of cycles between when you ask for data and when you get the data will vary. This is also true for the number of cycles busy will be 1 between commands. It is also possible for busy to be 0 before you get your data from a read. This is because the controller buffers a single command and is only busy when the buffer is full.\nDiving deep\nNow would be a great time to download the datasheet for the SDRAM and take a look at it.\nThe following localparams are used to define the various commands the SDRAM will accept.\n\nIf you take a look at the output assignments, you can see that these bits correspond to CS, RAS, CAS, and WE.\n\nFor now, don't worry about these too much. Just know that they are used to specify commands for the SDRAM. You can look these commands up in the datasheet (page 31) if you want.\nTo manage the complexity of all the operations the controller does, it uses a FSM. If you aren't familiar with Finite State Machines, make sure to check out the FSM Tutorial. The states for the FSM are defined below.\n\nThe flow of these states is shown in the diagram below (excluding the WAIT stage for clarity).\n\nWhen the board is powered on (or reset) the FSM starts in the INIT state. SDRAM requires a bit of initialization before you can read and write to it. This is also covered in the datasheet (page 42) for those curious.\nAfter the board is initialized, it sits in the IDLE state until one of two things happen, either it's time to perform a refresh or there is a pending operation.\nFirst, let's talk about the refresh. To manage the refreshing, there is a timer that tells the controller to send another refresh operation. The SDRAM requires 8,192 refresh commands to be sent every 64ms. That means you can either send a refresh command every 7.813µs or all 8,192 commands in a batch every 64ms. To provide a more uniform interface, this controller sends the refresh commands evenly spaced. This limits the maximum amount of time the controller will be busy doing refreshes. In some applications where you need very fast burst speeds, but have some known down time, performing burst refreshing can be better.\nWhen a read or write command is pending, the controller first checks to see if the row is open. If the requested row is already open, life is great, it simply reads or writes to the row. If the row isn't open then it first opens the row before performing the operation. The worst case is if there is already another row open. In this case the other row must be precharged, before the controller can open the new row and perform the operation.\nEach of these operations has some number of cycles the SDRAM requires to complete (the reason for the WAIT state). These sometimes vary with the clock frequency (in other words, they have a set amount of real time). This controller assumes a clock rate of 100MHz. This is important for other reasons as well that will be discussed a little later. All of these delays and timing specifications can be found in the datasheet (many of them are on pages 27-28).\nThis mostly sums up how the controller works. If you want an even deeper understanding, you need to take a look at the rest of the code in the controller as well as the SDRAM datasheet.\nHowever, there is some advanced voodoo magic going on in the controller code that is worth mentioning.\nDealing with the hardware\nThere are a few sections of code in the controller that you probably haven't seen code like before unless you have done a lot of FPGA programming. This code is required simply because the SDRAM is an external chip and we are talking to it at a decently high clock speed.\nFirst let's take a look at the code that is responsible for outputting the clock.\n\nThis is the instantiation of a ODDR2 module. If you look the project files, you will notice there is no ODDR2.v file. This is because this isn't really a module, but rather an FPGA primitive. ODDR2 or Output Double Data Rate 2, is a primitive that is generally used to output data on both the rising and falling edges of the clock (hence, double data rate). However, in this case we are using the ODDR2 to simply output our clock signal. You can't output the clock signal directly due to how the FPGA is structured internally. So instead, you can use the ODDR with the data pins wired to 0 or 1.\nWhen C0 has a rising edge, D0 is output until C1 has a rising edge. At that point D1 is output. Notice that in our case C1 is actually just the clock inverted. That means D0 is output when the clock rises and D1 is output when the clock falls.\nYou may be thinking now \"Ok... but if D0 is output when the clock rises, shouldn't D0 be 1 and D1 be 0\"? Very good my young padawan. That is exactly right if you wanted to output to be the same as the clock. However, we don't want this. We want the output clock to be our clock inverted!\nWhy the *&amp;^$# would we want the clock to be inverted? Wouldn't that mean that the SDRAM would read it's inputs and change it's outputs on our falling edge? Oh wait... that's exactly what we want! We want this because that gives both devices half a clock cycle for their output to become stable before the other device. This all has to do with satisfying setup and hold times of both devices. If you don't know what the means, check out the FPGA Timing Tutorial.\nThere are two more pieces of code that are used to make sure timing is met.\nTake a look at the following other FPGA primitive, the IODELAY2.\n\nAs you may have guessed from the name, the IODELAY2 block provides a delay to inputs and outputs. In this case we are using it to delay the clock being output to the SDRAM. There are a lot of features of these primitives that aren't being used here. However if you want t check them out in their full glory, take a look at the UG381 document from Xilinx (ODDR2 starts on page 62 and IODELAY2 starts on page 74).\nWe need the delay because simply inverting the clock doesn't quite ensure timing is met. We need to shift it a little more.\nThe important values here are DELAY_SRC is set to make the IODELAY2 delay an output and ODELAY_VALUE is how much we want to delay the signal.\nThe actual amount of delay that is given per step of ODELAY_VALUE is a bit fuzzy and will actually vary over temperature and voltage in the Spartan 6 chip. However, with a 100MHz clock, using a delay of 100 (maximum is 255) ensures that the setup and hold times are being met. This delay was found empirically by running lots of tests checking for read/write errors (this is actually what the example project does).\nThe last piece to the puzzle is making sure that the input and output registers are packed into IOBs, or Input Output Buffers.\n\nThis is done by setting the IOB constraint to \"TRUE\". This tells the tools that we want these in IOBs.\nWhat the heck is an IOB? An IOB is simply a flip-flop that is embedded in the pin of the FPGA. They aren't in the typical FPGA fabric, but rather right at the inputs and outputs.\nWe want to make sure these registers are packed into IOBs to ensure that there are no additional delays due to the signal needing to propagate through the FPGA.\nTo make sure these registers are actually packed into the IOB, their output/input can't connect to anything other than the top level output/input. If you tried to read these signals in some other part of your design, the tools would be forced to pull the flip-flop out of the IOB, possibly messing up timing. This is why it is important that these signals go directly to the top level inputs/outputs.\nIf you've made it this far through the tutorial, you should now have a pretty decent understanding of SDRAM and how complicated designing a controller can be. The controller that is in the example project is pretty good, but it is not the fastest controller possible. A more complex controller would allow for read commands to overlap, reads to be canceled, it would reorder operations to improve throughput (minimize open/precharge operations), and many more possible tricks. These are left for you to implement.\n","id":"https://alchitry.com/tutorials/verilog/mojo/sdram/","title":"SDRAM"},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"body":"Serial Peripheral Interface, or SPI, is a very common communication protocol used for two-way communication between two devices. A standard SPI bus consists of 4 signals, Master Out Slave In (MOSI), Master In Slave Out (MISO), the clock (SCK), and Slave Select (SS). Unlike an asynchronous serial interface, SPI is not symmetric. An SPI bus has one master and one or more slaves. The master can talk to any slave on the bus, but each slave can only talk to the master. Each slave on the bus must have it's own unique slave select signal. The master uses the slave select signals to select which slave it will be talking to. Since SPI also includes a clock signal, both devices don't need to agree on a data rate before hand. The only requirement is that the clock is lower than the maximum frequency for all devices involved.\nExample SPI Transfer\nWhen the master of the SPI bus wants to initiate a transfer, it must first pull the SS signal low for the slave it wants to communicate with. Once the SS signal is low, that slave will be listening on the bus. The master is then free to start sending data.\nThere are 4 different SPI bus standards that all have to do with the SCK signal. The 4 modes are broken down into two parameters, CPOL and CPHA. CPOL stands for Clock POLarity and designates the default value (high/low) of the SCK signal when the bus is idle. CPHA stands for Clock PHAse and determines which edge of the clock data is sampled (rising/falling). The data sheet for any device will specify these parameters so you can adjust accordingly. The most common settings are CPOL=0 (idle low) and CPHA=0 (sample rising edge).\nHere is an example transfer with CPOL=0 and CPHA=0.\n\nThe bits in a SPI transmission are sent LSB first.\nAny SPI transmission is controlled solely by the master. The master generates the clock and controls the slave select signal(s). This means that the slave has no way of sending data to the master on its own!\nEach SPI transfer is full-duplex, meaning that data is sent from the master to the slave and from the slave to the master at the same time. There is no way for a slave to opt-out of sending data when the master makes a transfer, however, devices will send dummy bytes (usually all 1's or all 0's) when communication should be one way. If the master is reading data in for a slave, the slave will know to ignore the data being sent by the master.\nDevices that use SPI typically will send/receive multiple bytes each time the SS signal goes low. This way the SS signal acts as a way to frame a transmission. For example, if you had a flash memory that had an SPI bus and you want to read some data, the SS signal would go low, the master would send the command to read memory at a certain address, and as long as the master kept SS low and toggling SCK the flash memory would keep sending out data. Once SS returned high the flash memory knows to end the read command.\nSince the MISO signal can be connected to multiple devices, each device will only drive the line when its SS signal is low. This is shown by the grey area.\nSPI Slave\nIn the Mojo Base Project, the file spi_slave.v contains the SPI module used to interface with the AVR. The AVR, in this case, is the master and the FPGA is the slave. The reason the AVR is the master is because the SPI bus is used to transfer data from the analog pins. Since the FPGA has no way of knowing when the data would be available, the FPGA would have to keep asking the AVR if it had any data. By making the AVR the master, it allows it to send the data right when it's ready.\n\nThis is module assumes CPOL = 0 and CPHA = 0.\nIt waits for SS to go low. Once SS is low, it starts shifting data into the data_d/_q register. Once eight bits have been shifted in it signals that it has new data on dout. On the falling edges of the clock, it shifts out the data that was provided by din at the beginning of the transmission.\nSPI Master\nOur Clock/Visualizer Shield, uses a Real-Time Clock (RTC) device that provides the Mojo with the current time. The RTC is connected to the Mojo through an SPI bus. In this case, the FPGA on the Mojo is the master and the RTC is the slave.\n\nIn this case CPOL = 0 and CPHA = 1.\nThe overall idea is the same, however, the FPGA now needs to generate the SCK signal. The parameter CLK_DIV is used to specify how much the FPGA's clock should be divided. The default value is 2, which means that the frequency of SCK will be 1/4th (2^2 = 4 clock cycles) of that of the FPGA. If CLK_DIV was set to 3, SCK would be 1/8th (2^3 = 8 clock cycles) the frequency of the FPGA's clock.\n","id":"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/","title":"Serial Peripheral Interface (SPI)"},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"body":"Servos come in handy in all sorts of projects from robots to electronic locks. This tutorial will cover how to control servos with the Mojo.\nServos are controlled by PWM. However, the PWM signal they use is not quite like the one we were using to dim the LEDs in the pulse-width modulation tutorial. This form of PWM has a fairly long period, and the duty cycle only varies slightly. The position of a servo is determined by the width of a pulse sent to it about once every 20ms. The pulse width varies from about 1ms (full one direction) to 2ms (full the opposite way), with 1.5ms being the neutral position. The max and min width can vary a bit for each servo but they all have a neutral of 1.5ms. \nIncreasing the Period\nWhen we did PWM last time we just used the smallest counter possible because we didn't care about the frequency as long as it was faster than our eyes could see. In this case we do care about the frequency. We want the frequency to be roughly 50Hz, or a 20ms period. Since we know the Mojo runs at 50MHz, we need to divide that down by 1,000,000. Log2(1,000,000) = ~19.9, that's pretty close to 20 so we're going to use a 20 bit counter. \nServos aren't particularly sensitive to the exact period of your signal as long as it's in the ball park. If we wanted to get an exact period of 20ms we could use a 20 bit counter and check to see when it reaches 1,000,000. When it reached the top you can just reset it to 0. However, unless you have a good reason to do this, it's better to just use a power of two because it makes things simpler and uses less hardware.\nFixing the Width\nFor our servo controller we need a pulse width of 1ms-2ms. That means it needs to have a compare value from 50,000 - 100,000. The most important part here is that we our neutral is at 75,000. \nThis servo controller will be an 8 bit controller. That means we want to have 256 positions for the servo, specified by an input to our module. We need to figure out a way to easily make a value from 0-255 range from about 50,000-100,000.\nFirst we need to scale our value. We need 255 to be 50,000, so 50,000/255 = ~196. That is pretty close to 256, so we can just shift our value by 8 bits to the left.\nNow we need an offset to make sure our center value is close to 75,000. To find this we do (75,000 - (128 * 2^8)) / 2^8 = ~165. That means we need to just add 165 to our input value and then scale that by 256, by shifting to the left 8 bits.\nLets put this together in a module.\n\nNotice I used 9'd165 instead of 8'd165 that is because I wanted to ensure that the result would be a 9 bit number because 165 + 255 would overflow.\nAlso instead of shifting out value over 8 bits to the left, I just dropped the 8 LSBs of ctr_q. \nTo test this module out I modified the counter code from the PWM tutorial to be generic.\n\nand finally I instantiated it all in mojo_top.v\n\nDon't forget to add an entry in the UCF file for the servo output. I used pin 50 so I added the line\n\n5V Servos\nThere's one more thing to be aware of, most servos run at 5V. However, most servos will register a 3.3V signal without any problems. To hook up your servo, simply power the Mojo with 5V (through USB or the barrel jack) and hook the servo's power pin to the RAW pin on the Mojo. \nYou should have a servo moving back and forth!\n","id":"https://alchitry.com/tutorials/verilog/mojo/servos/","title":"Servos"},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"body":"\n    \n\nSynchronous logic if a fundamental building block for just about any digital design. It allows you to create much more complex systems that accomplish something over a series of steps. It also gives you the ability to save states or other information. In this tutorial you will be introduced to the D flip flop and how you can use these to make an LED blink.\nThe Problem\nIn our last tutorial we simply wired a LED to a button. Whenever you pressed the button the LED would turn on. Our design had no concept of time. The goal for this project is to blink an LED. That means we have to create a circuit that can turn itself on and off automatically after a regular interval of time has passed. For this we need the flip flop.\nClocks\nBefore I can explain what exactly a flip flop does you need to understand what a clock is.\nA clock is just a signal that toggles between 0 and 1 over and over again. It looks something like this.\n\nThe important thing is the rate at which it toggles. The clock on the Mojo is a 50MHz clock. That means that it toggles 50 million times per second!\nThe clock has two edges, the rising edge and the falling edge. I drew the rising edges with little arrows. The rising edge is usually the important one.\nD Flip-Flops\nThis is one of the most important circuit elements you will be using. Lucky for you, it is also fairly straight forward how they work. Take a look at the symbol for the flip flop below.\n\nThis image shows all the signals that a flip flop could have, but in practice, the only required signals are D, Q, and clk. For now, forget about rst and en.\nSo what exactly does this thing do? All it does is copy the signal at D to Q whenever there is a rising edge on the clk input. That means Q will keep it's value between rising edges of the clock. Since the flip flop remembers what the input was at D, it is actually one of the most basic memory elements. \nLoops\nLets take a look at the following example.\n\nWhat will this circuit do? If the input to the gate is 1, then it's output is 0. However, the output is the input so the output must be 1, but then the input is 1 so the output must be 0? If we assume that the signal can only be 0 or 1 it seems like it would toggle between 0 and 1 infinitely fast. In practice, remember that signals are actually represented by voltages, it may oscillate or it may settle to somewhere in the middle. This is of course something we don't want! Designing combinational circuits with feedback can be very tricky to make sure something like this doesn't happen and that the circuit will work how you expect it to. That is why we don't! Instead, we use a circuit like this one.\n\nWhat will this circuit do? Well, for now lets just assume that Q is 0. That means that D is 1 (because it went through the not gate). On the next rising edge of the clock Q will copy what D is, so Q becomes 1. Once Q becomes 1, D becomes 0! You can follow the pattern to realize that every time there is a rising edge on the clock the output of the flip flop toggles.\nWhat about the initial condition though? If we just built this circuit how do we know if Q is 0 or 1? The truth is that we don't and in some cases it may be 1 while others it may be 0. That is where the rst signal comes in. This signal is used to reset the flip flop to a known state. In FPGAs this signal is generally very flexible and allows you to reset the flip flop to a 1 or 0 when the signal is high or low (your choice, not both). I personally like to use an active high reset. That means when the rst signal is 1, the flip flop is held in reset.\nThere are cases where you don't care what the inital value of the flip flop is, in those cases you don't need to, and shouldn't, use a reset.\nSince the only signal left is en, I'll cover it now just for completeness. There are times when you want the flip flop to ignore the rising edges on the clock and to preserve the contents of Q. That is when you use the enable signal. When the en signal is 1, the flip flop operates normally. When it is 0 the contents of Q won't change on the rising edges of the clock. If you see a flip flop without an en signal it is just assumed that the flip flop is always enabled.\nCreating the blinker module\nWe are going to modify the code from the previous tutorial to create the blinker, so make sure you've downloaded the base project. \nOpen up the project in ISE. We now are going to add a new module which will be our blinker. On the left in the Hierarchy section right click on mojo_top and choose New Source.... \n\nSelect Verilog Module and enter blinker.v as the name. Click Next then Next then Finish.\nThe file should open in the editor. Replace the existing code with the following.\n\nJust like the last tutorial lets break down the code to understand what is going one.\nThe reg\n\nThis is the first new piece of code. Reg stands for register, and is a bit different than a wire. Flip flops are sometimes called registers. However, a confusing thing in Verilog is that a reg does not necessarily become a flip flop and they can be used in ways similar to wires.\nThe wire type is used simply to connect to things. A wire can only have one value, in other words it can only be connected to one thing and it will always be connected to that thing. A reg can actually drive a signal. These points are very subtle and the line between them can get blurry in some cases.\nThe only really important thing to know is that a reg can be assigned a value in an always block while wires can not (they can be read though). Any time you use always blocks you will be using reg's. If you are just connecting two signals you will be using wires.\nHere we are declaring two 25 bit wide reg's. We are going to use these signals to create a 25 bit wide flip flop (made up of 25 1 bit flip flops). The suffixes _d and _q corresponding to the flip flop signals d and q from before. It is good practice to use this naming convention.\nCombinational always blocks\n\nThis is our first always block. Always blocks can kinda be thought of as functions that run under certain conditions. Those conditions are specified in the sensitivity list. The sensitivity list in this case is just counter_q. This is because the values this always block produces will only change when counter_q changes.\nSince this is out combinational always block, we could have used @(*) for the sensitivity list. This says that this always block will be run whenever anything changes. The only reason not to do this is for simulations. In a simulation the always blocks are run basically as functions and limiting the sensitivity list to only the signals of interest will help reduce the time needed to run the simulation. For synthesis (the actual FPGA design) it doesn't make any difference since it will be in hardware and will just exist. Many times I just use @(*) for my sensitivity lists though.\nThe line inside the block is very important. This line says that the d signal to the flip flop will get the q value plus 1. This is very similar to our example with the flip flop and the not gate. We are making a loop.\nSynchronous always blocks\n\nThis block is a bit more interesting. The sensitivity list for synchronous always blocks is very important. The list uses the keyword posedge. This means that the block is only sensitive to the positive edge of the signal, in other words, a transition from a 0 to a 1. This is exactly what a flip flop's clock input is sensitive to.\nVerilog has no direct way to create flip flops. Instead, you have to use a template, like this block, for the tools to realize that is what you wanted. This block basically just describes the function of a flip flop that has input counter_d, output counter_q, clock clk, and reset rst. \nThe if statement in the block is used to reset the flip flop when rst is 1. When rst is 0, the flip flop will copy the value of counter_d to counter_q at the positive edge of clk. \nThe counter\nLet's look at what this module will actually do. Right after the rst signal goes low, counter_q will be 0. That means that counter_d will be 1, since our combiational block assigns it counter_q plus 1.\nAt the next positive edge of clk, counter_q will be assigned the value of counter_d, or 1. Once counter_q is 1, counter_d must be 2! You should be able to see what will continue to happen. Each clock cycle counter_q will increase by 1. But what happens when counter_q is 25'b1111111111111111111111111 (the max value)?\nSince we are adding a 1 bit number to a 25 bit number, the result can be up to 26 bits, but since we are storing it into a 25 bit reg we lose the last bit. That means that when counter_q is the max value, counter_d is 0 and the process starts all over again.\nOur counter will continuously count from 0 to 33554431 (2^25 - 1). \nHow do we make an LED blink from this counter? It's simple once  you realize that for half the time the most significant bit is 1 and the other half of the time it's 0. This is because if counter_q is less than 16777216 (2^24), then the 24th but must be 0 and when it is equal or greater it must be 1. That means we can just connect the LED to the most significant bit of our counter! If you need to convince yourself this is true try writing out the binary values from 0-7 and look at how the MSB (most significant bit) changes.\nHow fast will the LED blink though? We know that the clock frequency is 50MHz, or 50,000,000 clock cycles per second. Since our counter takes 2^25 cycles to overflow we can calculate the blinker time, 2^25 / 50,000,000 or about 0.67 seconds. The LED will turn on and off every 0.67 seconds. If you wanted to make that time longer, you can just make the counter 26 bits long and the time will double to 1.34 seconds. If you wanted to make it blink faster you can make the counter shorter.\nNon-blocking assignments\nYou may have noticed that in our combinational block we used = to assign counter_d a value, but in the synchronous block we used &lt;= to assign the value. The &lt;= operator is used for non-blocking assignments. All that means is all the values assigned with &lt;= get assigned immediately in parallel.\nWhen you use just =, which is used for blocking assignments, that line must finish before the next one can happen.\nThis isn't too important now, just know that &lt;= is generally used in the synchronous block while = is used in the combinational block.\nInstantiating a module\nNow we have to instantiate our module from the top level of our design. Open up mojo_top and edit it so it looks like the following.\n\nYou can see where our blinker is being instantiated at line 32. The first line tells what module we are instantiating (blinker) and what we want to name this instance of it (awesome_blinker). The rest of the code is used to connect the inputs and outputs of our module. The module signal name is the first part after the . and the signal to connect it to is in the ().\nIn this case we just connect the clock and reset lines and the output to one of the LEDs.\nYou should now be able to synthesize your design and load it onto the Mojo to see an LED blink about 2x per second.\n","id":"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/","title":"Synchronous Logic"},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"body":"Core Generator (also called CoreGen) is a powerful tool provided by Xilinx to help easily and efficiently accomplish some common functions. It allows you to generate modules for things like RAMs, ROMs, clock synthesis, complicated math functions, and even basic processor cores.\nThis tutorial will show how we used CoreGen to perform some complicated math and generate the block RAMs used in our Clock/Visualizer Shield Demo. If you haven't already, you should download the project so you can follow along.\nAfter you download the project, open it up in ISE.\nOnce in ISE, to access CoreGen, click on Tools-&gt;Core Generator...\nThis will automatically open the CoreGen project file for the Clock/Visualizer Shield.\n\nOn the left hand side of the window, you have the cores that are available to be generated on the top and the cores being used in the project on the bottom left. On the right is information about the currently selected core.\nYou can see for this project we used 8 cores. Four of them are RAMs, one performs a square root, one is a decimation filter, another is a FIFO, and the last is the one that performs the Fourier Transform.\nLet's start with one of the most commonly used cores, block RAM. Double click on sample_ram.\n\nThis RAM is used to store the samples from the microphone before they are ready to be processed. If you take a look at the diagram on the left you can see the module's inputs and outputs.\nThis module has inputs ADDRA[9:0], DINA[15:0], WEA[0:0], CLKA, ADDRB[9:0], CLKB and output DOUTB[15:0]. As you may be able to tell, this RAM is a simple dual port RAM. That means that it has two independent ports, one for writing and one for reading. This allows for different address to be read and written simultaneously.\nIf you look at the bottom of the window you will see &lt; Back and Next &gt; buttons. You can use these to go through the various pages of configuration options. On the second page you can see where we set the Memory Type to be a Simple Dual Port RAM.\n\nOn the same page there are also options to tell CoreGen what to optimize when generating your RAM. We have Minimum Area selected, which is the most important constraint in most cases.\nAs you go through the configuration settings, you'll find settings for each port's width and depth. The width of a RAM is how many bits belong to each address. In this case, we use 16 bits as our width since the audio samples are 16 bits wide. The depth is how many address the RAM will have. While you don't strictly need to use a power of two for this, it can make life simpler because then you don't have any invalid addresses.\nOnce you configure a core how you want, just click the Generate button to get CoreGen to generate the core.\nYou should look at the other cores used in the project as well as the other cores available to you in your own projects. One thing to be aware of is that not all cores are free. Xilinx does a good job of providing a good base of free cores that cover a lot of functionality, but fancier cores such as the cores found in Standard Bus Interfaces, require you to purchase a license to use them in the FPGA (you can generally simulate with them, but that's no fun).\nAdding cores to your project\nAfter you have generated your core, it's still not in your project! First close CoreGen and go back to ISE.\nSince all the cores we are using in the Clock/Visualizer Shield Demo are already added, you'll get errors if you try to add it again. However, we'll do it anyways to show you how it's done.\nMost cores will have two files you need to add to your project, a .v file and a .ngc file. It's very important to have both, because the .ngc file is the one that actually has the information about the implementation of the core. The .v file is used as a kind of glue to connect the .ngc to your project.\nClick on Project-&gt;Add Source\nNavigate to where your cores were generated, in this case it's in the folder named ipcore_dir.\n\nSelect the two files for your core and click open. This will add them to your project, but like we said before, these are already in the project so it gives you an error.\nUsing your cores\nOnce you've created your core and added it to your project, you need to actually use it!\nIf you look in the ipcore_dir folder and open up the .veo file for your core, you will find an example on how to instantiate the core.\nThere are a lot of comments in the file but here is the important content of the sample_ram.veo file\n\nYou can just copy and paste this into your project to use the sample_ram module. Of course, you still need to specify the correct inputs and outputs.\nThat's it! Using CoreGen is a great way to get some of the heavy lifting in a project done for you and in a very efficient way.\n","id":"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/","title":"Using Core Generator"},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"body":"Test benches are used to simulate your design without the need of any physical hardware. The biggest benefit of this is that you can actually inspect every signal that is in your design. This definitely can be a time saver when your alternatives are staring at the code, or loading it onto the FPGA and probing the few signals brought out to the external pins. However, you don't get this all for free. Before you can simulate your design you must first write a test bench.\nWhat is a Test Bench\nWhat exactly is a test bench? A test bench is actually just another Verilog file! However, the Verilog you write in a test bench is not quite the same as the Verilog you write in your designs. This is because all the Verilog you plan on using in your hardware design must be synthesizable, meaning it has a hardware equivalent. The Verilog you write in a test bench does not need to be synthesizable because you will only ever simulate it!\nLet us assume we have a module called basic_and that looks like this.\n\nThe functionality of this module should be fairly apparent. It takes two inputs, a and b, of width WIDTH and ands them together for the output, out.\nIf we want to now test this module to make sure it is actually doing what we think it is, we can write a test bench! It is best practice to name the test bench associated with a module the same as the module with _tb appended. For example, the test bench for basic_and is named basic_and_tb. \nTake a look at what a test bench for basic_and could look like.\n\nA test bench starts off with a module declaration, just like any other Verilog file you've seen before. However, it is important to notice the test bench module does not have any inputs or outputs. It is entirely self contained.\nAfter we declare our variables, we instantiate the module we will be testing. In this case it's the basic_and module. Notice the name is DUT. DUT is a very common name for the module to be tested in a test bench and it stands for Device Under Test.\n\nThis line has something new, the initial block. The initial block is used similarly to an always block except that the code in the block will only run once, at the start of the simulation. Because there is no equivalent to an initial block in hardware, initial blocks are not synthesizable and can only be used in test benches.\nLines 13 and 14 simply assign values to a  and b.\n\nThis is another new line. The # syntax is used to specify a delay. In this case this tells the simulator to wait 20 units of time. This is important because without these delays we would have no time to observe how a and b affect the circuit. Again, there is no hardware equivalent to a delay like this, so these statements are not synthesizable.\nIt is very important to understand that we are still simulating hardware. That means that the delay of 20 units only affects the block the delay is in. The rest of your design will keep chugging away as if there was no delay. This is important because it allows you to specify inputs and wait for the output to be generated. \nFinally we get to the following line.\n\nThis line tells the simulator we are done simulating.\nRunning a Test Bench\nAs with all tutorials, we will start with the Mojo Base Project, so download a fresh copy now.\nOpen up the project in ISE and add the two source files, basic_and.v and basic_and_tb.v.\nYour project should look something like this.\n\nIf you created the files outside of ISE then basic_and_tb may not show up under the implementation tab. This is because ISE realizes that files that end in _tb are test benches and will mark them for use in simulation only. \nIf your test bench is showing up in the implementation tab, as shown above, right click on the test bench and choose Source Properties... \n\nChange the View Association to Simulation.\nBack in ISE, click on the Simulation tab.\n\nNotice the Simulate Behavioral Model option now. This is how you launch the simulation. Make sure that basic_and_tb is selected and double click Simulate Behavioral Model.\nThat will launch ISim.\nIt will show your test bench code and show where it hit $finish;. Go ahead and click on the tab that says Default.wcfg.\n\nClick the magnifying glass that looks like it has an X in it. That will fit the simulation to the display. You should then see the following.\n\nNotice how a and b change. Their values match the ones in our test bench and you can see that they change every 20 time units (ns in this case).\nThe power of the test bench is now you can look at out. If you compare out with the corresponding a and b inputs, you will notice that the module is in fact anding a and b together (1111 and 0101 = 0101!).\nSequential Test Benches\nThe previous example is a great way to get you feet wet with test benches, but the circuit we tested didn't have any sequential logic in it. How do you go about testing a circuit that requires a clock signal?\nTo show to do this, we will be testing the pwm module from the pulse-width modulation tutorial. \n\nTo test this we again will need to write a test bench. An example of what that test bench could look like is shown below.\n\nAgain notice there are no inputs or outputs of our test bench.\nIn this test bench we have to have two initial blocks.\n\nThis first block generates the clock and reset signals. You will use basically this exact same initial block for any test bench that is testing a sequential circuit. \nThe clk and rst signals are initialized to 0 and 1 respectively. \nThe next line uses the repeat statement.\n\nThis is used to toggle the clock four times with 10 units of time between each toggle.\nAfter the clock is toggled a bit, rst is brought low to allow the circuit to resume normal operation. \nIt is very important to always reset your circuit before expecting any meaningful output. Flip-flops do not have a default value and will output x in simulations when they are not reset properly.\n\nThe last line of this initial block will generate a clock signal forever! The forever keyword is used to create a loop that lasts, you guessed it, forever.\nThe second initial block is where we do the actual testing.\n\nThe first part of this block waits for rst to fall. This is accomplished with the @(negedge signal); syntax. You can use negedge or posedge to make your initial block wait for the corresponding edge of that signal.\nThe signal compare is then set to 128 to make sure we get a 50% duty cycle from the pwm module. Since each cycle of the module takes 256 clock cycles (because we set CTR_LEN = 8), we need to wait for 256 positive edges of the clock.\nAfter we wait long enough we can change compare to a new value to test the pwm module under a different case.\nIn this example we are only testing two cases, but in most test benches you should try more, especially the edge cases.\nIf you now add these two files to your project and run the simulation you should see the following.\n\nNow you may notice that the simulation stopped after 1us. This is the default value in ISim. To change it set the new value in the toolbar like this.\n\nSet it to 100us just to be safe. Since we have the $finish; statement in our test bench it doesn't hurt to set it longer than we need because it will end when it hits that line.\nIf you now click the arrow with the hour glass it will run the rest of the simulation. \nBefore looking at the signal we should show the ctr_q signal from the pwm module. To do this take a look af the signals shown on the left of the display.\n\nExpand the pwm_tb and select DUT. You can then right click ctr_q[7:0] and click Add to Wave Window.\nTo get the waveform updated you need to click the icon in the toolbar that is a blue box with a white arrow pointing to the left (left most icon shown two pictures above). This will rerun the simulation from the beginning.\n\nHere is what the final simulation should look like. You can see the pulses are exactly as we expected them to be. If you zoom in to any point you will be able to see the value of ctr_q and the rising and falling edges of clk.\nHopefully this gives you a good starting point for writing your own test benches. Test benches are incredibly important for verifying that your modules are written correctly and everything is working as it should.\n","id":"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/","title":"Writing Test Benches"},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"body":"This tutorial covers the various operators available in Verilog. If you have programmed in C/C++ or Java, then many of these operators will be familiar. However, there are a few new usages that are handy for dealing with hardware.\nBitwise Operators\nFunctionOperator\nNOT~\nAND&amp;\nOR|\nXOR^\nXNOR~^ or ^~\n\nThese operators are called bitwise operators because they operate on each bit individually. These are used to perform basic logic functions and they get synthesized into their equivalent logic gate.\nTake a look at the following example.\n\nc will now have the value 4'b1000. This is because the most-significant bits of a and b are the only ones that are both 1.\nWhen you perform a bitwise operator on multi-bit values like above, you are essentially using multiple gates to perform the bitwise operation. In this case, we need four AND gates to and each bit of a and b together. The results of each AND gate is the value c.\nAll of these operators are used on two values except the NOT (~) operator which only takes one value. Take a look at this example where we replace the last line of the previous example.\n\nNow c will have the value 4'b0101. Again, this is because each bit of a is individually inverted and assigned to c.\nIf the two values used by a bitwise operator are different in length, the shorter one is filled with zeros to make the lengths match.\nReduction Operators\nFunctionOperator\nAND&amp;\nNAND~&amp;\nOR|\nNOR~|\nXOR^\nXNOR~^ or ^~\n\nReduction operators are very similar to the bitwise operators, except they are performed on all the bits of a single value. They are used to reduce the number of bits to one by performing the specified function on every bit.\nTake a look at this example.\n\nIn this example b will be 0. This is because each bit of a is anded with each other. In other words, it is equivalent to the following.\n\nThis essentially synthesizes a large single logic gate with enough inputs to fit the input value. In this case, a four input AND gate would be synthesized.\nShift Operators\nFunctionOperator\nShift Right&gt;&gt;\nShift Left&lt;&lt;\nArithmetic Shift Right&gt;&gt;&gt;\nArithmetic Shift Left&lt;&lt;&lt;\n\nThe shift operators in Verilog are very similar to the ones in other languages. They simply shift the bits in a value over that many times to the right of left.\nThe basic shift operators are zero-filling meaning that bits that don't have a value shifted into them are replaced with zeros. Take a look at the following example.\n\nIn this example b will have the value 5'b10000 and c will have the value 5'b00101. You can see with b the top two bits of a are lost, and with c the bottom two bits are lost.\nNow let's take a look at the arithmetic shift operators. These vary from the basic shift operators because they perform sign-extended shifts. When shifting left, it performs exactly the same as the basic shift operator, but when shifting to the right,  the most-significant bit (the sign bit) plays a role.\nIf the sign bit is 0, then the arithmetic shift operator acts the same way as the basic shift operator. However, if the sign bit is 1, the shift will fill the left side with ones.\nTake a look at this example.\n\nNow b will have the value 5'b10000 just like before, but c will have the value 5'b11101.\nWhy would you ever want to fill the left side with the most-significant bit? The reason is because shifting bits is a very cheap way to perform multiplication and division by powers of two. Take the value 6 (4'b0110). If we shift it to the left one bit we get 4'b1100 or 12 and if we shift it to the right one bit we get 4'b0011 or 3. Now what about the value -4 (4'b1100)? If we shift it to the left one bit we get 4'b1000 or -8. However if we shift it to the right one bit we get 4'b0110 or 6! This is because we need to use the arithmetic shift. If we use the arithmetic shift we get 4'b1110 or -2!\nShift operations are very cheap! This is because they are essentially just a signal renaming.\nConcatenation and Replication Operators\nFunctionOperator\nConcatenation{ , }\nReplication{ { } }\n\nThese are two very useful operators for manipulating bits.\nThe concatenation operator is used to merge two values together into a wider value. \n\nIn this example c has the value 8'b11001010. You can concatenate as many signals together as you want by adding them to the comma-separated list.\nThe replication operator is used to duplicate a value multiple times.\n\nIn this example a is replicated 4 times making the value of b be 8'b10101010.\nArithmetic Operators\nFunctionOperator\nAddition+\nSubtraction-\nMultiply*\nDivide/\nModulus%\nPower**\n\nVerilog provides these six basic arithmetic operators to make basic math simpler. However, it is important to remember when using these operators how they will be implemented in hardware.\nThe most important thing to remember is that not all of these operators can be synthesized! Only addition, subtraction, and multiplication are synthesizable! Some synthesizers will allow you to use divide if you are dividing by a power of two, but you should use a shift operator for that anyways. The reason the other three aren't synthesizable is because the circuits required to implement them are quite complicated. There are many trade offs that as a designer you need to make if you need to use divide, modulous, or power, that the synthesizer can't make for you. In most cases these operations will be pipe-lined to provide speed or reduce the amount of hardware used. This is something that the synthesizer can't do for you.\nWhen using addition and subtraction, the synthesizer will probably synthesize a circuit similar to the one shown in this tutorial. However, the synthesizer is free to make optimizations as long as it adds the two values.\nFor multiplication, many FPGAs (including the one used by the Mojo) have special resources dedicated to fast math. If these are available they will be used, however, if you run out of them a multiplication circuit will have to be generated which can be large and slow. Because of this you should never multiply by a power of two, but shift instead. Most synthesizers will be smart enough to do this for you but it is good practice not to rely on that.\nAlso note that the - operator can be used to negate a number.\nWhen two N-bit numbers are added or subtracted, an N+1-but number is produced. If you add or subtract two N-bit numbers and store the value in an N-bit number you need to think about overflow. For example, if you have a two bit number 3 (2'b11) and you add it to 2 (2'b10) the result will be 5 (3'b101) but if you store the value in a two bit number you get 1 (2'b01).\nFor multiplication of two N-bit numbers, the result will be an N*2-bit number. For example, 7 (3'b111) * 6 (3'b110) = 42 (6'b101010).\nComparison Operators\nFunctionOperator\nLess Than&lt;\nGreater Than&gt;\nLess Than or Equal&lt;=\nGreater Than or Equal&gt;=\nEquality==\nInequality!=\nCase Equality===\nCase Inequality!==\n\nThese operators compare two values and produce a single bit to represent the result. A 1 is true and a 0 is false.\nThe only strange thing to note is the case version of the equality tests. Bits in Verilog aren't only 0 or 1, but they can also be x or z. For the standard equality tests, if either value has an x or z in it the result will be an x. However, for the case equality tests, it will test to see if these are matched in the other value. For example 4'b01x0 == 4'b01x0 produces an x, but 4'b01x0 === 4'b01x0 produces a 1.\nIn reality, hardware can't have an x value so the case equality tests are not synthesizable but are useful for simulations.\nLogical Operators\nFunctionOperator\nLogical And&amp;&amp;\nLogical Or|\nLogical Not!\n\nThese operators are used for combining multiple comparison operations. Take a look at this example.\n\nIt is important to note that these operators will produce a single bit value like the comparison operators. Also anything that is not zero is considered to be true while zero is false.\n\nIn this example, c will have the value 1 because a and b are both non-zero.\nConditional Operator\nFunctionOperator\nConditional?\n\nThe conditional operator is a way to write compact if statements. It is used to select a value based on a logical value.\n\nIn this example d will have the value 4'b1010. When the expression on the left of the ? is true (non-zero) the value on the left of the : will be assigned. If the expression is false the value on the right is used. In this case since a is greater than b, the value of c was assigned to d.\n","id":"https://alchitry.com/tutorials/verilog/verilog-operators/","title":"Verilog Operators"},"https://alchitry.com/tutorials/your-first-fpga-project/":{"body":"This tutorial will walk you through creating your first project in Alchitry Labs and making the onboard LED light up when you press the\nreset button.\n\nBefore diving in, you will need to have the correct tools installed. See the setup tutorial for details.\nCreating a New Project\nFire up Alchitry Labs. You should be greeted with the following.\n\nSince we will be creating a new project, click the Create Project button.\nYou should then get a new dialog window for creating your project.\n\nYou can enter whatever you like for the Project Name. \nThe Workspace is the parent folder you want to store all your Alchitry projects in.\nI'm on a Linux system so your path will look different on Windows.\nFor Board, select the Alchitry board you have from the dropdown.\nI'll be using the Au, but everything in this tutorial is the same for any board.\nLeave Template set to Base Project. \nThis is the minimal starting point but feel free to take a look at the other options in the dropdown for future reference.\nOnce we are done with this tutorial, the project should be the same as the Button to LED template.\nFinally, click Create Project.\nThe project should be created and alchitryTop.luc should open automatically.\n\nOn the left hand side, you will see your project's tree.\nWe have a couple of source files and one constraint file.\nSource files contain your project's modules and constraint files specify physical constraints (most commonly what signal connects to which pin).\nFor now, look at the already open alchitryTop.luc.\nModules\nModules are the basic building block used in any HDL (Hardware Description Language) and Lucid is no exception.\nThey are similar to how functions are the building block of any programming language.\nModules are blocks with some number of ports (inputs and outputs) that can be connected other to other modules or external signals.\nThey can also contain other modules.\nRemember that we are working with hardware.\nThis means that each module you use will take up some space inside the FPGA.\nIf you use the same module twice, you will have two independent copies of that circuit.\nPorts\nLet's take a look at the module declaration for alchitry_top.\n\nHere we have a list of ports.\nThe direction of each port is specified by the input or output keyword.\nThere is also the inout keyword for bidirectional ports.\nBidirectional signals can't exist inside an FPGA so inout signals can only be used as external ports.\nAll the signals here are 1-bit wide except led which is declared as an 8-bit wide array with the [8] syntax.\nThe reason led is 8 bits wide is because the Alchitry boards have 8 LEDs on them.\nOne bit for each LED.\nThe alchitry_top module is what's known as the top-level module in our design.\nThat means that its ports connect to physical pin on the FPGA.\nWhat pins these actually connect to is defined in the alchitry.acf constraint file.\n\nThe syntax here is pin SIGNAL_NAME PYSICAL_PIN.\nThe PHYSICAL_PIN name is the name on the Alchitry board and is translated by the tools to the unique FPGA's pin name.\nMost of the time you write a constraint file yourself, you will be using names like A2 which would be pin 2 on bank A.\nSee the Br page for common pin names. \nThe Br reference card is also helpful for general pin capabilities.\nNote that the led signal has to have each of this individual bits assigned individually using the array indexing syntax [n] where n is the index.\nYou probably noticed that the first constraint wasn't a pin constraint but was rather a clock constraint.\nThese work the same as a pin constraint but have an additional parameter for how fast the clock is.\nAlchitry boards all have an onboard 100MHz clock.\nIf you don't know what a clock is or why this is important, don't worry.\nIt'll all be covered in a later tutorial.\nAlways Blocks\nLet's jump back to the alchitry_top module.\nThe first line declares a sig named rst. \nThe sig type (short for signal) acts like a wire to connect things.\nThey don't actually store any value and really just act like an alias for what is assigned to them.\nNext a reset_conditioner module is instantiated.\nThis is covered in the next tutorial, and we are going to skip it for now.\nJump down to the always block.\nAlways blocks are a concept, that again, exists in all HDLs.\nThey are where you describe the vast majority of your design's logic.\nThe block get its name because it is always happening.\nInside the block, you describe some behavior by reading/writing signals and performing various operations.\nThe tools will take that description and replicate it in hardware.\nIt is important to remember that you are creating a description of behavior.\nYou are not writing instructions as if it was a program even though it looks a lot like that.\nLet's take a look at the always block in alchitry_top.\n\nWhen the tools evaluate an always block, statements that appear lower in the block have high priority than previous statements.\nThis makes it feel like things are running sequentially from top to bottom but that is just an abstraction to make it easier to describe complex logic.\nTo make this clear, lets looks at an example.\n\nI know we haven't covered numbers yet, but 8h00 just means an 8-bit wide hex number of 00.\n8hFF is an 8-bit wide hex number of FF (all 1s).\nThe first line assigns all bits of led to 0 and the second line sets them all to 1.\nWhat would you expect to happen if we built this and loaded it onto the board?\nIf you have a programming background, you may be tempted to think that the LEDs would continuously turn on and off. \nYou're not in Kansas anymore Dorthy, this isn't programming and that's not what happens. \nRemember, there is no processor to run code (that is unless you explicitly make one, like a boss). \nWhen the tools see this block, they completely ignore the first line. \nThis is because the second line has higher priory. \nIf you were to synthesize this design, the tools would hard-wire led to 8hFF (all 1s).\nBack to our design, we are assigning four signals a value. \nEvery output on a module must have a value assigned to it at all times.\nSince this is the minimal boilerplate project template, these are just some reasonable defaults.\nRepresenting Values\nA value is made of one or more bits. \nThe number of bits a value has is known as its width. \nThere are a few ways to specify a value, some use an implied width while others allow you to explicitly set a width. \nIf you are unfamiliar with binary or hexadecimal please read the Encodings Tutorial before continuing.\nThe first way to represent a value is to just type a decimal number. \nFor example, 9.\nSometimes it’s easier to specify a number with a different radix than 10 (the implied default).\nLucid supports three different radix, 10 (decimal), 16 (hexadecimal), and 2 (binary).\nTo specify the radix, prepend d, h, or b to specify decimal, hexadecimal, or binary respectively.\nFor example, h_ff has the decimal value 255 and b100 has the decimal value 4.\nIf you don’t append a radix indicator, decimal is assumed.\nIt is important to remember that all number will be represented as bits in your circuit.\nWhen you specify a number this way, the width of the number will be the minimum number of bits required to represent that value for decimal. \nFor binary, it is simply the number of digits and for hexadecimal it is four times the number of digits. \nFor example, the value 7 will be three bits wide (b111), b1010 will be four bits wide, and h_acb will be 12 bits wide.\nSometimes you need more control over the exact width of a number.\nIn those cases you can specify the number of bits by prepending the number of bits and radix to the value. \nFor example, 4d2 will be the value 2 but using 4 bits instead of the minimum 2 (binary value b0010 instead of b10). \nYou must specify the radix when specifying the width to separate the width from the value.\nIf you specify a width smaller than the minimum number of bits required, the number will drop the most significant bits.\nWhen this happens you will get a warning.\nZ and X\nWhen you specify a decimal number, all the bits in your value will be either 0 or 1. \nHowever, each bit can actually be one of four values, 0, 1, x, or z. \nThese can be used in binary and hex constants.\nThe values of 0 and 1 are fairly self-explanatory, it just means the bit is high (1) or low (0). \nThe value of x means don't care. \nIt means you want to assign a value, but you really don't care if it is 1 or 0. \nThis is useful for the synthesizer because your circuit may be simpler in one of the cases, and it gives the tools the freedom to choose. \nDuring simulation, x also means unknown. \nZ means that the bit is high-impedance or tri-stated. \nThis means that it is effectively disconnected. \nNote that FPGAs can't realize high-impedance signals internally. \nThe only time you should use z is for output or inout ports of the top-level module or a module feeding directly to a top-level port.\nBack to our always block, the first two lines connect the input rst_n to the input of the reset_cond module. \nModules can be nested which makes it possible to reuse them and helps make your project manageable. \nThis is all covered later in more detail so don't get hung up over this yet. \nThe only important thing to know about these two lines, is that the rst_n signal is active low (0 when the button is pressed, 1 otherwise) while the rst signal is active high.\nThe next line assigns the led output to all zeros. This turns off all the LEDs.\nThe last line connects the serial input pin to the serial output pin effectively echoing anything the FPGA receives over the serial port. \nWe could have also tied this pin to 1 to disable it.\nLooking at this always block, we can see there are no redundant assignments (like in our led on/off example). \nThat means these signals will literally be connected to these values.\nConnecting the Button\nWe are going to modify the module to connect the reset button to the first LED so that when you push the button the LED\nturns on.\nTo do this we need to modify line 21, where led is assigned.\n\nThe output led is an 8 bit array. That means when you assign it a value you need to provide an 8 bit array. \nHowever, the signal rst is a single bit wide. To compensate for this we use the concatenation operator.\nTo concatenate multiple arrays into one, you can use the concatenation operator, c{ x, y, z }. \nHere the arrays (or single bit values) x, y, and z will be concatenated to form a larger array.\nIn our code we are concatenating the constant 7h0 with rst. \nThe constant here is seven zeros. \nSince we just need a bunch of zeros, the radix doesn’t really matter, and we could have used 7b0, or 7d0, for binary or decimal respectively.\nNote that values are zero padded if the specified width is larger than the size required to store the value. \nFor example, 4b11 would the same as 4b0011.\nIf you don’t care about how many bits a values takes up, you don’t have to specify it and the minimum number of bits will be used. \nHowever, when you are concatenating values, you should specify a width to make it obvious how big the array will be.\nSimulate the Project\nAlchitry Labs V2 has a built-in simulator we can use to test out our changes.\nClick the little bug icon in the toolbar and the simulator tab will open.\nYou should see a virtual version of your board.\n\nIf you click on the reset button in the bottom right, the top LED should turn on.\nBuild the Project\nWe can also build and run the project on real hardware.\nGo ahead and click the little hammer icon in the toolbar to build the project.\nYou may need to first specify where you installed the build tools. \nIf you installed them to their default location, they should be detected automatically.\nFor the Au, click the Alchitry logo and go to Settings-&gt;Set Vivado Location. \nSelect the Xilinx/Vivado/YEAR.MONTH folder for your Vivado install (where YEAR.MONTH is the version number).\nOn Windows, the default is C:\\Xilinx\\Vivado\\YEAR.MONTH.\nOn Linux, /opt/Xilinx/Vivado/YEAR.MONTH is assumed.\nFor the Cu, if you're using the open source tools, make sure that is selected.\nClick the Alchitry logo and check Settings-&gt;Cu Toolchain-&gt;Yosys (open source) is selected.\nIf you want to use i_cecube2, make sure it is selected in Settings-&gt;Cu Toolchain.\nYou will also have to set the location of the lscc/iCEcube2 folder with Settings-&gt;Set i_cecube2 Location and the license file with Settings-&gt;Set i_cecube2 License Location.\nOn Windows, the default is C:\\lscc\\i_cecube2.2020.12.\nOn Linux, ~/lscc/i_cecube2.2020.12 is assumed.\nThere is no default for the license file location.\nYou should now be able to build the project with whatever tools you selected.\nWhen the project is building, you will see a bunch of text dumped by the build tools to the console.\nJust wait for it to finish and it should look like this.\n\nThe important line here is where it says Project built successfully.\nThis means that Alchitry Labs was able to find the .bin file after the build tools exited.\nIf you ever get a red message telling you the bin file couldn't be found, you can look through the logs for the reason.\nLoading the Project\nMake sure your board is plugged into your computer.\nThe arrow and eraser icons in the toolbar should be enabled if your board was detected.\nAlchitry Labs is constantly looking for new boards.\nIf you have an Au, you will see two arrow icons. \nThe Cu will show only one.\nIn both cases, the solid arrow means the design will be loaded into persistent memory.\nInside the FPGA, the configuration is stored in RAM and is lost when power is lost.\nWhen it gets power again, it will read the on-board FLASH and automatically configure itself.\nWith the Au, you have the option via the hollow arrow to program the FPGA directly.\nThis is very fast but the configuration will be lost upon power cycling.\nThe eraser icon will clear the FLASH causing the FPGA to do nothing on power-up.\nClick the solid arrow to program the board.\n\nJust like the simulation, pushing the reset button should cause the first (top-most) LED to turn on.\nYou may have noticed the Done LED on the left side of your board.\nThis LED connects to the Done signal on the FPGA and will turn on when the FPGA is correctly configured.\nIt is not a power LED.\nIf you erase the FLASH using the eraser button then power cycle your board, the Done LED will not turn on until you program it again.\nThis signal is also broken out on bank D.\nIt is an open drain and can be used to synchronize the start of multiple FPGAs.\nThe FPGA will only start when the signal is high.\nSome Note on Hardware\nWhen you press the button, how long does it take for the LED to turn on? \nIf this was a processor instead of an FPGA, the processor would be in a loop reading the button state and turning the LED on or off based on that state. \nThe amount of time between pressing it and when the LED turns on would vary depending on what code the processor was executing and how long it is until it gets back to reading the button and turning the LED on. \nAs you add more code to your loop, this time and variation gets bigger.\nHowever, an FPGA is different. \nWith this design (note I said design and not code), the button input is directly connected to the LED output. \nYou can imagine a physical wire bridging the input to the output inside the FPGA. \nIn reality, it's not a wire but a set of switches (multiplexers) that are set to route the signal directly to the output.\nWell, this is only partially true since the reset_conditioner is there which does some stuff to clean up the reset signal.\nSince the signal doesn’t have to wait for a processor to read it, it will travel as fast as possible through the silicon to light the LED. \nThis is almost instant (again, forget about the reset_conditioner)! \nThe best part is that if you wire the button the LED then go on to create some crazy design with the rest of the FPGA, this will not slow down. \nThis is because the circuits will operate independently as they both simply exist. \nIt is this parallelism where FPGAs get their real power.\nDuplication\nWhat if we want all the LEDs to turn on and off with the press of the button instead of just one?\nWell we could do it using concatenation just like before by replacing line 21 with the following.\n\nHowever, there is a better way! This is where the array duplication syntax comes in handy. The syntax is M x{ A }.\nHere M is the number of times to duplicate A. That means we can make line 21 look like this.\n\nMuch cleaner! This does exactly the same thing as before, but requires a lot less typing.\nArray Indexing\nThere is an alternative way to write the code where we only want one LED to light. This is by assigning the parts of the\nled array separately.\n\nOn line 21, the bit selector [7:1] is used to select the bits 7 through 1 of the led array. These seven bits are set\nto 0.\nOn line 22, [0] is used to select the single bit, 0, and set it to rst.\nThere are two ways to select a group of bits. The first one (and most common) is the one used above where you specify\nthe start and stop bits (inclusive) explicitly. The other way is to specify a start bit and the total number of bits to\ninclude above or below the start bit.\nLine 21 could be rewritten as any of the following.\n\nThe benefit of using the start-width syntax is the width is guaranteed to be constant. This means you can use a signal\nto specify the start index. This will be covered in a later tutorial.\nAlways Blocks\nDue to the nature of always blocks, you could also write the LED assignment as follows.\n\nBecause the second statement has priority over the first, led[0] will actually NEVER have the value 0! It will be\npermanently connected to rst. Note that the second line only assigns the first bit of led. That means that the other\n7 bits will still receive their value from the first statement.\nThis is one of the weird things of working with hardware. The code you write is not run on a processor like it is when\nyou program. Instead, the code you write is interpreted by the tools to figure out what behavior you want. The tools\nthen create a circuit that will match that behavior.\nAlways blocks are an easy way to describe complex behavior, but the way you describe the behavior, and it's actual\nimplementation can vary.\nCongratulations! You've finished your first Lucid tutorial.\n","id":"https://alchitry.com/tutorials/your-first-fpga-project/","title":"Your First FPGA Project"}},"docInfo":{"https://alchitry.com/":{"body":0,"title":0},"https://alchitry.com/alchitry-labs/":{"body":307,"title":2},"https://alchitry.com/boards/":{"body":0,"title":2},"https://alchitry.com/boards/au/":{"body":227,"title":2},"https://alchitry.com/boards/br/":{"body":51,"title":2},"https://alchitry.com/boards/cu/":{"body":174,"title":2},"https://alchitry.com/boards/ft/":{"body":86,"title":2},"https://alchitry.com/boards/io/":{"body":95,"title":2},"https://alchitry.com/home/":{"body":8,"title":1},"https://alchitry.com/news/":{"body":0,"title":1},"https://alchitry.com/news/alchitry-labs-v2-0-13-verilog/":{"body":370,"title":5},"https://alchitry.com/news/alchitry-labs-v2-0-21-acf/":{"body":493,"title":6},"https://alchitry.com/news/alchitry-labs-v2-0-24/":{"body":533,"title":5},"https://alchitry.com/news/alchitry-labs-v2-0-5-simulations/":{"body":395,"title":4},"https://alchitry.com/news/alchitry-labs-v2-0-8/":{"body":239,"title":3},"https://alchitry.com/news/alchitry-labs-v2-beta/":{"body":606,"title":5},"https://alchitry.com/news/alchitry-labs-v2-cli/":{"body":276,"title":6},"https://alchitry.com/news/alchitry-labs-v2-snake-case/":{"body":176,"title":4},"https://alchitry.com/news/alchitry-labs-v2-update-1/":{"body":506,"title":5},"https://alchitry.com/news/alchitry-labs-v2-update-2/":{"body":481,"title":5},"https://alchitry.com/news/alchitry-labs-v2-update-3/":{"body":143,"title":5},"https://alchitry.com/news/alchitry-labs-v2/":{"body":298,"title":3},"https://alchitry.com/news/alchitry-loader-v2/":{"body":146,"title":3},"https://alchitry.com/news/alchitry-platinum-v2/":{"body":304,"title":4},"https://alchitry.com/news/alchitry-v2-design-update/":{"body":178,"title":4},"https://alchitry.com/news/alchitry-v2/":{"body":236,"title":4},"https://alchitry.com/news/icecube2-no-longer-free/":{"body":159,"title":3},"https://alchitry.com/news/lucid-1-vs-2/":{"body":469,"title":3},"https://alchitry.com/news/lucid-v2-update-1/":{"body":231,"title":4},"https://alchitry.com/news/lucid-v2-update-2/":{"body":419,"title":6},"https://alchitry.com/news/lucid-v2/":{"body":531,"title":2},"https://alchitry.com/news/new-site-new-forum-new-labs/":{"body":835,"title":7},"https://alchitry.com/tags/":{"body":0,"title":1},"https://alchitry.com/tutorials/":{"body":44,"title":1},"https://alchitry.com/tutorials/alchitry-constraints-reference/":{"body":1014,"title":3},"https://alchitry.com/tutorials/background/":{"body":11,"title":1},"https://alchitry.com/tutorials/background/addition/":{"body":347,"title":1},"https://alchitry.com/tutorials/background/combinational-logic/":{"body":419,"title":2},"https://alchitry.com/tutorials/background/digital-logic/":{"body":384,"title":2},"https://alchitry.com/tutorials/background/encodings/":{"body":559,"title":1},"https://alchitry.com/tutorials/background/how-does-an-fpga-work/":{"body":578,"title":2},"https://alchitry.com/tutorials/background/multiplexers/":{"body":138,"title":1},"https://alchitry.com/tutorials/background/subtraction/":{"body":223,"title":1},"https://alchitry.com/tutorials/background/what-is-an-fpga/":{"body":329,"title":1},"https://alchitry.com/tutorials/ddr3-memory/":{"body":1742,"title":2},"https://alchitry.com/tutorials/hello-your-name-here/":{"body":680,"title":2},"https://alchitry.com/tutorials/io-element/":{"body":2729,"title":2},"https://alchitry.com/tutorials/lucid-reference/":{"body":3793,"title":2},"https://alchitry.com/tutorials/lucid_v1/":{"body":8,"title":2},"https://alchitry.com/tutorials/lucid_v1/components/":{"body":510,"title":1},"https://alchitry.com/tutorials/lucid_v1/ddr3-memory/":{"body":1807,"title":2},"https://alchitry.com/tutorials/lucid_v1/hello-your-name-here/":{"body":882,"title":2},"https://alchitry.com/tutorials/lucid_v1/io-element/":{"body":2625,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/":{"body":5,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/analog-inputs/":{"body":472,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/basic-cpu/":{"body":1405,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/camera/":{"body":1258,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/components/":{"body":456,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/external-io/":{"body":935,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/hdmi/":{"body":1141,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/hello-your-name-here/":{"body":4,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/io-shield/":{"body":5,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/register-interface/":{"body":589,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/roms-and-fsms/":{"body":939,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/sdram/":{"body":2012,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/servos/":{"body":723,"title":1},"https://alchitry.com/tutorials/lucid_v1/mojo/sound-locating/":{"body":3049,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/synchronous-logic/":{"body":4,"title":2},"https://alchitry.com/tutorials/lucid_v1/mojo/your-first-fpga-project/":{"body":1624,"title":3},"https://alchitry.com/tutorials/lucid_v1/roms-and-fsms/":{"body":976,"title":2},"https://alchitry.com/tutorials/lucid_v1/synchronous-logic/":{"body":1259,"title":2},"https://alchitry.com/tutorials/lucid_v1/your-first-fpga-project/":{"body":1627,"title":3},"https://alchitry.com/tutorials/mojo/":{"body":0,"title":1},"https://alchitry.com/tutorials/mojo/arduino-setup/":{"body":486,"title":4},"https://alchitry.com/tutorials/mojo/mojo-bootloader/":{"body":193,"title":2},"https://alchitry.com/tutorials/mojo/update-the-mojo/":{"body":521,"title":2},"https://alchitry.com/tutorials/projects/":{"body":0,"title":1},"https://alchitry.com/tutorials/projects/clock-clock/":{"body":6,"title":2},"https://alchitry.com/tutorials/projects/gpu/":{"body":1573,"title":1},"https://alchitry.com/tutorials/projects/hexapod/":{"body":1214,"title":1},"https://alchitry.com/tutorials/register-interface/":{"body":700,"title":2},"https://alchitry.com/tutorials/roms-and-fsms/":{"body":1030,"title":2},"https://alchitry.com/tutorials/serial-interface/":{"body":542,"title":2},"https://alchitry.com/tutorials/setup/":{"body":145,"title":1},"https://alchitry.com/tutorials/setup/icecube2/":{"body":285,"title":2},"https://alchitry.com/tutorials/setup/ise/":{"body":674,"title":2},"https://alchitry.com/tutorials/setup/vivado/":{"body":207,"title":2},"https://alchitry.com/tutorials/synchronous-logic/":{"body":1377,"title":2},"https://alchitry.com/tutorials/verilog/":{"body":13,"title":1},"https://alchitry.com/tutorials/verilog/creating-a-vivado-project/":{"body":773,"title":3},"https://alchitry.com/tutorials/verilog/mojo/":{"body":17,"title":1},"https://alchitry.com/tutorials/verilog/mojo/analog-inputs/":{"body":278,"title":2},"https://alchitry.com/tutorials/verilog/mojo/asynchronous-serial/":{"body":452,"title":2},"https://alchitry.com/tutorials/verilog/mojo/avr-interface/":{"body":495,"title":2},"https://alchitry.com/tutorials/verilog/mojo/creating-an-ise-project/":{"body":663,"title":3},"https://alchitry.com/tutorials/verilog/mojo/embedded-processors/":{"body":778,"title":2},"https://alchitry.com/tutorials/verilog/mojo/external-io/":{"body":370,"title":2},"https://alchitry.com/tutorials/verilog/mojo/finite-state-machines/":{"body":496,"title":3},"https://alchitry.com/tutorials/verilog/mojo/fpga-timing/":{"body":1356,"title":2},"https://alchitry.com/tutorials/verilog/mojo/hello-world/":{"body":723,"title":2},"https://alchitry.com/tutorials/verilog/mojo/memory-mapping/":{"body":763,"title":2},"https://alchitry.com/tutorials/verilog/mojo/metastability-and-debouncing/":{"body":439,"title":2},"https://alchitry.com/tutorials/verilog/mojo/pulse-width-modulation/":{"body":946,"title":3},"https://alchitry.com/tutorials/verilog/mojo/sdram/":{"body":1536,"title":1},"https://alchitry.com/tutorials/verilog/mojo/serial-peripheral-interface/":{"body":476,"title":4},"https://alchitry.com/tutorials/verilog/mojo/servos/":{"body":337,"title":1},"https://alchitry.com/tutorials/verilog/mojo/synchronous-logic/":{"body":1054,"title":2},"https://alchitry.com/tutorials/verilog/mojo/using-core-generator/":{"body":442,"title":3},"https://alchitry.com/tutorials/verilog/mojo/writing-test-benches/":{"body":757,"title":3},"https://alchitry.com/tutorials/verilog/verilog-operators/":{"body":773,"title":2},"https://alchitry.com/tutorials/your-first-fpga-project/":{"body":1732,"title":3}},"length":111},"lang":"English"}